diff --git a/repositories.bzl b/repositories.bzl
index 7912c917..ed04ebc8 100644
--- a/repositories.bzl
+++ b/repositories.bzl
@@ -15,7 +15,6 @@
 load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
 load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
 load("//third_party:bazel.bzl", "bazel_sha256", "bazel_version")
-load("//third_party:bazel_buildtools.bzl", "buildtools_sha256", "buildtools_version")
 load("//third_party:bazel_skylib.bzl", "skylib_sha256", "skylib_version")
 
 def copybara_repositories():
@@ -39,27 +38,6 @@ def copybara_repositories():
         # sha256 = RULES_JVM_EXTERNAL_SHA,
         strip_prefix = "rules_jvm_external-%s" % RULES_JVM_EXTERNAL_TAG,
         url = "https://github.com/bazelbuild/rules_jvm_external/archive/%s.zip" % RULES_JVM_EXTERNAL_TAG,
-        patches = ["@io_bazel//third_party:rules_jvm_external_6.0.patch"],
-        patch_args = ["-p1"],
-    )
-
-    # LICENSE: The Apache Software License, Version 2.0
-    maybe(
-        http_archive,
-        name = "io_bazel",
-        sha256 = bazel_sha256,
-        strip_prefix = "bazel-" + bazel_version,
-        url = "https://github.com/bazelbuild/bazel/archive/" + bazel_version + ".zip",
-    )
-
-    # LICENSE: The Apache Software License, Version 2.0
-    # Buildifier and friends:
-    maybe(
-        http_archive,
-        name = "buildtools",
-        sha256 = buildtools_sha256,
-        strip_prefix = "buildtools-" + buildtools_version,
-        url = "https://github.com/bazelbuild/buildtools/archive/" + buildtools_version + ".zip",
     )
 
     # LICENSE: The Apache Software License, Version 2.0
@@ -173,6 +151,33 @@ def copybara_repositories():
         ],
     )
 
+    # LICENSE: MIT
+    maybe(
+        http_archive,
+        name = "buildifier_prebuilt",
+        sha256 = "8ada9d88e51ebf5a1fdff37d75ed41d51f5e677cdbeafb0a22dda54747d6e07e",
+        strip_prefix = "buildifier-prebuilt-6.4.0",
+        urls = [
+            "http://github.com/keith/buildifier-prebuilt/archive/6.4.0.tar.gz",
+        ],
+    )
+
+    _non_module_deps(None)
+
+def _non_module_deps(_):
+    # LICENSE: The Apache Software License, Version 2.0
+    maybe(
+        http_archive,
+        name = "io_bazel",
+        sha256 = bazel_sha256,
+        strip_prefix = "bazel-" + bazel_version,
+        url = "https://github.com/bazelbuild/bazel/archive/" + bazel_version + ".zip",
+        patch_args = ["-p1"],
+        patches = [
+            "//third_party/bazel:bazel.patch",
+        ],
+    )
+
     # LICENSE: The Apache Software License, Version 2.0
     maybe(
         http_archive,
@@ -183,3 +188,5 @@ def copybara_repositories():
         ],
         build_file = Label("//external/third_party:jcommander.BUILD"),
     )
+
+non_module_deps = module_extension(implementation = _non_module_deps)
diff --git a/third_party/BUILD b/third_party/BUILD
index b29dbe2d..99771f48 100644
--- a/third_party/BUILD
+++ b/third_party/BUILD
@@ -15,8 +15,8 @@ package(
 java_library(
     name = "guava",
     exports = [
-        "@maven//:com_google_guava_failureaccess",
-        "@maven//:com_google_guava_guava",
+        "@copybara_maven//:com_google_guava_failureaccess",
+        "@copybara_maven//:com_google_guava_guava",
     ],
 )
 
@@ -24,21 +24,21 @@ java_library(
     name = "guava_testlib",
     testonly = 1,
     exports = [
-        "@maven//:com_google_guava_guava_testlib",
+        "@copybara_maven//:com_google_guava_guava_testlib",
     ],
 )
 
 java_library(
     name = "apache_commons_compress",
     exports = [
-        "@maven//:org_apache_commons_commons_compress",
+        "@copybara_maven//:org_apache_commons_commons_compress",
     ],
 )
 
 java_library(
     name = "autocommon",
     exports = [
-        "@maven//:com_google_auto_auto_common",
+        "@copybara_maven//:com_google_auto_auto_common",
     ],
 )
 
@@ -46,8 +46,8 @@ java_plugin(
     name = "autovalue_plugin",
     processor_class = "com.google.auto.value.processor.AutoValueProcessor",
     deps = [
-        "@maven//:com_google_auto_value_auto_value",
-        "@maven//:com_google_auto_value_auto_value_annotations",
+        "@copybara_maven//:com_google_auto_value_auto_value",
+        "@copybara_maven//:com_google_auto_value_auto_value_annotations",
     ],
 )
 
@@ -59,8 +59,8 @@ java_library(
     # TODO(matvore): What to export to give access to @AutoValue annotation
     # without depending on the processor at runtime?
     exports = [
-        "@maven//:com_google_auto_value_auto_value",
-        "@maven//:com_google_auto_value_auto_value_annotations",
+        "@copybara_maven//:com_google_auto_value_auto_value",
+        "@copybara_maven//:com_google_auto_value_auto_value_annotations",
     ],
 )
 
@@ -74,7 +74,7 @@ java_library(
 java_library(
     name = "jimfs",
     exports = [
-        "@maven//:com_google_jimfs_jimfs",
+        "@copybara_maven//:com_google_jimfs_jimfs",
     ],
 )
 
@@ -82,7 +82,7 @@ java_library(
     name = "junit",
     testonly = 1,
     exports = [
-        "@maven//:junit_junit",
+        "@copybara_maven//:junit_junit",
     ],
 )
 
@@ -90,14 +90,14 @@ java_library(
     name = "testparameterinjector",
     testonly = 1,
     exports = [
-        "@maven//:com_google_testparameterinjector_test_parameter_injector",
+        "@copybara_maven//:com_google_testparameterinjector_test_parameter_injector",
     ],
 )
 
 java_library(
     name = "re2j",
     exports = [
-        "@maven//:com_google_re2j_re2j",
+        "@copybara_maven//:com_google_re2j_re2j",
     ],
 )
 
@@ -112,16 +112,16 @@ java_library(
     name = "truth",
     testonly = 1,
     exports = [
-        "@maven//:com_google_truth_extensions_truth_java8_extension",
-        "@maven//:com_google_truth_truth",
-        "@maven//:com_googlecode_java_diff_utils_diffutils",
+        "@copybara_maven//:com_google_truth_extensions_truth_java8_extension",
+        "@copybara_maven//:com_google_truth_truth",
+        "@copybara_maven//:com_googlecode_java_diff_utils_diffutils",
     ],
 )
 
 java_library(
     name = "google_code_gson",
     exports = [
-        "@maven//:com_google_code_gson_gson",
+        "@copybara_maven//:com_google_code_gson_gson",
     ],
 )
 
@@ -129,9 +129,9 @@ java_library(
     name = "google_http_client",
     exports = [
         ":google_code_gson",
-        "@maven//:com_google_http_client_google_http_client",
-        "@maven//:com_google_http_client_google_http_client_gson",
-        "@maven//:commons_codec_commons_codec",
+        "@copybara_maven//:com_google_http_client_google_http_client",
+        "@copybara_maven//:com_google_http_client_google_http_client_gson",
+        "@copybara_maven//:commons_codec_commons_codec",
     ],
 )
 
@@ -139,7 +139,7 @@ java_library(
     name = "google_http_client_test",
     testonly = 1,
     exports = [
-        "@maven//:com_google_http_client_google_http_client_test",
+        "@copybara_maven//:com_google_http_client_google_http_client_test",
     ],
 )
 
@@ -147,19 +147,19 @@ java_library(
     name = "mockito",
     testonly = 1,
     exports = [
-        "@maven//:org_mockito_mockito_core",
+        "@copybara_maven//:org_mockito_mockito_core",
     ],
     runtime_deps = [
-        "@maven//:net_bytebuddy_byte_buddy",
-        "@maven//:net_bytebuddy_byte_buddy_agent",
-        "@maven//:org_objenesis_objenesis",
+        "@copybara_maven//:net_bytebuddy_byte_buddy",
+        "@copybara_maven//:net_bytebuddy_byte_buddy_agent",
+        "@copybara_maven//:org_objenesis_objenesis",
     ],
 )
 
 java_library(
     name = "jsr305",
     exports = [
-        "@maven//:com_google_code_findbugs_jsr305",
+        "@copybara_maven//:com_google_code_findbugs_jsr305",
     ],
 )
 
@@ -176,10 +176,10 @@ java_library(
 java_library(
     name = "flogger",
     exports = [
-        "@maven//:com_google_flogger_flogger",
+        "@copybara_maven//:com_google_flogger_flogger",
     ],
     runtime_deps = [
-        "@maven//:com_google_flogger_flogger_system_backend",
+        "@copybara_maven//:com_google_flogger_flogger_system_backend",
     ],
 )
 
@@ -201,28 +201,28 @@ java_library(
 java_library(
     name = "tomlj",
     exports = [
-        "@maven//:org_tomlj_tomlj",
+        "@copybara_maven//:org_tomlj_tomlj",
     ],
 )
 
 java_library(
     name = "jsoup",
     exports = [
-        "@maven//:org_jsoup_jsoup",
+        "@copybara_maven//:org_jsoup_jsoup",
     ],
 )
 
 java_library(
     name = "sun_mail",
     exports = [
-        "@maven//:com_sun_mail_javax_mail",
+        "@copybara_maven//:com_sun_mail_javax_mail",
     ],
 )
 
 java_library(
     name = "protobuf_lite",
     exports = [
-        "@maven//:com_google_protobuf_protobuf_lite",
+        "@copybara_maven//:com_google_protobuf_protobuf_lite",
     ],
 )
 
diff --git a/third_party/bazel/BUILD b/third_party/bazel/BUILD
index 12b3cf49..0a19ed09 100644
--- a/third_party/bazel/BUILD
+++ b/third_party/bazel/BUILD
@@ -9,5 +9,5 @@ package(
 java_library(
     name = "shell",
     srcs = glob(["main/**/*.java"]),
-    deps = ["@maven//:com_google_guava_guava"],
+    deps = ["@copybara_maven//:com_google_guava_guava"],
 )
diff --git a/third_party/bazel/bazel.patch b/third_party/bazel/bazel.patch
new file mode 100644
index 00000000..881356b3
--- /dev/null
+++ b/third_party/bazel/bazel.patch
@@ -0,0 +1,194 @@
+diff --git a/third_party/BUILD b/third_party/BUILD
+index 262577182a..1bf4666b53 100644
+--- a/third_party/BUILD
++++ b/third_party/BUILD
+@@ -250,8 +250,8 @@ java_library(
+ distrib_jar_filegroup(
+     name = "auto_value-jars",
+     srcs = [
+-        "@maven//:com_google_auto_value_auto_value_annotations_file",
+-        "@maven//:com_google_auto_value_auto_value_file",
++        "@maven//:com_google_auto_value_auto_value",
++        "@maven//:com_google_auto_value_auto_value_annotations",
+     ],
+     enable_distributions = ["debian"],
+ )
+@@ -305,8 +305,8 @@ java_library(
+ distrib_jar_filegroup(
+     name = "error_prone_annotations-jar",
+     srcs = [
+-        "@maven//:com_google_errorprone_error_prone_annotations_file",
+-        "@maven//:org_threeten_threeten_extra_file",
++        "@maven//:com_google_errorprone_error_prone_annotations",
++        "@maven//:org_threeten_threeten_extra",
+     ],
+     enable_distributions = ["debian"],
+ )
+@@ -329,7 +329,7 @@ alias(
+ distrib_jar_filegroup(
+     name = "jcip_annotations-jars",
+     srcs = [
+-        "@maven//:com_github_stephenc_jcip_jcip_annotations_file",
++        "@maven//:com_github_stephenc_jcip_jcip_annotations",
+     ],
+     enable_distributions = ["debian"],
+ )
+@@ -352,17 +352,15 @@ filegroup(
+ 
+ # TODO(https://github.com/bazelbuild/bazel/issues/18214): After fixing Guava leak
+ # in test-runner, the guava target can be reverted back to java_library
+-java_import(
++java_library(
+     name = "guava",
+     applicable_licenses = [":guava_license"],
+-    jars = [
+-        "@maven//:com_google_guava_guava_file",
+-        "@maven//:com_google_guava_failureaccess_file",
+-    ],
+     exports = [
+         ":error_prone_annotations",
+         ":jcip_annotations",
+         ":jsr305",
++        "@maven//:com_google_guava_failureaccess",
++        "@maven//:com_google_guava_guava",
+     ],
+ )
+ 
+@@ -396,9 +394,9 @@ license(
+ distrib_jar_filegroup(
+     name = "flogger-jars",
+     srcs = [
+-        "@maven//:com_google_flogger_flogger_file",
+-        "@maven//:com_google_flogger_flogger_system_backend_file",
+-        "@maven//:com_google_flogger_google_extensions_file",
++        "@maven//:com_google_flogger_flogger",
++        "@maven//:com_google_flogger_flogger_system_backend",
++        "@maven//:com_google_flogger_google_extensions",
+     ],
+     enable_distributions = ["debian"],
+ )
+@@ -406,14 +404,14 @@ distrib_jar_filegroup(
+ # For bootstrapping JavaBuilder
+ distrib_jar_filegroup(
+     name = "guava-jars",
+-    srcs = ["@maven//:com_google_guava_guava_file"],
++    srcs = ["@maven//:com_google_guava_guava"],
+     enable_distributions = ["debian"],
+ )
+ 
+ # For desugaring the Guava jar.
+ distrib_jar_filegroup(
+     name = "guava-failureaccess-jar",
+-    srcs = ["@maven//:com_google_guava_failureaccess_file"],
++    srcs = ["@maven//:com_google_guava_failureaccess"],
+     enable_distributions = ["debian"],
+ )
+ 
+@@ -443,7 +441,7 @@ alias(
+ # For bootstrapping JavaBuilder
+ distrib_jar_filegroup(
+     name = "jsr305-jars",
+-    srcs = ["@maven//:com_google_code_findbugs_jsr305_file"],
++    srcs = ["@maven//:com_google_code_findbugs_jsr305"],
+     enable_distributions = ["debian"],
+ )
+ 
+@@ -475,11 +473,11 @@ UNNECESSARY_DYNAMIC_LIBRARIES = select({
+ genrule(
+     name = "filter_netty_dynamic_libs",
+     srcs = select({
+-        "//src/conditions:darwin_arm64": ["@maven//:io_netty_netty_tcnative_boringssl_static_osx_aarch_64_file"],
+-        "//src/conditions:darwin_x86_64": ["@maven//:io_netty_netty_tcnative_boringssl_static_osx_x86_64_file"],
+-        "//src/conditions:linux_aarch64": ["@maven//:io_netty_netty_tcnative_boringssl_static_linux_aarch_64_file"],
+-        "//src/conditions:linux_x86_64": ["@maven//:io_netty_netty_tcnative_boringssl_static_linux_x86_64_file"],
+-        "//src/conditions:windows": ["@maven//:io_netty_netty_tcnative_boringssl_static_windows_x86_64_file"],
++        "//src/conditions:darwin_arm64": ["@maven//:io_netty_netty_tcnative_boringssl_static_osx_aarch_64"],
++        "//src/conditions:darwin_x86_64": ["@maven//:io_netty_netty_tcnative_boringssl_static_osx_x86_64"],
++        "//src/conditions:linux_aarch64": ["@maven//:io_netty_netty_tcnative_boringssl_static_linux_aarch_64"],
++        "//src/conditions:linux_x86_64": ["@maven//:io_netty_netty_tcnative_boringssl_static_linux_x86_64"],
++        "//src/conditions:windows": ["@maven//:io_netty_netty_tcnative_boringssl_static_windows_x86_64"],
+         "//conditions:default": [],
+     }),
+     outs = ["netty_tcnative/netty-tcnative-filtered.jar"],
+@@ -493,31 +491,31 @@ distrib_java_import(
+     name = "netty",
+     enable_distributions = ["debian"],
+     jars = [
+-        "@maven//:io_netty_netty_buffer_file",
+-        "@maven//:io_netty_netty_codec_file",
+-        "@maven//:io_netty_netty_codec_http2_file",
+-        "@maven//:io_netty_netty_codec_http_file",
+-        "@maven//:io_netty_netty_common_file",
+-        "@maven//:io_netty_netty_handler_file",
+-        "@maven//:io_netty_netty_handler_proxy_file",
+-        "@maven//:io_netty_netty_resolver_file",
+-        "@maven//:io_netty_netty_resolver_dns_file",
+-        "@maven//:io_netty_netty_transport_file",
+-        "@maven//:io_netty_netty_transport_classes_epoll_file",
+-        "@maven//:io_netty_netty_transport_classes_kqueue_file",
++        "@maven//:io_netty_netty_buffer",
++        "@maven//:io_netty_netty_codec",
++        "@maven//:io_netty_netty_codec_http2",
++        "@maven//:io_netty_netty_codec_http",
++        "@maven//:io_netty_netty_common",
++        "@maven//:io_netty_netty_handler",
++        "@maven//:io_netty_netty_handler_proxy",
++        "@maven//:io_netty_netty_resolver",
++        "@maven//:io_netty_netty_resolver_dns",
++        "@maven//:io_netty_netty_transport",
++        "@maven//:io_netty_netty_transport_classes_epoll",
++        "@maven//:io_netty_netty_transport_classes_kqueue",
+     ] + select({
+-        "//src/conditions:darwin_arm64": ["@maven//:io_netty_netty_transport_native_unix_common_osx_aarch_64_file"],
+-        "//src/conditions:darwin_x86_64": ["@maven//:io_netty_netty_transport_native_unix_common_osx_x86_64_file"],
+-        "//src/conditions:linux_aarch64": ["@maven//:io_netty_netty_transport_native_unix_common_linux_aarch_64_file"],
+-        "//src/conditions:linux_x86_64": ["@maven//:io_netty_netty_transport_native_unix_common_linux_x86_64_file"],
+-        "//conditions:default": ["@maven//:io_netty_netty_transport_native_unix_common_file"],
++        "//src/conditions:darwin_arm64": ["@maven//:io_netty_netty_transport_native_unix_common_osx_aarch_64"],
++        "//src/conditions:darwin_x86_64": ["@maven//:io_netty_netty_transport_native_unix_common_osx_x86_64"],
++        "//src/conditions:linux_aarch64": ["@maven//:io_netty_netty_transport_native_unix_common_linux_aarch_64"],
++        "//src/conditions:linux_x86_64": ["@maven//:io_netty_netty_transport_native_unix_common_linux_x86_64"],
++        "//conditions:default": ["@maven//:io_netty_netty_transport_native_unix_common"],
+     }) + select({
+-        "//src/conditions:darwin_arm64": ["@maven//:io_netty_netty_transport_native_kqueue_osx_aarch_64_file"],
+-        "//src/conditions:darwin_x86_64": ["@maven//:io_netty_netty_transport_native_kqueue_osx_x86_64_file"],
++        "//src/conditions:darwin_arm64": ["@maven//:io_netty_netty_transport_native_kqueue_osx_aarch_64"],
++        "//src/conditions:darwin_x86_64": ["@maven//:io_netty_netty_transport_native_kqueue_osx_x86_64"],
+         "//conditions:default": [],
+     }) + select({
+-        "//src/conditions:linux_aarch64": ["@maven//:io_netty_netty_transport_native_epoll_linux_aarch_64_file"],
+-        "//src/conditions:linux_x86_64": ["@maven//:io_netty_netty_transport_native_epoll_linux_x86_64_file"],
++        "//src/conditions:linux_aarch64": ["@maven//:io_netty_netty_transport_native_epoll_linux_aarch_64"],
++        "//src/conditions:linux_x86_64": ["@maven//:io_netty_netty_transport_native_epoll_linux_x86_64"],
+         "//conditions:default": [],
+     }),
+ )
+@@ -526,7 +524,7 @@ distrib_java_import(
+     name = "netty_tcnative",
+     enable_distributions = ["debian"],
+     jars = [
+-        "@maven//:io_netty_netty_tcnative_classes_file",
++        "@maven//:io_netty_netty_tcnative_classes",
+     ] + select({
+         "//src/conditions:darwin_arm64": [":netty_tcnative/netty-tcnative-filtered.jar"],
+         "//src/conditions:darwin_x86_64": [":netty_tcnative/netty-tcnative-filtered.jar"],
+@@ -545,7 +543,7 @@ alias(
+ # For bootstrapping JavaBuilder
+ distrib_jar_filegroup(
+     name = "tomcat_annotations_api-jars",
+-    srcs = ["@maven//:org_apache_tomcat_tomcat_annotations_api_file"],
++    srcs = ["@maven//:org_apache_tomcat_tomcat_annotations_api"],
+     enable_distributions = ["debian"],
+ )
+ 
+@@ -618,8 +616,8 @@ alias(
+ filegroup(
+     name = "junit4-jars",
+     srcs = [
+-        "@maven//:junit_junit_file",
+-        "@maven//:org_hamcrest_hamcrest_core_file",
++        "@maven//:junit_junit",
++        "@maven//:org_hamcrest_hamcrest_core",
+     ],
+ )
+ 
