diff --git a/lanelet2_io/test/TestBinHandler.cpp b/lanelet2_io/test/TestBinHandler.cpp
index c9868ab..a2c1b75 100644
--- a/lanelet2_io/test/TestBinHandler.cpp
+++ b/lanelet2_io/test/TestBinHandler.cpp
@@ -115,7 +115,7 @@ TEST(BinHandler, explicitIO) {  // NOLINT
 
 TEST(BinHandler, fullMap) {
   Origin origin({49, 8.4, 0});
-  std::string filenameIn = "../../lanelet2_maps/res/mapping_example.osm";
+  std::string filenameIn = "../lanelet2~/lanelet2_maps/res/mapping_example.osm";
   auto map = lanelet::load(filenameIn, origin);
   auto llt = map->laneletLayer.find(44968);
   writeAndLoad(*llt);
diff --git a/lanelet2_io/test/TestSimpleUsage.cpp b/lanelet2_io/test/TestSimpleUsage.cpp
index 792f69d..a21fa86 100644
--- a/lanelet2_io/test/TestSimpleUsage.cpp
+++ b/lanelet2_io/test/TestSimpleUsage.cpp
@@ -5,7 +5,7 @@
 TEST(lanelet2_io, exampleUsage) {  // NOLINT
   using namespace lanelet;
   Origin origin({49, 8.4, 0});
-  std::string filenameIn = "../../lanelet2_maps/res/mapping_example.osm";
+  std::string filenameIn = "../lanelet2~/lanelet2_maps/res/mapping_example.osm";
   LaneletMapPtr laneletMap = lanelet::load(filenameIn, origin);
 
   lanelet::test_setup::Tempfile file("file.osm");
diff --git a/lanelet2_validation/test/lanelet2_validation.cpp b/lanelet2_validation/test/lanelet2_validation.cpp
index 3e30df4..47d4c83 100644
--- a/lanelet2_validation/test/lanelet2_validation.cpp
+++ b/lanelet2_validation/test/lanelet2_validation.cpp
@@ -9,7 +9,7 @@
 #include "lanelet2_validation/Validation.h"
 
 TEST(TestAllValidators, onExampleMap) {  // NOLINT
-  const char* args[] = {"validator",      "../../lanelet2_maps/res/mapping_example.osm",
+  const char* args[] = {"validator",      "../lanelet2~/lanelet2_maps/res/mapping_example.osm",
                         "--participants", "vehicle",
                         "--participants", "pedestrian",
                         "--lat",          "49",
@@ -32,7 +32,7 @@ TEST(Validator, pointsTooClose) {  // NOLINT
 }
 
 TEST(Validator, curvatureTooBig) {  // NOLINT
-  std::string exampleMapPath = "../../lanelet2_maps/res/mapping_example.osm";
+  std::string exampleMapPath = "../lanelet2~/lanelet2_maps/res/mapping_example.osm";
   using namespace lanelet;
   projection::UtmProjector projector(Origin({49, 8.4}));
   LaneletMapPtr map = load(exampleMapPath, projector);
