--- /dev/null
+++ tests/libfstree/BUILD.bazel
@@ -0,0 +1,60 @@
+load("@rules_cc//cc:defs.bzl", "cc_test")
+load("//:defines.bzl", "DEFINES")
+load("//:pthread.bzl", "COPTS", "LINKOPTS")
+
+[
+    cc_test(
+        name = "{}".format(file),
+        srcs = ["{}.c".format(file)],
+        copts = COPTS,
+        linkopts = LINKOPTS,
+        linkstatic = True,
+        local_defines = DEFINES,
+        deps = deps,
+    )
+    for file, deps in {
+        "fstree_init": [
+            "//lib/compat:compat",
+            "//lib/fstree:fstree",
+            "//lib/io:io",
+            "//lib/util:util",
+        ],
+        "fstree_sort": [
+            "//lib/compat:compat",
+            "//lib/fstree:fstree",
+            "//lib/io:io",
+            "//lib/util:util",
+        ],
+        "add_by_path": [
+            "//lib/compat:compat",
+            "//lib/fstree:fstree",
+            "//lib/util:util",
+        ],
+        "gen_inode_numbers": [
+            "//lib/compat:compat",
+            "//lib/fstree:fstree",
+            "//lib/util:util",
+        ],
+        "get_path": [
+            "//lib/compat:compat",
+            "//lib/fstree:fstree",
+            "//lib/util:util",
+        ],
+        "mknode_dir": [
+            "//lib/compat:compat",
+            "//lib/fstree:fstree",
+        ],
+        "mknode_reg": [
+            "//lib/compat:compat",
+            "//lib/fstree:fstree",
+        ],
+        "mknode_simple": [
+            "//lib/compat:compat",
+            "//lib/fstree:fstree",
+        ],
+        "mknode_slink": [
+            "//lib/compat:compat",
+            "//lib/fstree:fstree",
+        ],
+    }.items()
+]
