diff --git a/.gitignore b/.gitignore
index 34e18b44..044b2b87 100644
--- a/.gitignore
+++ b/.gitignore
@@ -59,3 +59,6 @@ compile_commands.json
 .clangd
 perf.data
 perf.data.old
+
+bazel-*
+*.bazel.lock
diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 00000000..d878542a
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,32 @@
+package(default_visibility = ["//visibility:public"])
+
+alias(
+    name = "zstd",
+    actual = "//lib:zstd"
+)
+
+alias(
+    name = "zstd_cli",
+    actual = "//programs:zstd"
+)
+
+alias(
+    name = "util",
+    actual = "//programs:util"
+)
+
+alias(
+    name = "datagen",
+    actual = "//programs:datagen"
+)
+
+alias(
+    name = "datagen_cli",
+    actual = "//tests:datagencli"
+)
+
+
+alias(
+    name = "fullbench",
+    actual = "//tests:fullbench"
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100644
index 00000000..5775709f
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,11 @@
+module(
+    name = "zstd",
+    version = "1.5.6.bcr.1",
+    compatibility_level = 2,
+)
+
+bazel_dep(name = "rules_cc", version = "0.0.9")
+bazel_dep(name = "platforms", version = "0.0.8")
+bazel_dep(name = "zlib", version = "1.3.1")
+bazel_dep(name = "xz", version = "5.4.5.bcr.2")
+bazel_dep(name = "lz4", version = "1.9.4")
diff --git a/lib/BUILD.bazel b/lib/BUILD.bazel
new file mode 100644
index 00000000..094f6804
--- /dev/null
+++ b/lib/BUILD.bazel
@@ -0,0 +1,231 @@
+load("@rules_cc//cc:defs.bzl", "cc_library")
+
+cc_library(
+    name = "common",
+    srcs = glob(["common/*.c"]),
+    hdrs = glob(["common/*.h"]) + ["zstd.h", "zstd_errors.h"],
+    visibility = ["//visibility:public"],
+)
+
+cc_library(
+    name = "zstd",
+    hdrs = ["zstd.h"],
+    visibility = ["//visibility:public"],
+    deps = [
+        ":common",
+        ":compress",
+        ":decompress",
+        ":deprecated",
+    ]
+)
+
+cc_library(
+    name = "compress",
+    srcs = glob([
+        "compress/zstd*.c",
+        "compress/hist.c",
+    ]),
+    hdrs = glob([
+        "compress/zstd*.h",
+        "compress/hist.h",
+        "compress/clevels.h"
+    ]),
+    visibility = ["//visibility:public"],
+    deps = [":common"],
+)
+
+ZSTD_DECOMPRESS_AMD64_ASM_SRCS = select({
+    # ASM is not supported on Windows for any compiler
+    "@platforms//os:windows": [],
+    # Ideally we would include this only on x86_64 but that is not possible
+    # due to https://github.com/bazelbuild/bazel-skylib/issues/272
+    "//conditions:default": glob(["decompress/*_amd64.S"]),
+})
+
+ZSTD_DECOMPRESS_DEFINES = select({
+    # Again we assume for we are using MSVC compiler.
+    "@platforms//os:windows": ["ZSTD_DISABLE_ASM"],
+    "//conditions:default": [],
+})
+
+cc_library(
+    name = "decompress",
+    srcs = glob(["decompress/zstd*.c"]) + ZSTD_DECOMPRESS_AMD64_ASM_SRCS,
+    hdrs = glob(["decompress/zstd*.h", ]),
+    visibility = ["//visibility:public"],
+    deps = [
+        ":common",
+        ":legacy",
+    ],
+    defines=ZSTD_DECOMPRESS_DEFINES
+)
+
+cc_library(
+    name = "deprecated",
+    srcs = glob(["deprecated/*.c"]),
+    hdrs = glob([
+        "deprecated/*.h",
+    ]),
+    visibility = ["//visibility:public"],
+    deps = [":common"],
+)
+
+cc_library(
+    name = "legacy",
+    srcs = glob(["legacy/*.c"]),
+    hdrs = glob([
+        "legacy/*.h",
+    ]),
+    copts = [
+        "-DZSTD_LEGACY_SUPPORT=4",
+    ],
+    visibility = ["//visibility:public"],
+    deps = [":common"],
+)
+
+cc_library(
+    name = "zdict",
+    srcs = glob(["dictBuilder/*.c"]),
+    hdrs = [
+        "dictBuilder/cover.h",
+        "dictBuilder/divsufsort.h",
+        "zdict.h",
+    ],
+    visibility = ["//visibility:public"],
+    deps = [":common", ":compress"],
+)
+
+cc_library(
+    name = "compiler",
+    hdrs = [
+        "common/compiler.h",
+    ],
+    visibility = ["//visibility:public"],
+)
+
+cc_library(
+    name = "cpu",
+    hdrs = [
+        "common/cpu.h",
+    ],
+    visibility = ["//visibility:public"],
+)
+
+cc_library(
+    name = "bitstream",
+    hdrs = [
+        "common/bitstream.h",
+    ],
+    visibility = ["//visibility:public"],
+)
+
+cc_library(
+    name = "entropy",
+    srcs = [
+        "common/entropy_common.c",
+        "common/fse_decompress.c",
+        "compress/fse_compress.c",
+        "compress/huf_compress.c",
+        "decompress/huf_decompress.c",
+    ],
+    hdrs = [
+        "common/fse.h",
+        "common/huf.h",
+        "compress/hist.h"
+    ],
+    visibility = ["//visibility:public"],
+    deps = [
+        ":bitstream",
+        ":compiler",
+        ":debug",
+        ":errors",
+        ":mem",
+        ":common"
+    ],
+)
+
+cc_library(
+    name = "errors",
+    srcs = ["common/error_private.c"],
+    hdrs = [
+        "common/error_private.h",
+        "common/compiler.h",
+        "common/debug.h",
+        "common/zstd_deps.h",
+        "common/portability_macros.h"
+    ],
+    deps = [":common"],
+    visibility = ["//visibility:public"],
+)
+
+cc_library(
+    name = "mem",
+    hdrs = [
+        "common/mem.h",
+    ],
+    visibility = ["//visibility:public"],
+)
+
+cc_library(
+    name = "pool",
+    srcs = ["common/pool.c"],
+    hdrs = [
+        "common/pool.h",
+    ],
+    visibility = ["//visibility:public"],
+    deps = [
+        ":threading",
+        ":zstd_common",
+    ],
+)
+
+cc_library(
+    name = "threading",
+    srcs = ["common/threading.c"],
+    hdrs = [
+        "common/threading.h",
+    ],
+    deps = [":common"],
+    copts = [
+        "-DZSTD_MULTITHREAD",
+    ],
+    linkopts = [
+        "-pthread",
+    ],
+    visibility = ["//visibility:public"],
+)
+
+cc_library(
+    name = "xxhash",
+    srcs = ["common/xxhash.c"],
+    hdrs = [
+        "common/xxhash.h",
+    ],
+    copts = [
+        "-DXXH_NAMESPACE=ZSTD_",
+    ],
+    visibility = ["//visibility:public"],
+)
+
+cc_library(
+    name = "zstd_common",
+    srcs = ["common/zstd_common.c"],
+    hdrs = [
+        "common/zstd_internal.h",
+        "zstd.h",
+    ],
+    visibility = ["//visibility:public"],
+    deps = [
+        ":compiler",
+        ":errors",
+        ":mem",
+        ":common"
+    ],
+)
+
+cc_library(
+    name = "debug",
+    srcs = ["common/debug.c"],
+    hdrs = ["common/debug.h"],
+    visibility = ["//visibility:public"],
+)
diff --git a/programs/BUILD.bazel b/programs/BUILD.bazel
new file mode 100644
index 00000000..679518e8
--- /dev/null
+++ b/programs/BUILD.bazel
@@ -0,0 +1,92 @@
+load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")
+
+cc_binary(
+    name="zstd",
+    visibility = ["//visibility:public"],
+    srcs=glob(["*.c", "*.h"], exclude=["datagen.h", "util.h", "datagen.c", "platform.h"]),
+    deps=[
+        ":datagen",
+        ":util",
+        "//lib:zstd",
+        "//lib:zdict",
+        "//lib:mem",
+        "//lib:xxhash",
+        "//lib:entropy",
+        "@lz4//:lz4_frame",
+        "@xz//:lzma",
+        "@zlib",
+    ],
+    copts=[
+        "-DZSTD_GZCOMPRESS",
+        "-DZSTD_GZDECOMPRESS",
+        "-DZSTD_LZMACOMPRESS",
+        "-DZSTD_LZMADECOMPRES",
+        "-DZSTD_LZ4COMPRESS",
+        "-DZSTD_LZ4DECOMPRES",
+    ],
+)
+
+cc_library(
+    name = "platform_h",
+    hdrs = ["platform.h"],
+)
+
+cc_library(
+    name="datagen",
+    visibility=["//visibility:public"],
+    hdrs=["datagen.h"],
+    srcs=["datagen.c"],
+    deps=[
+        ":platform_h",
+        "//lib:mem",
+        "//lib:common",
+    ],
+)
+
+
+cc_library(
+    name="util",
+    visibility=["//visibility:public"],
+    hdrs=["util.h"],
+    srcs=["util.c"],
+    deps=[
+        ":platform_h",
+        "//lib:mem",
+        "//lib:common"
+    ],
+)
+
+
+cc_library(
+    name="timefn",
+    visibility=["//visibility:public"],
+    hdrs=["timefn.h"],
+    srcs=["timefn.c"],
+    deps=[
+        ":platform_h",
+    ],
+)
+
+cc_library(
+    name="lorem",
+    visibility=["//visibility:public"],
+    hdrs=["lorem.h"],
+    srcs=["lorem.c"]
+)
+
+cc_library(
+    name = "bench",
+    visibility=["//visibility:public"],
+    includes = ["."],
+    srcs = [
+        "benchfn.c",
+        "benchzstd.c",
+    ],
+    hdrs = [
+        "benchfn.h",
+        "benchzstd.h",
+    ],
+    deps = [
+        "//lib:zstd"
+    ],
+)
diff --git a/tests/BUILD.bazel b/tests/BUILD.bazel
new file mode 100644
index 00000000..6cdccb13
--- /dev/null
+++ b/tests/BUILD.bazel
@@ -0,0 +1,55 @@
+load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")
+
+cc_library(
+    name = "lorem_out",
+    srcs = ["loremOut.c"],
+    hdrs = ["loremOut.h"],
+    deps = ["//programs:lorem"],
+    includes = [
+        "../programs"
+    ],
+    visibility = ["//visibility:public"]
+)
+
+cc_binary(
+    name = "datagencli",
+    srcs = [
+        "datagencli.c",
+    ],
+    deps = [
+        "//programs:datagen",
+        ":lorem_out",
+    ],
+    visibility = ["//visibility:public"]
+)
+
+
+cc_test(
+    name = "fullbench",
+    srcs = [
+        "fullbench.c",
+    ],
+    copts = select({
+        "@platforms//os:windows": [],
+        "//conditions:default": ["-Wno-deprecated-declarations"],
+    }),
+    includes = [
+        "../lib",
+        "../lib/common",
+        "../programs",
+    ],
+    deps = [
+        ":lorem_out",
+        "//programs:datagen",
+        "//programs:bench",
+        "//programs:timefn",
+        "//programs:lorem",
+        "//programs:util",
+        "//lib:zstd",
+        "//lib:mem",
+        "//lib:decompress",
+        "//lib:compress",
+        "//lib:entropy",
+    ],
+    visibility = ["//visibility:public"]
+)
