"""periareon/rules_venv"""

module(
    name = "rules_venv",
    version = "0.2.0",
)

bazel_dep(name = "rules_python", version = "1.0.0")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "bazel_skylib", version = "1.7.1")

register_toolchains(
    "//python/venv/toolchain",
)

bazel_dep(name = "rules_req_compile", version = "1.0.0rc34", dev_dependency = True)
bazel_dep(name = "stardoc", version = "0.7.2", dev_dependency = True, repo_name = "io_bazel_stardoc")
bazel_dep(name = "rules_rust_mdbook", version = "0.58.0", dev_dependency = True)
bazel_dep(name = "rules_shell", version = "0.3.0", dev_dependency = True)

python = use_extension("@rules_python//python/extensions:python.bzl", "python", dev_dependency = True)
python.toolchain(
    configure_coverage_tool = True,
    # Working around a rules_python issue with docker
    # https://github.com/bazelbuild/rules_python/pull/713
    ignore_root_user_error = True,
    is_default = True,
    python_version = "3.11",
)
use_repo(
    python,
    "python_3_11_aarch64-apple-darwin",
    "python_3_11_x86_64-apple-darwin",
    "python_3_11_x86_64-pc-windows-msvc",
    "python_3_11_x86_64-unknown-linux-gnu",
    python311 = "python_3_11",
)

requirements = use_extension("@rules_req_compile//extensions:python.bzl", "requirements", dev_dependency = True)
requirements.parse(
    name = "pip_deps",
    requirements_locks = {
        "//3rdparty:requirements_linux.txt": "@platforms//os:linux",
        "//3rdparty:requirements_macos.txt": "@platforms//os:macos",
        "//3rdparty:requirements_windows.txt": "@platforms//os:windows",
    },
)
use_repo(requirements, "pip_deps")

register_toolchains(
    "//python/wheel/private/tests:py_wheel_toolchain",
    dev_dependency = True,
)

bazel_dep(name = "buildifier_prebuilt", version = "7.3.1", dev_dependency = True)
