load("@rules_go//go:def.bzl", "go_binary", "go_library", "go_test")

go_library(
    name = "lib",
    srcs = [
        "checkpoint.go",
        "create.go",
        "delete.go",
        "events.go",
        "exec.go",
        "features.go",
        "init.go",
        "kill.go",
        "list.go",
        "main.go",
        "notify_socket.go",
        "pause.go",
        "ps.go",
        "restore.go",
        "rlimit_linux.go",
        "rootless_linux.go",
        "run.go",
        "signals.go",
        "spec.go",
        "start.go",
        "state.go",
        "tty.go",
        "update.go",
        "utils.go",
        "utils_linux.go",
    ],
    embedsrcs = ["VERSION"],
    importpath = "",
    visibility = ["//visibility:private"],
    deps = [
        "@com_github_containerd_console//:go_default_library",
        "@com_github_docker_go_units//:go_default_library",
        "@com_github_moby_sys_userns//:go_default_library",
        "@com_github_opencontainers_cgroups//:go_default_library",
        "@com_github_opencontainers_cgroups//devices:go_default_library",
        "@com_github_opencontainers_runc//libcontainer:go_default_library",
        "@com_github_opencontainers_runc//libcontainer/capabilities:go_default_library",
        "@com_github_opencontainers_runc//libcontainer/configs:go_default_library",
        "@com_github_opencontainers_runc//libcontainer/intelrdt:go_default_library",
        "@com_github_opencontainers_runc//libcontainer/nsenter:go_default_library",
        "@com_github_opencontainers_runc//libcontainer/seccomp:go_default_library",
        "@com_github_opencontainers_runc//libcontainer/specconv:go_default_library",
        "@com_github_opencontainers_runc//libcontainer/system:go_default_library",
        "@com_github_opencontainers_runc//libcontainer/utils:go_default_library",
        "@com_github_opencontainers_runc//types:go_default_library",
        "@com_github_opencontainers_runc//types/features:go_default_library",
        "@com_github_opencontainers_runtime_spec//specs-go:go_default_library",
        "@com_github_opencontainers_runtime_spec//specs-go/features:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_urfave_cli//:go_default_library",
        "@org_golang_x_sys//unix:go_default_library",
    ] + select({
        "@rules_go//go/platform:android": [
            "@com_github_coreos_go_systemd_v22//activation:go_default_library",
            "@com_github_opencontainers_cgroups//systemd:go_default_library",
            "@com_github_opencontainers_runc//libcontainer/system/kernelversion:go_default_library",
            "@com_github_opencontainers_selinux//go-selinux:go_default_library",
        ],
        "@rules_go//go/platform:linux": [
            "@com_github_coreos_go_systemd_v22//activation:go_default_library",
            "@com_github_opencontainers_cgroups//systemd:go_default_library",
            "@com_github_opencontainers_runc//libcontainer/system/kernelversion:go_default_library",
            "@com_github_opencontainers_selinux//go-selinux:go_default_library",
        ],
        "//conditions:default": [],
    }),
)

go_binary(
    name = "runc",
    embed = [":runc_lib"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "lib_test",
    srcs = ["notify_socket_test.go"],
    embed = [":lib"],
    deps = ["@org_golang_x_sys//unix:go_default_library"],
)

go_library(
    name = "runc_lib",
    srcs = [
        "checkpoint.go",
        "create.go",
        "delete.go",
        "events.go",
        "exec.go",
        "features.go",
        "init.go",
        "kill.go",
        "list.go",
        "main.go",
        "notify_socket.go",
        "pause.go",
        "ps.go",
        "restore.go",
        "rlimit_linux.go",
        "rootless_linux.go",
        "run.go",
        "signals.go",
        "spec.go",
        "start.go",
        "state.go",
        "tty.go",
        "update.go",
        "utils.go",
        "utils_linux.go",
    ],
    embedsrcs = ["VERSION"],
    importpath = "github.com/opencontainers/runc",
    visibility = ["//visibility:private"],
    deps = [
        "//libcontainer",
        "//libcontainer/capabilities",
        "//libcontainer/configs",
        "//libcontainer/intelrdt",
        "//libcontainer/nsenter",
        "//libcontainer/seccomp",
        "//libcontainer/specconv",
        "//libcontainer/system",
        "//libcontainer/utils",
        "//types",
        "//types/features",
        "//vendor/github.com/containerd/console",
        "//vendor/github.com/docker/go-units",
        "//vendor/github.com/moby/sys/userns",
        "//vendor/github.com/opencontainers/cgroups",
        "//vendor/github.com/opencontainers/cgroups/devices",
        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
        "//vendor/github.com/opencontainers/runtime-spec/specs-go/features",
        "//vendor/github.com/sirupsen/logrus",
        "//vendor/github.com/urfave/cli",
        "//vendor/golang.org/x/sys/unix",
    ] + select({
        "@rules_go//go/platform:android": [
            "//libcontainer/system/kernelversion",
            "//vendor/github.com/coreos/go-systemd/v22/activation",
            "//vendor/github.com/opencontainers/cgroups/systemd",
            "//vendor/github.com/opencontainers/selinux/go-selinux",
        ],
        "@rules_go//go/platform:linux": [
            "//libcontainer/system/kernelversion",
            "//vendor/github.com/coreos/go-systemd/v22/activation",
            "//vendor/github.com/opencontainers/cgroups/systemd",
            "//vendor/github.com/opencontainers/selinux/go-selinux",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "runc_test",
    srcs = ["notify_socket_test.go"],
    embed = [":runc_lib"],
    deps = ["//vendor/golang.org/x/sys/unix"],
)
