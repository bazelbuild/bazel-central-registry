load("@rules_cc//cc:defs.bzl", "cc_binary")
load("//bzl:cpp_library.bzl", "cpp_library")
load("//bzl:cpp_unittest.bzl", "cpp_unittest")

cpp_unittest(
    name = "exception_counter_test",
    srcs = ["ExceptionCounterTest.cpp"],
    deps = [
        "//folly/debugging/exception_tracer:exception_counter",
        "//folly/portability:gtest",
    ],
)

cpp_library(
    name = "exception_tracer_benchmark_main",
    srcs = ["ExceptionTracerBenchmark.cpp"],
    deps = [
        "//folly:benchmark",
        "//folly/debugging/exception_tracer:exception_tracer_base",
        "//folly/portability:gflags",
        "@glog",
    ],
)

cpp_library(
    name = "exception_tracer_test_main",
    srcs = ["ExceptionTracerTest.cpp"],
    deps = [
        "//folly/debugging/exception_tracer:exception_tracer_base",
    ],
)

cc_binary(
    name = "exception_tracer_base_test",
    deps = [
        ":exception_tracer_test_main",  # @manual
    ],
)

cc_binary(
    name = "exception_tracer_test",
    deps = [
        ":exception_tracer_test_main",  # @manual
        "//folly/debugging/exception_tracer",  # @manual  # @manual
    ],
)

cpp_unittest(
    name = "smart_exception_tracer_test",
    srcs = ["SmartExceptionTracerTest.cpp"],
    deps = [
        "//folly/coro:blocking_wait",
        "//folly/coro:task",
        "//folly/debugging/exception_tracer:smart_exception_stack_trace_hooks",  # @manual
        "//folly/debugging/exception_tracer:smart_exception_tracer",
        "//folly/portability:gtest",
    ],
)
