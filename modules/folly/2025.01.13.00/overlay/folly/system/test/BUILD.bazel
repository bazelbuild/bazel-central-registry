load("@rules_cc//cc:defs.bzl", "cc_binary")
load("//bzl:cpp_unittest.bzl", "cpp_unittest")

cpp_unittest(
    name = "at_fork_test",
    srcs = ["AtForkTest.cpp"],
    deps = [
        "//folly/portability:gmock",
        "//folly/portability:gtest",
        "//folly/system:at_fork",
        "@glog",
    ],
)

cpp_unittest(
    name = "aux_vector_test",
    srcs = ["AuxVectorTest.cpp"],
    deps = [
        "//folly/portability:gtest",
        "//folly/system:aux_vector",
    ],
)

cc_binary(
    name = "env_util_subprocess",
    srcs = ["EnvUtilSubprocess.cpp"],
)

cpp_unittest(
    name = "env_util_test",
    srcs = ["EnvUtilTest.cpp"],
    args = [
        "--env_util_subprocess_binary=$(rootpath :env_util_subprocess)",
    ],
    data = [":env_util_subprocess"],
    deps = [
        ":env_util_subprocess",
        "//folly:memory",
        "//folly:subprocess",
        "//folly/container:array",
        "//folly/portability:fcntl",
        "//folly/portability:gflags",
        "//folly/portability:gtest",
        "//folly/portability:stdlib",
        "//folly/system:env_util",
        "@boost.algorithm",
        "@glog",
    ],
)

cpp_unittest(
    name = "pid_test",
    srcs = ["PidTest.cpp"],
    deps = [
        "//folly/portability:gtest",
        "//folly/system:pid",
        "@glog",
    ],
)

cpp_unittest(
    name = "memory_mapping_test",
    srcs = ["MemoryMappingTest.cpp"],
    deps = [
        "//folly:file_util",
        "//folly:random",
        "//folly/portability:gtest",
        "//folly/portability:sys_mman",
        "//folly/system:memory_mapping",
        "@glog",
    ],
)

cpp_unittest(
    name = "shell_test",
    srcs = ["ShellTest.cpp"],
    deps = [
        "//folly/portability:gtest",
        "//folly/system:shell",
        "@glog",
    ],
)

cpp_unittest(
    name = "thread_id_test",
    srcs = ["ThreadIdTest.cpp"],
    deps = [
        "//folly:benchmark",
        "//folly/portability:gtest",
        "//folly/portability:unistd",
        "//folly/system:thread_id",
    ],
)

cpp_unittest(
    name = "thread_name_test",
    srcs = ["ThreadNameTest.cpp"],
    deps = [
        "//folly:scope_guard",
        "//folly/portability:gtest",
        "//folly/synchronization:baton",
        "//folly/system:thread_name",
    ],
)
