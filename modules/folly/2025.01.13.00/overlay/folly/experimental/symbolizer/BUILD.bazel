load("@rules_cc//cc:defs.bzl", "cc_library")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "dwarf",
    hdrs = [
        "Dwarf.h",
        "DwarfImpl.h",
        "DwarfLineNumberVM.h",
        "DwarfSection.h",
        "DwarfUtil.h",
    ],
    deps = [
        "//folly/debugging/symbolizer:dwarf",
    ],
)

cc_library(
    name = "elf",
    hdrs = [
        "Elf.h",
    ],
    textual_hdrs = [
        "Elf-inl.h",
    ],
    deps = [
        "//folly/debugging/symbolizer:elf",
    ],
)

cc_library(
    name = "symbolized_frame",
    hdrs = [
        "SymbolizedFrame.h",
    ],
    deps = [
        "//folly/debugging/symbolizer:symbolized_frame",
    ],
)

cc_library(
    name = "line_reader",
    hdrs = [
        "LineReader.h",
    ],
    deps = [
        "//folly/debugging/symbolizer:line_reader",
    ],
)

cc_library(
    name = "stack_trace",
    hdrs = [
        "StackTrace.h",
    ],
    deps = [
        "//folly/debugging/symbolizer:stack_trace",
    ],
)

cc_library(
    name = "elf_cache",
    hdrs = [
        "ElfCache.h",
    ],
    deps = [
        "//folly/debugging/symbolizer:elf_cache",
    ],
)

cc_library(
    name = "symbolize_printer",
    hdrs = [
        "SymbolizePrinter.h",
    ],
    deps = [
        "//folly/debugging/symbolizer:symbolize_printer",
    ],
)

cc_library(
    name = "symbolizer",
    hdrs = [
        "Symbolizer.h",
    ],
    deps = [
        "//folly/debugging/symbolizer",
    ],
)

cc_library(
    name = "signal_handler",
    hdrs = [
        "SignalHandler.h",
    ],
    deps = [
        "//folly/debugging/symbolizer:signal_handler",
    ],
)
