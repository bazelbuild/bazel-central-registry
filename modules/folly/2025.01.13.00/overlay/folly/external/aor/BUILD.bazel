load("//bzl:cpp_library.bzl", "cpp_library")

package(default_visibility = ["//visibility:public"])

cpp_library(
    name = "memcpy_aarch64",
    srcs = [
        "memcpy-advsimd.S",
        "memcpy-armv8.S",
        "memcpy-mops.S",
        "memcpy_sve.S",
        "memmove-mops.S",
    ],
    hdrs = [
        "asmdefs.h",
    ],
    target_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:arm",
    ],
)

cpp_library(
    name = "memcpy_aarch64-use",
    srcs = [
        "memcpy-advsimd.S",
        "memcpy-armv8.S",
        "memcpy-mops.S",
        "memcpy_sve.S",
        "memmove-mops.S",
    ],
    hdrs = [
        "asmdefs.h",
    ],
    copts = select({
        "@platforms//cpu:arm": ["-DFOLLY_MEMCPY_IS_MEMCPY"],
        "//conditions:default": [],
    }),
    target_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:arm",
    ],
)

cpp_library(
    name = "memset_aarch64",
    srcs = [
        "memset-advsimd.S",
        "memset-mops.S",
    ],
    hdrs = [
        "asmdefs.h",
    ],
    target_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:arm",
    ],
)

cpp_library(
    name = "memset_aarch64-use",
    srcs = [
        "memset-advsimd.S",
        "memset-mops.S",
    ],
    hdrs = [
        "asmdefs.h",
    ],
    copts = select({
        "@platforms//cpu:arm": ["-DFOLLY_MEMSET_IS_MEMSET"],
        "//conditions:default": [],
    }),
    target_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:arm",
    ],
)
