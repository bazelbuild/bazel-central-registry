load("//bzl:cpp_library.bzl", "cpp_library")
load("//bzl:cpp_unittest.bzl", "cpp_unittest")

cpp_unittest(
    name = "base_test",
    srcs = ["BaseTest.cpp"],
    # labels = ["serialize_test_cases"],
    deps = [
        "//folly:fbvector",
        "//folly:map_util",
        "//folly:memory",
        "//folly:string",
        "//folly/gen:base",
        "//folly/json:dynamic",
        "//folly/portability:gflags",
        "//folly/portability:gtest",
        "//folly/testing:test_util",
        "@glog",
    ],
)

cpp_unittest(
    name = "combine_test",
    srcs = ["CombineTest.cpp"],
    deps = [
        "//folly:fbvector",
        "//folly:range",
        "//folly/gen:base",
        "//folly/gen:combine",
        "//folly/portability:gflags",
        "//folly/portability:gtest",
        "@glog",
    ],
)

cpp_unittest(
    name = "file_test",
    srcs = ["FileTest.cpp"],
    deps = [
        "//folly:file",
        "//folly:range",
        "//folly/container:array",
        "//folly/gen:base",
        "//folly/gen:file",
        "//folly/portability:gtest",
        "//folly/testing:test_util",
    ],
)

cpp_unittest(
    name = "parallel_test",
    srcs = ["ParallelTest.cpp"],
    # labels = ["serialize"],
    deps = [
        "//folly/gen:base",
        "//folly/gen:parallel",
        "//folly/portability:gflags",
        "//folly/portability:gtest",
        "@glog",
    ],
)

cpp_unittest(
    name = "parallel_map_test",
    srcs = ["ParallelMapTest.cpp"],
    deps = [
        "//folly:memory",
        "//folly/gen:base",
        "//folly/gen:parallel_map",
        "//folly/portability:gflags",
        "//folly/portability:gtest",
        "@glog",
    ],
)

cpp_unittest(
    name = "string_test",
    srcs = ["StringTest.cpp"],
    deps = [
        "//folly/functional:apply_tuple",
        "//folly/gen:string",
        "//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "istream_test",
    srcs = ["IStreamTest.cpp"],
    deps = [
        "//folly/gen:base",
        "//folly/gen:istream",
        "//folly/gen:string",
        "//folly/portability:gtest",
    ],
)

cpp_library(
    name = "util",
    hdrs = ["Bench.h"],
    deps = [
        "//folly:benchmark",
    ],
)
