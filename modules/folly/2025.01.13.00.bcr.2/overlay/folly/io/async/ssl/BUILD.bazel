load("//bzl:cpp_library.bzl", "cpp_library")

package(default_visibility = ["//visibility:public"])

cpp_library(
    name = "openssl",
    deps = [
        "//folly/io/async/ssl:openssl_utils",  # @manual
        "//folly/io/async/ssl:ssl_errors",  # @manual
    ],
)

cpp_library(
    name = "basic_transport_certificate",
    hdrs = ["BasicTransportCertificate.h"],
    deps = [
        ":openssl_transport_certificate",
    ],
)

cpp_library(
    name = "openssl_transport_certificate",
    hdrs = ["OpenSSLTransportCertificate.h"],
    deps = [
        "//folly/io/async:async_transport_certificate",
        "//folly/portability:openssl",
        "//folly/ssl:openssl_ptr_types",
    ],
)

cpp_library(
    name = "openssl_utils",
    srcs = ["OpenSSLUtils.cpp"],
    hdrs = ["OpenSSLUtils.h"],
    deps = [
        "//folly:range",
        "//folly:scope_guard",
        "//folly/io/async:async_socket_exception",
        "//folly/net:network_socket",
        "//folly/portability:openssl",
        "//folly/portability:sockets",
        "//folly/portability:unistd",
        "//folly/ssl:openssl_ptr_types",
        "//folly/ssl:ssl_session",
        "//folly/ssl/detail:openssl_session",
        "@glog",
    ],
)

cpp_library(
    name = "ssl_errors",
    srcs = ["SSLErrors.cpp"],
    hdrs = ["SSLErrors.h"],
    deps = [
        "//folly:range",
        "//folly/io/async:async_socket_exception",
        "//folly/portability:openssl",
    ],
)

cpp_library(
    name = "tls_definitions",
    hdrs = ["TLSDefinitions.h"],
    deps = [
        "//folly/io:iobuf",
    ],
)
