load("//bzl:cpp_library.bzl", "cpp_library")

package(default_visibility = ["//visibility:public"])

cpp_library(
    name = "async_base_fwd",
    hdrs = [
        "HHWheelTimer-fwd.h",
    ],
)

cpp_library(
    name = "async_base",
    srcs = [
        "AsyncTimeout.cpp",
        "EventBase.cpp",
        "EventBaseBackendBase.cpp",
        "EventBaseLocal.cpp",
        "EventHandler.cpp",
        "HHWheelTimer.cpp",
        "TimeoutManager.cpp",
        "VirtualEventBase.cpp",
    ],
    hdrs = [
        "AsyncTimeout.h",
        "AtomicNotificationQueue.h",
        "EventBase.h",
        "EventBaseAtomicNotificationQueue.h",
        "EventBaseBackendBase.h",
        "EventBaseLocal.h",
        "EventHandler.h",
        "HHWheelTimer.h",
        "NotificationQueue.h",
        "TimeoutManager.h",
        "VirtualEventBase.h",
    ],
    textual_hdrs = [
        "AtomicNotificationQueue-inl.h",
        "EventBaseAtomicNotificationQueue-inl.h",
    ],
    deps = [
        ":async_base_fwd",
        ":delayed_destruction",
        ":event_util",
        ":request_context",
        "//folly:chrono",
        "//folly:exception",
        "//folly:exception_string",
        "//folly:executor",
        "//folly:file_util",
        "//folly:function",
        "//folly:likely",
        "//folly:map_util",
        "//folly:memory",
        "//folly:optional",
        "//folly:portability",
        "//folly:scope_guard",
        "//folly:spin_lock",
        "//folly:string",
        "//folly:synchronized",
        "//folly/container:bit_iterator",
        "//folly/container:f14_hash",
        "//folly/executors:drivable_executor",
        "//folly/executors:execution_observer",
        "//folly/executors:io_executor",
        "//folly/executors:queue_observer",
        "//folly/executors:scheduled_executor",
        "//folly/executors:sequenced_executor",
        "//folly/io:iobuf",
        "//folly/lang:align",
        "//folly/lang:assume",
        "//folly/lang:bits",
        "//folly/lang:thunk",
        "//folly/net:net_ops",
        "//folly/net:network_socket",
        "//folly/portability:config",
        "//folly/portability:event",
        "//folly/portability:fcntl",
        "//folly/portability:iovec",
        "//folly/portability:sockets",
        "//folly/portability:unistd",
        "//folly/synchronization:baton",
        "//folly/synchronization:call_once",
        "//folly/synchronization:event_count",
        "//folly/system:pid",
        "//folly/system:thread_id",
        "//folly/system:thread_name",
        "@boost.intrusive",
        "@glog",
    ],
)

cpp_library(
    name = "async_pipe",
    srcs = ["AsyncPipe.cpp"],
    hdrs = ["AsyncPipe.h"],
    deps = [
        ":async_base",
        ":async_socket_exception",
        ":async_transport",
        ":delayed_destruction",
        "//folly:file_util",
        "//folly:utility",
        "//folly/detail:file_util_detail",
        "//folly/io:iobuf",
    ],
)

cpp_library(
    name = "async_signal_handler",
    srcs = ["AsyncSignalHandler.cpp"],
    hdrs = ["AsyncSignalHandler.h"],
    deps = [
        ":async_base",
        "//folly:conv",
        "//folly/portability:event",
    ],
)

cpp_library(
    name = "async_socket_transport",
    srcs = ["AsyncSocketTransport.cpp"],
    hdrs = ["AsyncSocketTransport.h"],
    deps = [
        ":async_socket_exception",
        ":async_transport",
        "//folly:network_address",
        "//folly/io:iobuf",
        "//folly/io:socket_option_map",
        "//folly/net:network_socket",
    ],
)

cpp_library(
    name = "async_socket",
    srcs = ["AsyncSocket.cpp"],
    hdrs = ["AsyncSocket.h"],
    deps = [
        ":async_base",
        ":async_socket_exception",
        ":async_socket_transport",
        ":async_transport",
        ":delayed_destruction",
        "//folly:constructor_callback_list",
        "//folly:exception",
        "//folly:format",
        "//folly:network_address",
        "//folly:optional",
        "//folly:portability",
        "//folly:small_vector",
        "//folly:string",
        "//folly/detail:socket_fast_open",
        "//folly/io:iobuf",
        "//folly/io:shutdown_socket_set",
        "//folly/io:socket_option_map",
        "//folly/io/async/observer:async_socket_observer_container",
        "//folly/lang:checked_math",
        "//folly/net:net_ops_dispatcher",
        "//folly/net:tcpinfo",
        "//folly/net:tcpinfo_dispatcher",
        "//folly/portability:fcntl",
        "//folly/portability:sockets",
        "//folly/portability:sys_mman",
        "//folly/portability:sys_uio",
        "//folly/portability:unistd",
        "@boost.preprocessor",
    ],
)

cpp_library(
    name = "async_socket_base",
    hdrs = ["AsyncSocketBase.h"],
    deps = [
        ":async_base",
        "//folly:network_address",
    ],
)

cpp_library(
    name = "async_socket_exception",
    srcs = ["AsyncSocketException.cpp"],
    hdrs = ["AsyncSocketException.h"],
    deps = [
        "//folly:c_portability",
        "//folly:format",
        "//folly:range",
        "//folly:string",
    ],
)

cpp_library(
    name = "async_ssl_socket",
    srcs = ["AsyncSSLSocket.cpp"],
    hdrs = ["AsyncSSLSocket.h"],
    deps = [
        ":async_base",
        ":async_pipe",
        ":async_socket",
        ":certificate_identity_verifier",
        ":ssl_context",
        "//folly:format",
        "//folly:indestructible",
        "//folly:network_address",
        "//folly:optional",
        "//folly:spin_lock",
        "//folly:string",
        "//folly/io:iobuf",
        "//folly/io:socket_option_map",
        "//folly/io/async/ssl:basic_transport_certificate",
        "//folly/io/async/ssl:openssl_utils",
        "//folly/io/async/ssl:ssl_errors",
        "//folly/io/async/ssl:tls_definitions",
        "//folly/lang:bits",
        "//folly/portability:openssl",
        "//folly/portability:sockets",
        "//folly/ssl:openssl_ptr_types",
        "//folly/ssl:ssl_session",
        "//folly/ssl:ssl_session_manager",
    ],
)

cpp_library(
    name = "async_transport",
    hdrs = ["AsyncTransport.h"],
    deps = [
        ":async_base",
        ":async_socket_base",
        ":async_transport_certificate",
        ":delayed_destruction",
        ":write_flags",
        "//folly:optional",
        "//folly/io:iobuf",
        "//folly/portability:openssl",
        "//folly/portability:sys_uio",
        "//folly/ssl:openssl_ptr_types",
    ],
)

cpp_library(
    name = "async_transport_certificate",
    hdrs = ["AsyncTransportCertificate.h"],
    deps = [
        "//folly:optional",
    ],
)

cpp_library(
    name = "certificate_identity_verifier",
    hdrs = ["CertificateIdentityVerifier.h"],
    deps = [
        ":async_transport_certificate",
        "//folly:try",
        "//folly:unit",
    ],
)

cpp_library(
    name = "async_udp_server_socket",
    hdrs = ["AsyncUDPServerSocket.h"],
    deps = [
        ":async_base",
        ":async_udp_socket",
        "//folly:memory",
        "//folly/io:iobuf",
    ],
)

cpp_library(
    name = "async_udp_socket",
    srcs = ["AsyncUDPSocket.cpp"],
    hdrs = ["AsyncUDPSocket.h"],
    deps = [
        ":async_base",
        ":async_socket_base",
        ":async_socket_exception",
        "//folly:function",
        "//folly:likely",
        "//folly:network_address",
        "//folly:scope_guard",
        "//folly:small_vector",
        "//folly:utility",
        "//folly/io:iobuf",
        "//folly/io:socket_option_map",
        "//folly/net:net_ops",
        "//folly/net:net_ops_dispatcher",
        "//folly/net:network_socket",
        "//folly/portability:fcntl",
        "//folly/portability:sockets",
        "//folly/portability:unistd",
        "@boost.preprocessor",
    ],
)

cpp_library(
    name = "decorated_async_transport_wrapper",
    hdrs = [
        "DecoratedAsyncTransportWrapper.h",
        "WriteChainAsyncTransportWrapper.h",
    ],
    deps = [
        ":async_transport",
        "//folly/io:iobuf",
    ],
)

cpp_library(
    name = "delayed_destruction",
    srcs = [
        "DelayedDestruction.cpp",
    ],
    hdrs = [
        "DelayedDestruction.h",
        "DelayedDestructionBase.h",
    ],
    deps = [
        "//folly:portability",
    ],
)

cpp_library(
    name = "destructor_check",
    hdrs = ["DestructorCheck.h"],
)

cpp_library(
    name = "event_base_manager",
    srcs = ["EventBaseManager.cpp"],
    hdrs = ["EventBaseManager.h"],
    deps = [
        ":async_base",
        "//folly:optional",
        "//folly:thread_local",
    ],
)

cpp_library(
    name = "event_base_thread",
    srcs = ["EventBaseThread.cpp"],
    hdrs = ["EventBaseThread.h"],
    deps = [
        ":async_base",
        ":scoped_event_base_thread",
        "//folly:memory",
        "//folly:range",
    ],
)

cpp_library(
    name = "event_util",
    hdrs = ["EventUtil.h"],
    deps = [
        "//folly/portability:event",
    ],
)

cpp_library(
    name = "request_context",
    srcs = ["Request.cpp"],
    hdrs = ["Request.h"],
    deps = [
        "//folly:glog",
        "//folly:shared_mutex",
        "//folly:singleton_thread_local",
        "//folly:synchronized",
        "//folly/concurrency:process_local_unique_id",
        "//folly/concurrency/container:single_writer_fixed_hash_map",
        "//folly/container:f14_hash",
        "//folly/detail:iterators",
        "//folly/synchronization:hazptr",
        "//folly/tracing:static_tracepoint",
    ],
)

cpp_library(
    name = "scoped_event_base_thread",
    srcs = ["ScopedEventBaseThread.cpp"],
    hdrs = ["ScopedEventBaseThread.h"],
    deps = [
        ":async_base",
        ":event_base_manager",
        "//folly:function",
        "//folly:range",
        "//folly/synchronization:baton",
        "//folly/system:thread_name",
    ],
)

cpp_library(
    name = "terminate_cancellation_token",
    srcs = ["TerminateCancellationToken.cpp"],
    hdrs = ["TerminateCancellationToken.h"],
    deps = [
        ":async_signal_handler",
        ":scoped_event_base_thread",
        "//folly:cancellation_token",
        "//folly:singleton",
    ],
)

cpp_library(
    name = "server_socket",
    srcs = ["AsyncServerSocket.cpp"],
    hdrs = ["AsyncServerSocket.h"],
    deps = [
        ":async_base",
        ":async_socket_base",
        ":delayed_destruction",
        "//folly:exception_wrapper",
        "//folly:file_util",
        "//folly:glog",
        "//folly:network_address",
        "//folly:portability",
        "//folly:string",
        "//folly/detail:socket_fast_open",
        "//folly/io:shutdown_socket_set",
        "//folly/net:net_ops",
        "//folly/net:network_socket",
        "//folly/observer",
        "//folly/portability:fcntl",
        "//folly/portability:sockets",
        "//folly/portability:unistd",
    ],
)

cpp_library(
    name = "ssl_context",
    srcs = ["SSLContext.cpp"],
    hdrs = ["SSLContext.h"],
    deps = [
        "//folly:format",
        "//folly:function",
        "//folly:memory",
        "//folly:portability",
        "//folly:random",
        "//folly:range",
        "//folly:shared_mutex",
        "//folly:spin_lock",
        "//folly:string",
        "//folly/container:access",
        "//folly/io/async/ssl:openssl_utils",
        "//folly/portability:openssl",
        "//folly/ssl:openssl_ptr_types",
        "//folly/ssl:openssl_ticket_handler",
        "//folly/ssl:password_collector",
        "//folly/ssl:ssl_session_manager",
        "//folly/system:thread_id",
        "@glog",
    ],
)

cpp_library(
    name = "ssl_options",
    srcs = ["SSLOptions.cpp"],
    hdrs = ["SSLOptions.h"],
    deps = [
        ":ssl_context",
        "//folly:format",
        "//folly/container:array",
        "@glog",
    ],
)

cpp_library(
    name = "password_in_file",
    srcs = ["PasswordInFile.cpp"],
    hdrs = ["PasswordInFile.h"],
    deps = [
        "//folly:file_util",
        "//folly/portability:openssl",
        "//folly/ssl:password_collector",
    ],
)

cpp_library(
    name = "write_flags",
    hdrs = ["WriteFlags.h"],
)

cpp_library(
    name = "timerfd",
    srcs = [
        "STTimerFDTimeoutManager.cpp",
        "TimerFD.cpp",
        "TimerFDTimeoutManager.cpp",
    ],
    hdrs = [
        "STTimerFDTimeoutManager.h",
        "TimerFD.h",
        "TimerFDTimeoutManager.h",
    ],
    deps = [
        "//folly:file_util",
        "//folly/io/async:async_base",
        "//folly/io/async:delayed_destruction",
        "//folly/io/async:event_util",
    ],
)

cpp_library(
    name = "async_base_class",
    srcs = ["AsyncBase.cpp"],
    hdrs = ["AsyncBase.h"],
    deps = [
        "//folly:exception",
        "//folly:format",
        "//folly:function",
        "//folly:likely",
        "//folly:portability",
        "//folly:range",
        "//folly:string",
        "//folly/portability:filesystem",
        "//folly/portability:sys_uio",
        "//folly/portability:unistd",
        "@boost.intrusive",
        "@glog",
    ],
)

cpp_library(
    name = "async_io",
    srcs = ["AsyncIO.cpp"],
    hdrs = ["AsyncIO.h"],
    deps = [
        "//folly:exception",
        "//folly:likely",
        "//folly:small_vector",
        "//folly:string",
        "//folly/experimental/io:async_base",
        "//folly/portability:unistd",
        "@boost.intrusive",
        "@fmt",
        "@glog",
        # TODO(kgk): Enable once @libaio is added to bcr. See:
        # https://github.com/bazelbuild/bazel-central-registry/issues/3756
        # "@libaio",
    ],
)

cpp_library(
    # @autodeps-skip
    name = "liburing",
    hdrs = ["Liburing.h"],
    deps = select({
        "@platforms//os:linux": ["@liburing"],
        "//conditions:default": [],
    }),
)

cpp_library(
    name = "async_io_uring_socket",
    srcs = [
        "AsyncIoUringSocket.cpp",
    ],
    hdrs = [
        "AsyncIoUringSocket.h",
        "AsyncIoUringSocketFactory.h",
    ],
    deps = [
        "//folly:conv",
        "//folly:network_address",
        "//folly:optional",
        "//folly:small_vector",
        "//folly/detail:socket_fast_open",
        "//folly/futures:core",
        "//folly/io:iobuf",
        "//folly/io:socket_option_map",
        "//folly/io/async:async_base",
        "//folly/io/async:async_socket",
        "//folly/io/async:async_socket_exception",
        "//folly/io/async:async_transport",
        "//folly/io/async:delayed_destruction",
        "//folly/io/async:io_uring_backend",
        "//folly/io/async:io_uring_event_base_local",
        "//folly/io/async:liburing",
        "//folly/memory:malloc",
        "//folly/net:net_ops_dispatcher",
        "//folly/portability:sockets",
        "//folly/portability:sys_uio",
        "@boost.intrusive",
    ],
)

cpp_library(
    name = "simple_async_io",
    srcs = ["SimpleAsyncIO.cpp"],
    hdrs = ["SimpleAsyncIO.h"],
    deps = [
        "//folly:string",
        "//folly:synchronized",
        "//folly/coro:baton",
        "//folly/coro:task",
        "//folly/executors:global_executor",
        "//folly/experimental/io:async_base",
        "//folly/experimental/io:async_io",
        "//folly/io/async:async_base",
        "//folly/io/async:io_uring",
        "//folly/io/async:liburing",
        "//folly/io/async:scoped_event_base_thread",
        "//folly/portability:sockets",
    ],
)

cpp_library(
    name = "epoll",
    hdrs = [
        "Epoll.h",
    ],
)

cpp_library(
    name = "epoll_backend",
    srcs = [
        "EpollBackend.cpp",
    ],
    hdrs = [
        "Epoll.h",
        "EpollBackend.h",
    ],
    deps = [
        "//folly:file_util",
        "//folly:intrusive_list",
        "//folly:map_util",
        "//folly:string",
        "//folly/container:intrusive_heap",
        "//folly/io/async:async_base",
    ],
)

cpp_library(
    name = "event_base_poller",
    srcs = ["EventBasePoller.cpp"],
    hdrs = ["EventBasePoller.h"],
    deps = [
        "//folly:file_util",
        "//folly:function",
        "//folly:range",
        "//folly:string",
        "//folly:synchronized",
        "//folly/experimental/io:epoll",
        "//folly/io/async:liburing",
        "//folly/lang:align",
        "//folly/portability:gflags",
        "//folly/synchronization:baton",
        "//folly/system:thread_name",
        "@boost.conversion",
        "@fmt",
        "@glog",
    ],
)

cpp_library(
    name = "mux_io_thread_pool_executor",
    srcs = ["MuxIOThreadPoolExecutor.cpp"],
    hdrs = ["MuxIOThreadPoolExecutor.h"],
    deps = [
        "//folly:portability",
        "//folly/concurrency:unbounded_queue",
        "//folly/container:enumerate",
        "//folly/executors:io_thread_pool_executor",
        "//folly/executors:queue_observer",
        "//folly/experimental/io:epoll_backend",
        "//folly/experimental/io:event_base_poller",
        "//folly/io/async:event_base_manager",
        "//folly/lang:align",
        "//folly/synchronization:baton",
        "//folly/synchronization:latch",
        "//folly/synchronization:relaxed_atomic",
        "//folly/synchronization:throttled_lifo_sem",
        "//folly/synchronization:wait_options",
        "@fmt",
    ],
)

cpp_library(
    name = "io_uring",
    srcs = ["IoUring.cpp"],
    hdrs = ["IoUring.h"],
    deps = [
        ":async_base_class",
        ":liburing",
        "//folly:exception",
        "//folly:likely",
        "//folly:shared_mutex",
        "//folly:string",
        "//folly/portability:unistd",
        "@boost.intrusive",
        "@fmt",
        "@glog",
    ],
)

cpp_library(
    name = "io_uring_backend",
    srcs = [
        "IoUringBackend.cpp",
    ],
    hdrs = [
        "IoUringBackend.h",
        "IoUringBase.h",
    ],
    deps = [
        "//folly:c_portability",
        "//folly:conv",
        "//folly:cpp_attributes",
        "//folly:demangle",
        "//folly:exception_string",
        "//folly:file_util",
        "//folly:function",
        "//folly:glog",
        "//folly:likely",
        "//folly:optional",
        "//folly:range",
        "//folly:small_vector",
        "//folly:spin_lock",
        "//folly:string",
        "//folly/container:f14_hash",
        "//folly/io:iobuf",
        "//folly/io/async:async_base",
        "//folly/io/async:delayed_destruction",
        "//folly/io/async:io_uring_provided_buffer_ring",
        "//folly/io/async:liburing",
        "//folly/lang:bits",
        "//folly/portability:asm",
        "//folly/portability:gflags",
        "//folly/portability:sockets",
        "//folly/portability:sys_mman",
        "//folly/portability:sys_syscall",
        "//folly/synchronization:call_once",
        "//folly/tracing:static_tracepoint",
        "@boost.intrusive",
        "@glog",
    ],
)

cpp_library(
    name = "io_uring_provided_buffer_ring",
    srcs = [
        "IoUringProvidedBufferRing.cpp",
    ],
    hdrs = [
        "IoUringBase.h",
        "IoUringProvidedBufferRing.h",
    ],
    deps = [
        "//folly:conv",
        "//folly:exception_string",
        "//folly:string",
        "//folly/io:iobuf",
        "//folly/io/async:delayed_destruction",
        "//folly/io/async:liburing",
        "//folly/portability:sys_mman",
        "@boost.intrusive",
    ],
)

cpp_library(
    name = "io_uring_event",
    srcs = [
        "IoUringEvent.cpp",
    ],
    hdrs = [
        "IoUringEvent.h",
    ],
    deps = [
        "//folly:file",
        "//folly/io/async:async_base",
        "//folly/io/async:io_uring_backend",
        "//folly/io/async:liburing",
    ],
)

cpp_library(
    name = "io_uring_event_base_local",
    srcs = [
        "IoUringEventBaseLocal.cpp",
    ],
    hdrs = [
        "IoUringEventBaseLocal.h",
    ],
    deps = [
        "//folly:singleton",
        "//folly/io/async:async_base",
        "//folly/io/async:io_uring_backend",
        "//folly/io/async:io_uring_event",
        "//folly/io/async:liburing",
    ],
)
