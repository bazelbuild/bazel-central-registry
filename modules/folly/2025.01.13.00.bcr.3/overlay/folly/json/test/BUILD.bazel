load("//bzl:cpp_unittest.bzl", "cpp_unittest")

cpp_unittest(
    name = "dynamic_converter_test",
    srcs = ["DynamicConverterTest.cpp"],
    deps = [
        "//folly:expected",
        "//folly:fbvector",
        "//folly:optional",
        "//folly/json:dynamic",
        "//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "dynamic_other_test",
    srcs = ["DynamicOtherTest.cpp"],
    deps = [
        "//folly/gen:base",
        "//folly/json:dynamic",
        "//folly/portability:gflags",
        "//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "dynamic_test",
    srcs = ["DynamicTest.cpp"],
    deps = [
        "//folly:range",
        "//folly/hash",
        "//folly/json:dynamic",
        "//folly/portability:gtest",
        "//folly/test:comparison_operator_test_util",
        "@glog",
    ],
)

cpp_unittest(
    name = "json_other_test",
    srcs = ["JsonOtherTest.cpp"],
    deps = [
        "//folly/json:dynamic",
        "//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "json_patch_test",
    srcs = ["json_patch_test.cpp"],
    deps = [
        "//folly:json_patch",
        "//folly:json_pointer",
        "//folly/json:dynamic",
        "//folly/portability:gmock",
        "//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "json_test",
    srcs = ["JsonTest.cpp"],
    deps = [
        "//folly/json:dynamic",
        "//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "json_pointer_test",
    srcs = ["json_pointer_test.cpp"],
    deps = [
        "//folly:json_pointer",
        "//folly/portability:gmock",
        "//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "json_schema_test",
    srcs = ["JSONSchemaTest.cpp"],
    deps = [
        "//folly/json:dynamic",
        "//folly/json:json_schema",
        "//folly/portability:gtest",
    ],
)

cpp_unittest(
    name = "dynamic_parser_test",
    srcs = ["DynamicParserTest.cpp"],
    deps = [
        "//folly:optional",
        "//folly/json:dynamic_parser",
        "//folly/portability:gtest",
        "//folly/testing:test_util",
    ],
)

cpp_unittest(
    name = "json_test_util_test",
    srcs = ["JsonTestUtilTest.cpp"],
    deps = [
        "//folly/portability:gmock",
        "//folly/portability:gtest",
        "//folly/test:json_mock_util",
        "//folly/test:json_test_util",
        "@glog",
    ],
)
