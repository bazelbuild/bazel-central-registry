load("//bzl:cpp_library.bzl", "cpp_library")

package(default_visibility = ["//visibility:public"])

cpp_library(
    name = "wait_utils",
    hdrs = [
        "WaitUtils.h",
    ],
    deps = [
        ":core",
        ":fiber_manager",
        "//folly/fibers:core",
        "//folly/fibers:fiber_manager_map",
    ],
)

cpp_library(
    name = "core",
    srcs = ["Async.cpp"],
    hdrs = [
        "Async.h",
    ],
    deps = [
        "//folly:traits",
        "//folly:unit",
        "//folly/fibers:core",
        "//folly/functional:invoke",
        "//folly/lang:customization_point",
        "@glog",
    ],
)

cpp_library(
    name = "collect",
    hdrs = [
        "Collect.h",
    ],
    textual_hdrs = [
        "Collect-inl.h",
    ],
    deps = [
        ":baton",
        ":core",
        ":fiber_manager",
        ":future",
        "//folly:traits",
        "//folly:try",
        "//folly/fibers:core_manager",
        "//folly/fibers:when_n",
        "//folly/functional:invoke",
    ],
)

cpp_library(
    name = "baton",
    hdrs = ["Baton.h"],
    deps = [
        ":core",
        "//folly/fibers:core",
        "@glog",
    ],
)

cpp_library(
    name = "fiber_manager",
    hdrs = [
        "FiberManager.h",
    ],
    deps = [
        ":core",
        "//folly/fibers:core_manager",
    ],
)

cpp_library(
    name = "future",
    hdrs = [
        "Future.h",
    ],
    deps = [
        ":core",
        "//folly/futures:core",
    ],
)

cpp_library(
    name = "promise",
    hdrs = [
        "Promise.h",
    ],
    deps = [
        ":core",
        "//folly/fibers:core_manager",
        "//folly/fibers:traits",
    ],
)

cpp_library(
    name = "task",
    hdrs = [
        "Task.h",
    ],
    deps = [
        ":core",
        "//folly/coro:blocking_wait",
        "//folly/coro:task",
    ],
)

cpp_library(
    name = "stack_tracing",
    hdrs = [
        "AsyncStack.h",
    ],
    deps = [
        ":core",
        "//folly:c_portability",
        "//folly:scope_guard",
        "//folly/tracing:async_stack",
        "@glog",
    ],
)
