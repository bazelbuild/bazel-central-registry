load("//bzl:cpp_library.bzl", "cpp_library")

package(default_visibility = ["//visibility:public"])

cpp_library(
    name = "elias_fano_coding",
    hdrs = [
        "EliasFanoCoding.h",
    ],
    deps = [
        "//folly/compression/elias_fano:elias_fano_coding",
    ],
)

cpp_library(
    name = "event_count",
    hdrs = [
        "EventCount.h",
    ],
    deps = [
        "//folly/synchronization:event_count",
    ],
)

cpp_library(
    name = "flat_combining_priority_queue",
    hdrs = [
        "FlatCombiningPriorityQueue.h",
    ],
    deps = [
        "//folly/concurrency/container:flat_combining_priority_queue",
    ],
)

cpp_library(
    name = "relaxed_concurrent_priority_queue",
    hdrs = [
        "RelaxedConcurrentPriorityQueue.h",
    ],
    deps = [
        "//folly/concurrency/container:relaxed_concurrent_priority_queue",
    ],
)

cpp_library(
    name = "function_scheduler",
    hdrs = [
        "FunctionScheduler.h",
    ],
    deps = [
        "//folly/executors:function_scheduler",
    ],
)

cpp_library(
    name = "test_util",
    hdrs = [
        "TestUtil.h",
    ],
    deps = [
        "//folly/testing:test_util",
    ],
)

cpp_library(
    name = "threaded_repeating_function_runner",
    hdrs = [
        "ThreadedRepeatingFunctionRunner.h",
    ],
    deps = [
        "//folly/executors:threaded_repeating_function_runner",
    ],
)
