diff --git a/docs/simple_broadcast_server.cpp b/docs/simple_broadcast_server.cpp
index 955d711..3f2c3d5 100644
--- a/docs/simple_broadcast_server.cpp
+++ b/docs/simple_broadcast_server.cpp
@@ -1,7 +1,7 @@
 #include <set>
 
-#include <websocketpp/config/asio_no_tls.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
+#include "websocketpp/server.hpp"
 
 typedef websocketpp::server<websocketpp::config::asio> server;
 
diff --git a/docs/simple_count_server_thread.cpp b/docs/simple_count_server_thread.cpp
index a30af99..4e2440a 100644
--- a/docs/simple_count_server_thread.cpp
+++ b/docs/simple_count_server_thread.cpp
@@ -3,8 +3,8 @@
 #include <set>
 #include <thread>
 
-#include <websocketpp/config/asio_no_tls.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
+#include "websocketpp/server.hpp"
 
 typedef websocketpp::server<websocketpp::config::asio> server;
 
diff --git a/examples/associative_storage/associative_storage.cpp b/examples/associative_storage/associative_storage.cpp
index 2ac8494..555b758 100644
--- a/examples/associative_storage/associative_storage.cpp
+++ b/examples/associative_storage/associative_storage.cpp
@@ -1,8 +1,8 @@
 #include <iostream>
 #include <map>
 #include <exception>
-#include <websocketpp/config/asio_no_tls.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
+#include "websocketpp/server.hpp"
 
 typedef websocketpp::server<websocketpp::config::asio> server;
 
diff --git a/examples/broadcast_server/broadcast_server.cpp b/examples/broadcast_server/broadcast_server.cpp
index b02e7cd..9d5bd7a 100644
--- a/examples/broadcast_server/broadcast_server.cpp
+++ b/examples/broadcast_server/broadcast_server.cpp
@@ -1,6 +1,6 @@
-#include <websocketpp/config/asio_no_tls.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
 
-#include <websocketpp/server.hpp>
+#include "websocketpp/server.hpp"
 
 #include <iostream>
 #include <set>
@@ -8,7 +8,7 @@
 /*#include <boost/thread.hpp>
 #include <boost/thread/mutex.hpp>
 #include <boost/thread/condition_variable.hpp>*/
-#include <websocketpp/common/thread.hpp>
+#include "websocketpp/common/thread.hpp"
 
 typedef websocketpp::server<websocketpp::config::asio> server;
 
diff --git a/examples/debug_client/debug_client.cpp b/examples/debug_client/debug_client.cpp
index d3e9153..dedbe6f 100644
--- a/examples/debug_client/debug_client.cpp
+++ b/examples/debug_client/debug_client.cpp
@@ -29,9 +29,9 @@
  * at any given time.
  */
 
-#include <websocketpp/config/asio_client.hpp>
+#include "websocketpp/config/asio_client.hpp"
 
-#include <websocketpp/client.hpp>
+#include "websocketpp/client.hpp"
 
 #include <iostream>
 #include <chrono>
diff --git a/examples/debug_server/debug_server.cpp b/examples/debug_server/debug_server.cpp
index 8d1ff0e..fcd3ebb 100644
--- a/examples/debug_server/debug_server.cpp
+++ b/examples/debug_server/debug_server.cpp
@@ -29,12 +29,12 @@
  * at any given time.
  */
 
-#include <websocketpp/config/debug_asio_no_tls.hpp>
+#include "websocketpp/config/debug_asio_no_tls.hpp"
 
 // Custom logger
-#include <websocketpp/logger/syslog.hpp>
+#include "websocketpp/logger/syslog.hpp"
 
-#include <websocketpp/server.hpp>
+#include "websocketpp/server.hpp"
 
 #include <iostream>
 
diff --git a/examples/dev/main.cpp b/examples/dev/main.cpp
index 79d7bf1..9e95791 100644
--- a/examples/dev/main.cpp
+++ b/examples/dev/main.cpp
@@ -5,15 +5,15 @@
 #include <random>
 #include <boost/timer/timer.hpp>
 
-#include <websocketpp/config/core.hpp>
+#include "websocketpp/config/core.hpp"
 
-//#include <websocketpp/security/none.hpp>
+//#include "websocketpp/security/none.hpp"
 
-//#include <websocketpp/concurrency/none.hpp>
-//#include <websocketpp/concurrency/stl.hpp>
+//#include "websocketpp/concurrency/none.hpp"
+//#include "websocketpp/concurrency/stl.hpp"
 
-//#include <websocketpp/transport/iostream.hpp>
-#include <websocketpp/server.hpp>
+//#include "websocketpp/transport/iostream.hpp"
+#include "websocketpp/server.hpp"
 
 #include <iostream>
 #include <sstream>
diff --git a/examples/echo_client/echo_client.cpp b/examples/echo_client/echo_client.cpp
index 59af661..548c417 100644
--- a/examples/echo_client/echo_client.cpp
+++ b/examples/echo_client/echo_client.cpp
@@ -25,8 +25,8 @@
  *
  */
 
-#include <websocketpp/config/asio_no_tls_client.hpp>
-#include <websocketpp/client.hpp>
+#include "websocketpp/config/asio_no_tls_client.hpp"
+#include "websocketpp/client.hpp"
 
 #include <iostream>
 
diff --git a/examples/echo_server/echo_server.cpp b/examples/echo_server/echo_server.cpp
index d234009..cf17cf6 100644
--- a/examples/echo_server/echo_server.cpp
+++ b/examples/echo_server/echo_server.cpp
@@ -1,6 +1,6 @@
-#include <websocketpp/config/asio_no_tls.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
 
-#include <websocketpp/server.hpp>
+#include "websocketpp/server.hpp"
 
 #include <iostream>
 
diff --git a/examples/echo_server_both/echo_server_both.cpp b/examples/echo_server_both/echo_server_both.cpp
index 2c2c4ea..7f1aef5 100644
--- a/examples/echo_server_both/echo_server_both.cpp
+++ b/examples/echo_server_both/echo_server_both.cpp
@@ -1,5 +1,5 @@
-#include <websocketpp/config/asio.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/asio.hpp"
+#include "websocketpp/server.hpp"
 
 #include <iostream>
 
@@ -60,7 +60,7 @@ context_ptr on_tls_init(websocketpp::connection_hdl hdl) {
 int main() {
     // set up an external io_service to run both endpoints on. This is not
     // strictly necessary, but simplifies thread management a bit.
-    boost::asio::io_service ios;
+    boost::asio::io_context ios;
 
     // set up plain endpoint
     server_plain endpoint_plain;
diff --git a/examples/echo_server_tls/echo_server_tls.cpp b/examples/echo_server_tls/echo_server_tls.cpp
index 3d704f5..8d3814d 100644
--- a/examples/echo_server_tls/echo_server_tls.cpp
+++ b/examples/echo_server_tls/echo_server_tls.cpp
@@ -34,9 +34,9 @@
   * you do not need this sort of flexibility.
   */
 
-#include <websocketpp/config/asio.hpp>
+#include "websocketpp/config/asio.hpp"
 
-#include <websocketpp/server.hpp>
+#include "websocketpp/server.hpp"
 
 #include <iostream>
 
diff --git a/examples/enriched_storage/enriched_storage.cpp b/examples/enriched_storage/enriched_storage.cpp
index fb23319..7e8b4cb 100644
--- a/examples/enriched_storage/enriched_storage.cpp
+++ b/examples/enriched_storage/enriched_storage.cpp
@@ -1,6 +1,6 @@
 #include <iostream>
-#include <websocketpp/config/asio_no_tls.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
+#include "websocketpp/server.hpp"
 
 struct connection_data {
     int sessionid;
diff --git a/examples/external_io_service/external_io_service.cpp b/examples/external_io_service/external_io_service.cpp
index 7372d59..b71eb0d 100644
--- a/examples/external_io_service/external_io_service.cpp
+++ b/examples/external_io_service/external_io_service.cpp
@@ -26,8 +26,8 @@
 
 #include "tcp_echo_server.hpp"
 
-#include <websocketpp/config/asio_no_tls.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
+#include "websocketpp/server.hpp"
 
 #include <iostream>
 
diff --git a/examples/external_io_service/tcp_echo_server.hpp b/examples/external_io_service/tcp_echo_server.hpp
index ef4ce18..4930c66 100644
--- a/examples/external_io_service/tcp_echo_server.hpp
+++ b/examples/external_io_service/tcp_echo_server.hpp
@@ -31,9 +31,9 @@
  * example: cpp03/echo/async_tcp_echo_server.cpp
  */ 
 
-#include <websocketpp/common/asio.hpp>
-#include <websocketpp/common/memory.hpp>
-#include <websocketpp/common/functional.hpp>
+#include "websocketpp/common/asio.hpp"
+#include "websocketpp/common/memory.hpp"
+#include "websocketpp/common/functional.hpp"
 
 using websocketpp::lib::placeholders::_1;
 using websocketpp::lib::placeholders::_2;
diff --git a/examples/handler_switch/handler_switch.cpp b/examples/handler_switch/handler_switch.cpp
index c2cf6ff..5a60718 100644
--- a/examples/handler_switch/handler_switch.cpp
+++ b/examples/handler_switch/handler_switch.cpp
@@ -1,7 +1,7 @@
 #include <iostream>
 
-#include <websocketpp/config/asio_no_tls.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
+#include "websocketpp/server.hpp"
 
 typedef websocketpp::server<websocketpp::config::asio> server;
 
diff --git a/examples/iostream_server/iostream_server.cpp b/examples/iostream_server/iostream_server.cpp
index 4fc5c1d..73b2831 100644
--- a/examples/iostream_server/iostream_server.cpp
+++ b/examples/iostream_server/iostream_server.cpp
@@ -1,6 +1,6 @@
-#include <websocketpp/config/core.hpp>
+#include "websocketpp/config/core.hpp"
 
-#include <websocketpp/server.hpp>
+#include "websocketpp/server.hpp"
 
 #include <iostream>
 #include <fstream>
diff --git a/examples/print_client/print_client.cpp b/examples/print_client/print_client.cpp
index 7ba6e5f..5bdddd5 100644
--- a/examples/print_client/print_client.cpp
+++ b/examples/print_client/print_client.cpp
@@ -25,8 +25,8 @@
  *
  */
 
-#include <websocketpp/config/asio_no_tls_client.hpp>
-#include <websocketpp/client.hpp>
+#include "websocketpp/config/asio_no_tls_client.hpp"
+#include "websocketpp/client.hpp"
 
 #include <iostream>
 
diff --git a/examples/print_client_tls/print_client_tls.cpp b/examples/print_client_tls/print_client_tls.cpp
index 469d9c6..6165771 100644
--- a/examples/print_client_tls/print_client_tls.cpp
+++ b/examples/print_client_tls/print_client_tls.cpp
@@ -25,8 +25,8 @@
  *
  */
 
-#include <websocketpp/config/asio_client.hpp>
-#include <websocketpp/client.hpp>
+#include "websocketpp/config/asio_client.hpp"
+#include "websocketpp/client.hpp"
 
 #include <iostream>
 
diff --git a/examples/print_server/print_server.cpp b/examples/print_server/print_server.cpp
index 5f6f444..d949027 100644
--- a/examples/print_server/print_server.cpp
+++ b/examples/print_server/print_server.cpp
@@ -1,7 +1,7 @@
 #include <iostream>
 
-#include <websocketpp/config/asio_no_tls.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
+#include "websocketpp/server.hpp"
 
 typedef websocketpp::server<websocketpp::config::asio> server;
 
diff --git a/examples/scratch_client/scratch_client.cpp b/examples/scratch_client/scratch_client.cpp
index a6a1fbc..dffeacd 100644
--- a/examples/scratch_client/scratch_client.cpp
+++ b/examples/scratch_client/scratch_client.cpp
@@ -28,11 +28,11 @@
 // Additional related material can be found in the tutorials/utility_client
 // directory of the WebSocket++ repository.
 
-#include <websocketpp/config/asio_no_tls_client.hpp>
-#include <websocketpp/client.hpp>
+#include "websocketpp/config/asio_no_tls_client.hpp"
+#include "websocketpp/client.hpp"
 
-#include <websocketpp/common/thread.hpp>
-#include <websocketpp/common/memory.hpp>
+#include "websocketpp/common/thread.hpp"
+#include "websocketpp/common/memory.hpp"
 
 #include <cstdlib>
 #include <iostream>
diff --git a/examples/scratch_server/scratch_server.cpp b/examples/scratch_server/scratch_server.cpp
index 901ae8e..5f51f52 100644
--- a/examples/scratch_server/scratch_server.cpp
+++ b/examples/scratch_server/scratch_server.cpp
@@ -5,10 +5,10 @@
 
 #include <iostream>
 
-#include <websocketpp/config/debug_asio_no_tls.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/debug_asio_no_tls.hpp"
+#include "websocketpp/server.hpp"
 
-#include <websocketpp/extensions/permessage_deflate/enabled.hpp>
+#include "websocketpp/extensions/permessage_deflate/enabled.hpp"
 
 struct deflate_config : public websocketpp::config::debug_core {
     typedef deflate_config type;
diff --git a/examples/simple_broadcast_server/simple_broadcast_server.cpp b/examples/simple_broadcast_server/simple_broadcast_server.cpp
index 7c48476..99108f4 100644
--- a/examples/simple_broadcast_server/simple_broadcast_server.cpp
+++ b/examples/simple_broadcast_server/simple_broadcast_server.cpp
@@ -1,6 +1,6 @@
 #include <set>
-#include <websocketpp/config/asio_no_tls.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
+#include "websocketpp/server.hpp"
 
 typedef websocketpp::server<websocketpp::config::asio> server;
 
diff --git a/examples/sip_client/sip_client.cpp b/examples/sip_client/sip_client.cpp
index 66fa857..e5774b3 100644
--- a/examples/sip_client/sip_client.cpp
+++ b/examples/sip_client/sip_client.cpp
@@ -1,8 +1,8 @@
 #include <condition_variable>
 
-#include <websocketpp/config/asio_no_tls_client.hpp>
+#include "websocketpp/config/asio_no_tls_client.hpp"
 
-#include <websocketpp/client.hpp>
+#include "websocketpp/client.hpp"
 
 #include <iostream>
 
diff --git a/examples/subprotocol_server/subprotocol_server.cpp b/examples/subprotocol_server/subprotocol_server.cpp
index 9593c01..10f9282 100644
--- a/examples/subprotocol_server/subprotocol_server.cpp
+++ b/examples/subprotocol_server/subprotocol_server.cpp
@@ -1,7 +1,7 @@
 #include <iostream>
 
-#include <websocketpp/config/asio_no_tls.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
+#include "websocketpp/server.hpp"
 
 typedef websocketpp::server<websocketpp::config::asio> server;
 
diff --git a/examples/telemetry_client/telemetry_client.cpp b/examples/telemetry_client/telemetry_client.cpp
index f0f7fae..a9be94e 100644
--- a/examples/telemetry_client/telemetry_client.cpp
+++ b/examples/telemetry_client/telemetry_client.cpp
@@ -1,10 +1,10 @@
-#include <websocketpp/config/asio_no_tls_client.hpp>
-#include <websocketpp/client.hpp>
+#include "websocketpp/config/asio_no_tls_client.hpp"
+#include "websocketpp/client.hpp"
 
 // This header pulls in the WebSocket++ abstracted thread support that will
 // select between boost::thread and std::thread based on how the build system
 // is configured.
-#include <websocketpp/common/thread.hpp>
+#include "websocketpp/common/thread.hpp"
 
 /**
  * Define a semi-cross platform helper method that waits/sleeps for a bit.
diff --git a/examples/telemetry_server/telemetry_server.cpp b/examples/telemetry_server/telemetry_server.cpp
index 3f8e604..25e61bb 100644
--- a/examples/telemetry_server/telemetry_server.cpp
+++ b/examples/telemetry_server/telemetry_server.cpp
@@ -1,6 +1,6 @@
-#include <websocketpp/config/asio_no_tls.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
 
-#include <websocketpp/server.hpp>
+#include "websocketpp/server.hpp"
 
 #include <fstream>
 #include <iostream>
diff --git a/examples/testee_client/testee_client.cpp b/examples/testee_client/testee_client.cpp
index b66e633..d1d9dea 100644
--- a/examples/testee_client/testee_client.cpp
+++ b/examples/testee_client/testee_client.cpp
@@ -25,9 +25,9 @@
  *
  */
 
-#include <websocketpp/config/asio_no_tls_client.hpp>
-#include <websocketpp/client.hpp>
-#include <websocketpp/extensions/permessage_deflate/enabled.hpp>
+#include "websocketpp/config/asio_no_tls_client.hpp"
+#include "websocketpp/client.hpp"
+#include "websocketpp/extensions/permessage_deflate/enabled.hpp"
 
 #include <iostream>
 
diff --git a/examples/testee_server/testee_server.cpp b/examples/testee_server/testee_server.cpp
index 9ac9a7d..aa269b6 100644
--- a/examples/testee_server/testee_server.cpp
+++ b/examples/testee_server/testee_server.cpp
@@ -25,9 +25,9 @@
  *
  */
 
-#include <websocketpp/config/asio_no_tls.hpp>
-#include <websocketpp/server.hpp>
-#include <websocketpp/extensions/permessage_deflate/enabled.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
+#include "websocketpp/server.hpp"
+#include "websocketpp/extensions/permessage_deflate/enabled.hpp"
 #include <iostream>
 
 struct testee_config : public websocketpp::config::asio {
diff --git a/examples/utility_client/utility_client.cpp b/examples/utility_client/utility_client.cpp
index aa43b8e..d7b6eae 100644
--- a/examples/utility_client/utility_client.cpp
+++ b/examples/utility_client/utility_client.cpp
@@ -28,11 +28,11 @@
 // Additional related material can be found in the tutorials/utility_client
 // directory of the WebSocket++ repository.
 
-#include <websocketpp/config/asio_no_tls_client.hpp>
-#include <websocketpp/client.hpp>
+#include "websocketpp/config/asio_no_tls_client.hpp"
+#include "websocketpp/client.hpp"
 
-#include <websocketpp/common/thread.hpp>
-#include <websocketpp/common/memory.hpp>
+#include "websocketpp/common/thread.hpp"
+#include "websocketpp/common/memory.hpp"
 
 #include <cstdlib>
 #include <iostream>
diff --git a/test/connection/connection.cpp b/test/connection/connection.cpp
index cb7b69a..cfce7ef 100644
--- a/test/connection/connection.cpp
+++ b/test/connection/connection.cpp
@@ -31,8 +31,8 @@
 #include "connection_tu2.hpp"
 
 // Include special debugging transport
-//#include <websocketpp/config/minimal_client.hpp>
-#include <websocketpp/transport/debug/endpoint.hpp>
+//#include "websocketpp/config/minimal_client.hpp"
+#include "websocketpp/transport/debug/endpoint.hpp"
 
 // NOTE: these tests currently test against hardcoded output values. I am not
 // sure how problematic this will be. If issues arise like order of headers the
diff --git a/test/connection/connection_tu2.hpp b/test/connection/connection_tu2.hpp
index 8990ce0..1ade612 100644
--- a/test/connection/connection_tu2.hpp
+++ b/test/connection/connection_tu2.hpp
@@ -30,10 +30,10 @@
 
 // Test Environment:
 // server, no TLS, no locks, iostream based transport
-#include <websocketpp/config/debug.hpp>
-#include <websocketpp/config/core.hpp>
-#include <websocketpp/server.hpp>
-#include <websocketpp/client.hpp>
+#include "websocketpp/config/debug.hpp"
+#include "websocketpp/config/core.hpp"
+#include "websocketpp/server.hpp"
+#include "websocketpp/client.hpp"
 
 typedef websocketpp::server<websocketpp::config::core> server;
 /// NOTE: the "server" config is being used for the client here because we don't
diff --git a/test/endpoint/endpoint.cpp b/test/endpoint/endpoint.cpp
index b4c429e..2f2618a 100644
--- a/test/endpoint/endpoint.cpp
+++ b/test/endpoint/endpoint.cpp
@@ -31,8 +31,8 @@
 #include <iostream>
 #include <sstream>
 
-#include <websocketpp/config/asio.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/asio.hpp"
+#include "websocketpp/server.hpp"
 
 BOOST_AUTO_TEST_CASE( construct_server_iostream ) {
     websocketpp::server<websocketpp::config::core> s;
@@ -53,7 +53,7 @@ BOOST_AUTO_TEST_CASE( initialize_server_asio ) {
 
 BOOST_AUTO_TEST_CASE( initialize_server_asio_external ) {
     websocketpp::server<websocketpp::config::asio> s;
-    boost::asio::io_service ios;
+    boost::asio::io_context ios;
     s.init_asio(&ios);
 }
 
@@ -141,8 +141,8 @@ BOOST_AUTO_TEST_CASE( listen_after_listen_failure ) {
     server1.init_asio();
     server2.init_asio();
 
-    boost::asio::ip::tcp::endpoint ep1(boost::asio::ip::address::from_string("127.0.0.1"), 12345);
-    boost::asio::ip::tcp::endpoint ep2(boost::asio::ip::address::from_string("127.0.0.1"), 23456);
+    boost::asio::ip::tcp::endpoint ep1(boost::asio::ip::make_address("127.0.0.1"), 12345);
+    boost::asio::ip::tcp::endpoint ep2(boost::asio::ip::make_address("127.0.0.1"), 23456);
 
     server1.listen(ep1, ec);
     BOOST_CHECK(!ec);
diff --git a/test/extension/extension.cpp b/test/extension/extension.cpp
index 5439c07..2a3ec0e 100644
--- a/test/extension/extension.cpp
+++ b/test/extension/extension.cpp
@@ -30,7 +30,7 @@
 
 #include <string>
 
-#include <websocketpp/extensions/extension.hpp>
+#include "websocketpp/extensions/extension.hpp"
 
 BOOST_AUTO_TEST_CASE( blank ) {
     BOOST_CHECK( true );
diff --git a/test/extension/permessage_deflate.cpp b/test/extension/permessage_deflate.cpp
index 805afcc..82bcf30 100644
--- a/test/extension/permessage_deflate.cpp
+++ b/test/extension/permessage_deflate.cpp
@@ -28,15 +28,15 @@
 #define BOOST_TEST_MODULE permessage_deflate
 #include <boost/test/unit_test.hpp>
 
-#include <websocketpp/error.hpp>
+#include "websocketpp/error.hpp"
 
-#include <websocketpp/extensions/extension.hpp>
-#include <websocketpp/extensions/permessage_deflate/disabled.hpp>
-#include <websocketpp/extensions/permessage_deflate/enabled.hpp>
+#include "websocketpp/extensions/extension.hpp"
+#include "websocketpp/extensions/permessage_deflate/disabled.hpp"
+#include "websocketpp/extensions/permessage_deflate/enabled.hpp"
 
 #include <string>
 
-#include <websocketpp/utilities.hpp>
+#include "websocketpp/utilities.hpp"
 #include <iostream>
 
 class config {};
diff --git a/test/http/parser.cpp b/test/http/parser.cpp
index b6e0d37..b7f8493 100644
--- a/test/http/parser.cpp
+++ b/test/http/parser.cpp
@@ -31,8 +31,8 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/http/request.hpp>
-#include <websocketpp/http/response.hpp>
+#include "websocketpp/http/request.hpp"
+#include "websocketpp/http/response.hpp"
 
 BOOST_AUTO_TEST_CASE( is_token_char ) {
     // Valid characters
diff --git a/test/http/parser_perf.cpp b/test/http/parser_perf.cpp
index 0c76bc7..a73da81 100644
--- a/test/http/parser_perf.cpp
+++ b/test/http/parser_perf.cpp
@@ -25,9 +25,10 @@
  *
  */
 
-#include <websocketpp/http/parser.hpp>
+#include "websocketpp/http/parser.hpp"
 
 #include <chrono>
+#include <iostream>
 
 class scoped_timer {
 public:
diff --git a/test/logger/basic.cpp b/test/logger/basic.cpp
index a730535..c9e4881 100644
--- a/test/logger/basic.cpp
+++ b/test/logger/basic.cpp
@@ -30,9 +30,9 @@
 
 #include <string>
 
-#include <websocketpp/logger/basic.hpp>
-#include <websocketpp/concurrency/none.hpp>
-#include <websocketpp/concurrency/basic.hpp>
+#include "websocketpp/logger/basic.hpp"
+#include "websocketpp/concurrency/none.hpp"
+#include "websocketpp/concurrency/basic.hpp"
 
 typedef websocketpp::log::basic<websocketpp::concurrency::basic,websocketpp::log::alevel> basic_access_log_type;
 
diff --git a/test/message_buffer/alloc.cpp b/test/message_buffer/alloc.cpp
index 9f6ba2a..7a5ec36 100644
--- a/test/message_buffer/alloc.cpp
+++ b/test/message_buffer/alloc.cpp
@@ -31,7 +31,7 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/message_buffer/alloc.hpp>
+#include "websocketpp/message_buffer/alloc.hpp"
 
 template <template <class> class con_msg_manager>
 struct stub {
diff --git a/test/message_buffer/message.cpp b/test/message_buffer/message.cpp
index 1fb12d3..cde347d 100644
--- a/test/message_buffer/message.cpp
+++ b/test/message_buffer/message.cpp
@@ -31,7 +31,7 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/message_buffer/message.hpp>
+#include "websocketpp/message_buffer/message.hpp"
 
 template <typename message>
 struct stub {
diff --git a/test/message_buffer/pool.cpp b/test/message_buffer/pool.cpp
index 2ecf875..5f6ad6f 100644
--- a/test/message_buffer/pool.cpp
+++ b/test/message_buffer/pool.cpp
@@ -31,9 +31,9 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/processors/hybi00.hpp>
-#include <websocketpp/http/request.hpp>
-#include <websocketpp/http/response.hpp>
+#include "websocketpp/processors/hybi00.hpp"
+#include "websocketpp/http/request.hpp"
+#include "websocketpp/http/response.hpp"
 
 
 BOOST_AUTO_TEST_CASE( exact_match ) {
diff --git a/test/processors/extension_permessage_compress.cpp b/test/processors/extension_permessage_compress.cpp
index 7f26a9d..518bb5a 100644
--- a/test/processors/extension_permessage_compress.cpp
+++ b/test/processors/extension_permessage_compress.cpp
@@ -30,10 +30,10 @@
 
 #include <iostream>
 #include <string>
-#include <websocketpp/common/memory.hpp>
+#include "websocketpp/common/memory.hpp"
 
-#include <websocketpp/http/request.hpp>
-#include <websocketpp/extensions/permessage_deflate/enabled.hpp>
+#include "websocketpp/http/request.hpp"
+#include "websocketpp/extensions/permessage_deflate/enabled.hpp"
 
 struct config {
     typedef websocketpp::http::parser::request request_type;
diff --git a/test/processors/hybi00.cpp b/test/processors/hybi00.cpp
index e6ad530..574cb89 100644
--- a/test/processors/hybi00.cpp
+++ b/test/processors/hybi00.cpp
@@ -31,11 +31,11 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/processors/hybi00.hpp>
-#include <websocketpp/http/request.hpp>
-#include <websocketpp/http/response.hpp>
-#include <websocketpp/message_buffer/message.hpp>
-#include <websocketpp/message_buffer/alloc.hpp>
+#include "websocketpp/processors/hybi00.hpp"
+#include "websocketpp/http/request.hpp"
+#include "websocketpp/http/response.hpp"
+#include "websocketpp/message_buffer/message.hpp"
+#include "websocketpp/message_buffer/alloc.hpp"
 
 struct stub_config {
     typedef websocketpp::http::parser::request request_type;
diff --git a/test/processors/hybi07.cpp b/test/processors/hybi07.cpp
index fe2cb07..b03beb9 100644
--- a/test/processors/hybi07.cpp
+++ b/test/processors/hybi07.cpp
@@ -31,13 +31,13 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/processors/hybi07.hpp>
-#include <websocketpp/http/request.hpp>
-#include <websocketpp/http/response.hpp>
-#include <websocketpp/message_buffer/message.hpp>
-#include <websocketpp/message_buffer/alloc.hpp>
-#include <websocketpp/extensions/permessage_deflate/disabled.hpp>
-#include <websocketpp/random/none.hpp>
+#include "websocketpp/processors/hybi07.hpp"
+#include "websocketpp/http/request.hpp"
+#include "websocketpp/http/response.hpp"
+#include "websocketpp/message_buffer/message.hpp"
+#include "websocketpp/message_buffer/alloc.hpp"
+#include "websocketpp/extensions/permessage_deflate/disabled.hpp"
+#include "websocketpp/random/none.hpp"
 
 struct stub_config {
     typedef websocketpp::http::parser::request request_type;
diff --git a/test/processors/hybi08.cpp b/test/processors/hybi08.cpp
index 5b0737f..35f7a61 100644
--- a/test/processors/hybi08.cpp
+++ b/test/processors/hybi08.cpp
@@ -31,13 +31,13 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/processors/hybi08.hpp>
-#include <websocketpp/http/request.hpp>
-#include <websocketpp/http/response.hpp>
-#include <websocketpp/message_buffer/message.hpp>
-#include <websocketpp/message_buffer/alloc.hpp>
-#include <websocketpp/extensions/permessage_deflate/disabled.hpp>
-#include <websocketpp/random/none.hpp>
+#include "websocketpp/processors/hybi08.hpp"
+#include "websocketpp/http/request.hpp"
+#include "websocketpp/http/response.hpp"
+#include "websocketpp/message_buffer/message.hpp"
+#include "websocketpp/message_buffer/alloc.hpp"
+#include "websocketpp/extensions/permessage_deflate/disabled.hpp"
+#include "websocketpp/random/none.hpp"
 
 struct stub_config {
     typedef websocketpp::http::parser::request request_type;
diff --git a/test/processors/hybi13.cpp b/test/processors/hybi13.cpp
index 96d00be..27ea539 100644
--- a/test/processors/hybi13.cpp
+++ b/test/processors/hybi13.cpp
@@ -31,16 +31,16 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/processors/hybi13.hpp>
+#include "websocketpp/processors/hybi13.hpp"
 
-#include <websocketpp/http/request.hpp>
-#include <websocketpp/http/response.hpp>
-#include <websocketpp/message_buffer/message.hpp>
-#include <websocketpp/message_buffer/alloc.hpp>
-#include <websocketpp/random/none.hpp>
+#include "websocketpp/http/request.hpp"
+#include "websocketpp/http/response.hpp"
+#include "websocketpp/message_buffer/message.hpp"
+#include "websocketpp/message_buffer/alloc.hpp"
+#include "websocketpp/random/none.hpp"
 
-#include <websocketpp/extensions/permessage_deflate/disabled.hpp>
-#include <websocketpp/extensions/permessage_deflate/enabled.hpp>
+#include "websocketpp/extensions/permessage_deflate/disabled.hpp"
+#include "websocketpp/extensions/permessage_deflate/enabled.hpp"
 
 struct stub_config {
     typedef websocketpp::http::parser::request request_type;
diff --git a/test/processors/processor.cpp b/test/processors/processor.cpp
index 2c4e706..76d4406 100644
--- a/test/processors/processor.cpp
+++ b/test/processors/processor.cpp
@@ -31,8 +31,8 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/processors/processor.hpp>
-#include <websocketpp/http/request.hpp>
+#include "websocketpp/processors/processor.hpp"
+#include "websocketpp/http/request.hpp"
 
 BOOST_AUTO_TEST_CASE( exact_match ) {
     websocketpp::http::parser::request r;
diff --git a/test/random/none.cpp b/test/random/none.cpp
index b27b239..83118e9 100644
--- a/test/random/none.cpp
+++ b/test/random/none.cpp
@@ -28,8 +28,8 @@
 #define BOOST_TEST_MODULE random_none
 #include <boost/test/unit_test.hpp>
 
-#include <websocketpp/common/stdint.hpp>
-#include <websocketpp/random/none.hpp>
+#include "websocketpp/common/stdint.hpp"
+#include "websocketpp/random/none.hpp"
 
 BOOST_AUTO_TEST_CASE( does_it_compile ) {
     websocketpp::random::none::int_generator<int32_t> rng;
diff --git a/test/random/random_device.cpp b/test/random/random_device.cpp
index b3ce3a5..9a0738d 100644
--- a/test/random/random_device.cpp
+++ b/test/random/random_device.cpp
@@ -30,9 +30,9 @@
 
 #include <iostream>
 
-#include <websocketpp/common/stdint.hpp>
-#include <websocketpp/random/random_device.hpp>
-#include <websocketpp/concurrency/none.hpp>
+#include "websocketpp/common/stdint.hpp"
+#include "websocketpp/random/random_device.hpp"
+#include "websocketpp/concurrency/none.hpp"
 
 BOOST_AUTO_TEST_CASE( compiles ) {
     websocketpp::random::random_device::int_generator<int32_t,websocketpp::concurrency::none> rng;
diff --git a/test/roles/client.cpp b/test/roles/client.cpp
index 9aab3ee..cf640b0 100644
--- a/test/roles/client.cpp
+++ b/test/roles/client.cpp
@@ -30,12 +30,12 @@
 
 #include <iostream>
 
-#include <websocketpp/random/random_device.hpp>
+#include "websocketpp/random/random_device.hpp"
 
-#include <websocketpp/config/core.hpp>
-#include <websocketpp/client.hpp>
+#include "websocketpp/config/core.hpp"
+#include "websocketpp/client.hpp"
 
-#include <websocketpp/http/request.hpp>
+#include "websocketpp/http/request.hpp"
 
 struct stub_config : public websocketpp::config::core {
     typedef core::concurrency_type concurrency_type;
diff --git a/test/roles/server.cpp b/test/roles/server.cpp
index 5f3d436..f52ad50 100644
--- a/test/roles/server.cpp
+++ b/test/roles/server.cpp
@@ -32,8 +32,8 @@
 
 // Test Environment:
 // server, no TLS, no locks, iostream based transport
-#include <websocketpp/config/core.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/core.hpp"
+#include "websocketpp/server.hpp"
 
 typedef websocketpp::server<websocketpp::config::core> server;
 typedef websocketpp::config::core::message_type::ptr message_ptr;
diff --git a/test/transport/asio/base.cpp b/test/transport/asio/base.cpp
index e9f96ae..73f3032 100644
--- a/test/transport/asio/base.cpp
+++ b/test/transport/asio/base.cpp
@@ -30,7 +30,7 @@
 
 #include <iostream>
 
-#include <websocketpp/transport/asio/base.hpp>
+#include "websocketpp/transport/asio/base.hpp"
 
 BOOST_AUTO_TEST_CASE( blank_error ) {
     websocketpp::lib::error_code ec;
diff --git a/test/transport/asio/security.cpp b/test/transport/asio/security.cpp
index a75e2a8..b2bed1b 100644
--- a/test/transport/asio/security.cpp
+++ b/test/transport/asio/security.cpp
@@ -30,10 +30,10 @@
 
 #include <iostream>
 
-#include <websocketpp/common/type_traits.hpp>
+#include "websocketpp/common/type_traits.hpp"
 
-#include <websocketpp/transport/asio/security/none.hpp>
-#include <websocketpp/transport/asio/security/tls.hpp>
+#include "websocketpp/transport/asio/security/none.hpp"
+#include "websocketpp/transport/asio/security/tls.hpp"
 
 template <typename base>
 struct dummy_con : public base {
diff --git a/test/transport/asio/timers.cpp b/test/transport/asio/timers.cpp
index aa03d61..d470a18 100644
--- a/test/transport/asio/timers.cpp
+++ b/test/transport/asio/timers.cpp
@@ -31,21 +31,21 @@
 #include <exception>
 #include <iostream>
 
-#include <websocketpp/common/thread.hpp>
+#include "websocketpp/common/thread.hpp"
 
-#include <websocketpp/transport/asio/endpoint.hpp>
-#include <websocketpp/transport/asio/security/tls.hpp>
+#include "websocketpp/transport/asio/endpoint.hpp"
+#include "websocketpp/transport/asio/security/tls.hpp"
 
 // Concurrency
-#include <websocketpp/concurrency/none.hpp>
+#include "websocketpp/concurrency/none.hpp"
 
 // HTTP
-#include <websocketpp/http/request.hpp>
-#include <websocketpp/http/response.hpp>
+#include "websocketpp/http/request.hpp"
+#include "websocketpp/http/response.hpp"
 
 // Loggers
-#include <websocketpp/logger/stub.hpp>
-//#include <websocketpp/logger/basic.hpp>
+#include "websocketpp/logger/stub.hpp"
+//#include "websocketpp/logger/basic.hpp"
 
 #include <boost/asio.hpp>
 
@@ -54,7 +54,7 @@ void run_dummy_server(int port) {
     using boost::asio::ip::tcp;
 
     try {
-        boost::asio::io_service io_service;
+        boost::asio::io_context io_service;
         tcp::acceptor acceptor(io_service, tcp::endpoint(tcp::v6(), port));
         tcp::socket socket(io_service);
 
@@ -79,7 +79,7 @@ void run_dummy_server(int port) {
 
 // Wait for the specified time period then fail the test
 void run_test_timer(long value) {
-    boost::asio::io_service ios;
+    boost::asio::io_context ios;
     boost::asio::deadline_timer t(ios,boost::posix_time::milliseconds(value));
     boost::system::error_code ec;
     t.wait(ec);
diff --git a/test/transport/integration.cpp b/test/transport/integration.cpp
index c083cfd..09605a3 100644
--- a/test/transport/integration.cpp
+++ b/test/transport/integration.cpp
@@ -28,15 +28,15 @@
 #define BOOST_TEST_MODULE transport_integration
 #include <boost/test/unit_test.hpp>
 
-#include <websocketpp/common/thread.hpp>
+#include "websocketpp/common/thread.hpp"
 
-#include <websocketpp/config/core.hpp>
-#include <websocketpp/config/core_client.hpp>
-#include <websocketpp/config/asio.hpp>
-#include <websocketpp/config/asio_client.hpp>
-#include <websocketpp/config/debug_asio.hpp>
-#include <websocketpp/server.hpp>
-#include <websocketpp/client.hpp>
+#include "websocketpp/config/core.hpp"
+#include "websocketpp/config/core_client.hpp"
+#include "websocketpp/config/asio.hpp"
+#include "websocketpp/config/asio_client.hpp"
+#include "websocketpp/config/debug_asio.hpp"
+#include "websocketpp/server.hpp"
+#include "websocketpp/client.hpp"
 
 struct config : public websocketpp::config::asio_client {
     typedef config type;
@@ -221,7 +221,7 @@ void run_dummy_server(int port) {
     using boost::asio::ip::tcp;
 
     try {
-        boost::asio::io_service io_service;
+        boost::asio::io_context io_service;
         tcp::acceptor acceptor(io_service, tcp::endpoint(tcp::v6(), port));
         tcp::socket socket(io_service);
 
@@ -248,10 +248,9 @@ void run_dummy_client(std::string port) {
     using boost::asio::ip::tcp;
 
     try {
-        boost::asio::io_service io_service;
+        boost::asio::io_context io_service;
         tcp::resolver resolver(io_service);
-        tcp::resolver::query query("localhost", port);
-        tcp::resolver::iterator iterator = resolver.resolve(query);
+        tcp::resolver::results_type iterator = resolver.resolve("localhost", port);
         tcp::socket socket(io_service);
 
         boost::asio::connect(socket, iterator);
@@ -361,7 +360,7 @@ public:
     : m_timer(m_io_service, boost::posix_time::seconds(seconds))
     {
         m_timer.async_wait(bind(&test_deadline_timer::expired, this, ::_1));
-        std::size_t (boost::asio::io_service::*run)() = &boost::asio::io_service::run;
+        std::size_t (boost::asio::io_context::*run)() = &boost::asio::io_context::run;
         m_timer_thread = websocketpp::lib::thread(websocketpp::lib::bind(run, &m_io_service));
     }
     ~test_deadline_timer()
@@ -379,7 +378,7 @@ public:
         BOOST_FAIL("Test timed out");
     }
 
-    boost::asio::io_service m_io_service;
+    boost::asio::io_context m_io_service;
     boost::asio::deadline_timer m_timer;
     websocketpp::lib::thread m_timer_thread;
 };
diff --git a/test/transport/iostream/connection.cpp b/test/transport/iostream/connection.cpp
index f2aaff9..5a01894 100644
--- a/test/transport/iostream/connection.cpp
+++ b/test/transport/iostream/connection.cpp
@@ -32,14 +32,14 @@
 #include <cstring>
 #include <string>
 
-#include <websocketpp/common/memory.hpp>
+#include "websocketpp/common/memory.hpp"
 
-#include <websocketpp/error.hpp>
-#include <websocketpp/transport/iostream/connection.hpp>
+#include "websocketpp/error.hpp"
+#include "websocketpp/transport/iostream/connection.hpp"
 
 // Policies
-#include <websocketpp/concurrency/basic.hpp>
-#include <websocketpp/logger/basic.hpp>
+#include "websocketpp/concurrency/basic.hpp"
+#include "websocketpp/logger/basic.hpp"
 
 struct config {
     typedef websocketpp::concurrency::basic concurrency_type;
diff --git a/test/transport/iostream/endpoint.cpp b/test/transport/iostream/endpoint.cpp
index ded9967..95f6145 100644
--- a/test/transport/iostream/endpoint.cpp
+++ b/test/transport/iostream/endpoint.cpp
@@ -30,7 +30,7 @@
 
 #include <iostream>
 
-#include <websocketpp/transport/iostream/endpoint.hpp>
+#include "websocketpp/transport/iostream/endpoint.hpp"
 
 BOOST_AUTO_TEST_CASE( placeholder ) {}
 
diff --git a/test/utility/close.cpp b/test/utility/close.cpp
index 50f9f78..57cbc4d 100644
--- a/test/utility/close.cpp
+++ b/test/utility/close.cpp
@@ -31,8 +31,8 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/close.hpp>
-#include <websocketpp/utilities.hpp>
+#include "websocketpp/close.hpp"
+#include "websocketpp/utilities.hpp"
 
 using namespace websocketpp;
 
diff --git a/test/utility/error.cpp b/test/utility/error.cpp
index 1379a95..ad6fa8d 100644
--- a/test/utility/error.cpp
+++ b/test/utility/error.cpp
@@ -28,7 +28,7 @@
 #define BOOST_TEST_MODULE error
 #include <boost/test/unit_test.hpp>
 
-#include <websocketpp/error.hpp>
+#include "websocketpp/error.hpp"
 
 BOOST_AUTO_TEST_CASE( constructing_exceptions ) {
     websocketpp::lib::error_code test_ec = websocketpp::error::make_error_code(websocketpp::error::test);
diff --git a/test/utility/frame.cpp b/test/utility/frame.cpp
index 879c2ef..c39de33 100644
--- a/test/utility/frame.cpp
+++ b/test/utility/frame.cpp
@@ -31,8 +31,8 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/frame.hpp>
-#include <websocketpp/utilities.hpp>
+#include "websocketpp/frame.hpp"
+#include "websocketpp/utilities.hpp"
 
 using namespace websocketpp;
 
diff --git a/test/utility/sha1.cpp b/test/utility/sha1.cpp
index ab25f97..533e54b 100644
--- a/test/utility/sha1.cpp
+++ b/test/utility/sha1.cpp
@@ -31,8 +31,8 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/sha1/sha1.hpp>
-#include <websocketpp/utilities.hpp>
+#include "websocketpp/sha1/sha1.hpp"
+#include "websocketpp/utilities.hpp"
 
 BOOST_AUTO_TEST_SUITE ( sha1 )
 
diff --git a/test/utility/uri.cpp b/test/utility/uri.cpp
index 2b0c886..e22fc77 100644
--- a/test/utility/uri.cpp
+++ b/test/utility/uri.cpp
@@ -31,7 +31,7 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/uri.hpp>
+#include "websocketpp/uri.hpp"
 
 // Test a regular valid ws URI
 BOOST_AUTO_TEST_CASE( uri_valid ) {
diff --git a/test/utility/utilities.cpp b/test/utility/utilities.cpp
index 8cbb8c3..9edccd2 100644
--- a/test/utility/utilities.cpp
+++ b/test/utility/utilities.cpp
@@ -31,7 +31,7 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/utilities.hpp>
+#include "websocketpp/utilities.hpp"
 
 BOOST_AUTO_TEST_SUITE ( utility )
 
diff --git a/tutorials/utility_client/step2.cpp b/tutorials/utility_client/step2.cpp
index a1e5796..aeaf4a7 100644
--- a/tutorials/utility_client/step2.cpp
+++ b/tutorials/utility_client/step2.cpp
@@ -28,8 +28,8 @@
 // Additional related material can be found in the tutorials/utility_client
 // directory of the WebSocket++ repository.
 
-#include <websocketpp/config/asio_no_tls_client.hpp>
-#include <websocketpp/client.hpp>
+#include "websocketpp/config/asio_no_tls_client.hpp"
+#include "websocketpp/client.hpp"
 
 #include <iostream>
 #include <string>
diff --git a/tutorials/utility_client/step3.cpp b/tutorials/utility_client/step3.cpp
index 82e652f..f2cc027 100644
--- a/tutorials/utility_client/step3.cpp
+++ b/tutorials/utility_client/step3.cpp
@@ -28,11 +28,11 @@
 // Additional related material can be found in the tutorials/utility_client
 // directory of the WebSocket++ repository.
 
-#include <websocketpp/config/asio_no_tls_client.hpp>
-#include <websocketpp/client.hpp>
+#include "websocketpp/config/asio_no_tls_client.hpp"
+#include "websocketpp/client.hpp"
 
-#include <websocketpp/common/thread.hpp>
-#include <websocketpp/common/memory.hpp>
+#include "websocketpp/common/thread.hpp"
+#include "websocketpp/common/memory.hpp"
 
 #include <iostream>
 #include <string>
diff --git a/tutorials/utility_client/step4.cpp b/tutorials/utility_client/step4.cpp
index 73aee65..c17b1c1 100644
--- a/tutorials/utility_client/step4.cpp
+++ b/tutorials/utility_client/step4.cpp
@@ -28,11 +28,11 @@
 // Additional related material can be found in the tutorials/utility_client
 // directory of the WebSocket++ repository.
 
-#include <websocketpp/config/asio_no_tls_client.hpp>
-#include <websocketpp/client.hpp>
+#include "websocketpp/config/asio_no_tls_client.hpp"
+#include "websocketpp/client.hpp"
 
-#include <websocketpp/common/thread.hpp>
-#include <websocketpp/common/memory.hpp>
+#include "websocketpp/common/thread.hpp"
+#include "websocketpp/common/memory.hpp"
 
 #include <cstdlib>
 #include <iostream>
diff --git a/tutorials/utility_client/step5.cpp b/tutorials/utility_client/step5.cpp
index 3e57b3c..920ab74 100644
--- a/tutorials/utility_client/step5.cpp
+++ b/tutorials/utility_client/step5.cpp
@@ -28,11 +28,11 @@
 // Additional related material can be found in the tutorials/utility_client
 // directory of the WebSocket++ repository.
 
-#include <websocketpp/config/asio_no_tls_client.hpp>
-#include <websocketpp/client.hpp>
+#include "websocketpp/config/asio_no_tls_client.hpp"
+#include "websocketpp/client.hpp"
 
-#include <websocketpp/common/thread.hpp>
-#include <websocketpp/common/memory.hpp>
+#include "websocketpp/common/thread.hpp"
+#include "websocketpp/common/memory.hpp"
 
 #include <cstdlib>
 #include <iostream>
diff --git a/tutorials/utility_client/step6.cpp b/tutorials/utility_client/step6.cpp
index 208b95d..07178ed 100644
--- a/tutorials/utility_client/step6.cpp
+++ b/tutorials/utility_client/step6.cpp
@@ -28,11 +28,11 @@
 // Additional related material can be found in the tutorials/utility_client
 // directory of the WebSocket++ repository.
 
-#include <websocketpp/config/asio_no_tls_client.hpp>
-#include <websocketpp/client.hpp>
+#include "websocketpp/config/asio_no_tls_client.hpp"
+#include "websocketpp/client.hpp"
 
-#include <websocketpp/common/thread.hpp>
-#include <websocketpp/common/memory.hpp>
+#include "websocketpp/common/thread.hpp"
+#include "websocketpp/common/memory.hpp"
 
 #include <cstdlib>
 #include <iostream>
diff --git a/tutorials/utility_server/step1.cpp b/tutorials/utility_server/step1.cpp
index c0e4643..5ef1235 100644
--- a/tutorials/utility_server/step1.cpp
+++ b/tutorials/utility_server/step1.cpp
@@ -32,8 +32,8 @@
 // Remove if you are using Boost Asio.
 #define ASIO_STANDALONE
 
-#include <websocketpp/config/asio_no_tls.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
+#include "websocketpp/server.hpp"
 
 #include <functional>
 
diff --git a/tutorials/utility_server/step2.cpp b/tutorials/utility_server/step2.cpp
index a2815bb..0201b0a 100644
--- a/tutorials/utility_server/step2.cpp
+++ b/tutorials/utility_server/step2.cpp
@@ -32,8 +32,8 @@
 // Remove if you are using Boost Asio.
 #define ASIO_STANDALONE
 
-#include <websocketpp/config/asio_no_tls.hpp>
-#include <websocketpp/server.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
+#include "websocketpp/server.hpp"
 
 #include <functional>
 
diff --git a/websocketpp/client.hpp b/websocketpp/client.hpp
index 8782d7e..561ebb4 100644
--- a/websocketpp/client.hpp
+++ b/websocketpp/client.hpp
@@ -28,6 +28,6 @@
 #ifndef WEBSOCKETPP_CLIENT_HPP
 #define WEBSOCKETPP_CLIENT_HPP
 
-#include <websocketpp/roles/client_endpoint.hpp>
+#include "websocketpp/roles/client_endpoint.hpp"
 
 #endif //WEBSOCKETPP_CLIENT_HPP
diff --git a/websocketpp/close.hpp b/websocketpp/close.hpp
index 276498e..6c6b05e 100644
--- a/websocketpp/close.hpp
+++ b/websocketpp/close.hpp
@@ -33,10 +33,10 @@
  * A package of types and methods for manipulating WebSocket close codes.
  */
 
-#include <websocketpp/error.hpp>
-#include <websocketpp/common/network.hpp>
-#include <websocketpp/common/stdint.hpp>
-#include <websocketpp/utf8_validator.hpp>
+#include "websocketpp/error.hpp"
+#include "websocketpp/common/network.hpp"
+#include "websocketpp/common/stdint.hpp"
+#include "websocketpp/utf8_validator.hpp"
 
 #include <string>
 
diff --git a/websocketpp/common/asio.hpp b/websocketpp/common/asio.hpp
index 3c8fa13..0c87082 100644
--- a/websocketpp/common/asio.hpp
+++ b/websocketpp/common/asio.hpp
@@ -51,7 +51,7 @@
     
     #include <asio.hpp>
     #include <asio/steady_timer.hpp>
-    #include <websocketpp/common/chrono.hpp> 
+    #include "websocketpp/common/chrono.hpp" 
 #else
     #include <boost/version.hpp>
     
@@ -59,7 +59,7 @@
     // boost > 1.48 pull in the steady timer and chrono library
     #if (BOOST_VERSION/100000) == 1 && ((BOOST_VERSION/100)%1000) > 48
         #include <boost/asio/steady_timer.hpp>
-        #include <websocketpp/common/chrono.hpp>
+        #include "websocketpp/common/chrono.hpp"
     #endif
     
     #include <boost/asio.hpp>
@@ -99,7 +99,7 @@ namespace lib {
             // Using boost::asio >=1.49 so we use chrono and steady_timer
             template <typename T>
             bool is_neg(T duration) {
-                return duration.count() < 0;
+                return duration.time_since_epoch().count() < 0;
             }
 
             // If boost believes it has std::chrono available it will use it
diff --git a/websocketpp/common/chrono.hpp b/websocketpp/common/chrono.hpp
index 975ee04..94247cc 100644
--- a/websocketpp/common/chrono.hpp
+++ b/websocketpp/common/chrono.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_COMMON_CHRONO_HPP
 #define WEBSOCKETPP_COMMON_CHRONO_HPP
 
-#include <websocketpp/common/cpp11.hpp>
+#include "websocketpp/common/cpp11.hpp"
 
 // If we've determined that we're in full C++11 mode and the user hasn't
 // explicitly disabled the use of C++11 functional header, then prefer it to
diff --git a/websocketpp/common/connection_hdl.hpp b/websocketpp/common/connection_hdl.hpp
index 1044c88..f68c247 100644
--- a/websocketpp/common/connection_hdl.hpp
+++ b/websocketpp/common/connection_hdl.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_COMMON_CONNECTION_HDL_HPP
 #define WEBSOCKETPP_COMMON_CONNECTION_HDL_HPP
 
-#include <websocketpp/common/memory.hpp>
+#include "websocketpp/common/memory.hpp"
 
 namespace websocketpp {
 
diff --git a/websocketpp/common/functional.hpp b/websocketpp/common/functional.hpp
index d332dd1..f60e3b4 100644
--- a/websocketpp/common/functional.hpp
+++ b/websocketpp/common/functional.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_COMMON_FUNCTIONAL_HPP
 #define WEBSOCKETPP_COMMON_FUNCTIONAL_HPP
 
-#include <websocketpp/common/cpp11.hpp>
+#include "websocketpp/common/cpp11.hpp"
 
 // If we've determined that we're in full C++11 mode and the user hasn't
 // explicitly disabled the use of C++11 functional header, then prefer it to
diff --git a/websocketpp/common/memory.hpp b/websocketpp/common/memory.hpp
index 42048e3..8f3b565 100644
--- a/websocketpp/common/memory.hpp
+++ b/websocketpp/common/memory.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_COMMON_MEMORY_HPP
 #define WEBSOCKETPP_COMMON_MEMORY_HPP
 
-#include <websocketpp/common/cpp11.hpp>
+#include "websocketpp/common/cpp11.hpp"
 
 // If we've determined that we're in full C++11 mode and the user hasn't
 // explicitly disabled the use of C++11 memory header, then prefer it to
diff --git a/websocketpp/common/network.hpp b/websocketpp/common/network.hpp
index 26a4cb9..ce31135 100644
--- a/websocketpp/common/network.hpp
+++ b/websocketpp/common/network.hpp
@@ -36,7 +36,7 @@
     #include <netinet/in.h>
 #endif
 
-#include <websocketpp/common/stdint.hpp>
+#include "websocketpp/common/stdint.hpp"
 
 namespace websocketpp {
 namespace lib {
diff --git a/websocketpp/common/random.hpp b/websocketpp/common/random.hpp
index ddf9969..9699ef2 100644
--- a/websocketpp/common/random.hpp
+++ b/websocketpp/common/random.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_COMMON_RANDOM_DEVICE_HPP
 #define WEBSOCKETPP_COMMON_RANDOM_DEVICE_HPP
 
-#include <websocketpp/common/cpp11.hpp>
+#include "websocketpp/common/cpp11.hpp"
 
 // If we've determined that we're in full C++11 mode and the user hasn't
 // explicitly disabled the use of C++11 random header, then prefer it to
diff --git a/websocketpp/common/system_error.hpp b/websocketpp/common/system_error.hpp
index e5aea25..41556da 100644
--- a/websocketpp/common/system_error.hpp
+++ b/websocketpp/common/system_error.hpp
@@ -29,7 +29,7 @@
 #define WEBSOCKETPP_COMMON_SYSTEM_ERROR_HPP
 
 
-#include <websocketpp/common/cpp11.hpp>
+#include "websocketpp/common/cpp11.hpp"
 
 // If we've determined that we're in full C++11 mode and the user hasn't
 // explicitly disabled the use of C++11 system_error header, then prefer it to
diff --git a/websocketpp/common/thread.hpp b/websocketpp/common/thread.hpp
index 1b0472a..11210d4 100644
--- a/websocketpp/common/thread.hpp
+++ b/websocketpp/common/thread.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_COMMON_THREAD_HPP
 #define WEBSOCKETPP_COMMON_THREAD_HPP
 
-#include <websocketpp/common/cpp11.hpp>
+#include "websocketpp/common/cpp11.hpp"
 
 // If we autodetect C++11 and haven't been explicitly instructed to not use
 // C++11 threads, then set the defines that instructs the rest of this header
diff --git a/websocketpp/common/type_traits.hpp b/websocketpp/common/type_traits.hpp
index c89b82b..ed6d599 100644
--- a/websocketpp/common/type_traits.hpp
+++ b/websocketpp/common/type_traits.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_COMMON_TYPE_TRAITS_HPP
 #define WEBSOCKETPP_COMMON_TYPE_TRAITS_HPP
 
-#include <websocketpp/common/cpp11.hpp>
+#include "websocketpp/common/cpp11.hpp"
 
 // If we've determined that we're in full C++11 mode and the user hasn't
 // explicitly disabled the use of C++11 functional header, then prefer it to
diff --git a/websocketpp/concurrency/basic.hpp b/websocketpp/concurrency/basic.hpp
index 1943ad7..6d6cb71 100644
--- a/websocketpp/concurrency/basic.hpp
+++ b/websocketpp/concurrency/basic.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_CONCURRENCY_BASIC_HPP
 #define WEBSOCKETPP_CONCURRENCY_BASIC_HPP
 
-#include <websocketpp/common/thread.hpp>
+#include "websocketpp/common/thread.hpp"
 
 namespace websocketpp {
 namespace concurrency {
diff --git a/websocketpp/config/asio.hpp b/websocketpp/config/asio.hpp
index d28d0fb..9d7d264 100644
--- a/websocketpp/config/asio.hpp
+++ b/websocketpp/config/asio.hpp
@@ -28,12 +28,12 @@
 #ifndef WEBSOCKETPP_CONFIG_ASIO_TLS_HPP
 #define WEBSOCKETPP_CONFIG_ASIO_TLS_HPP
 
-#include <websocketpp/config/core.hpp>
-#include <websocketpp/transport/asio/endpoint.hpp>
-#include <websocketpp/transport/asio/security/tls.hpp>
+#include "websocketpp/config/core.hpp"
+#include "websocketpp/transport/asio/endpoint.hpp"
+#include "websocketpp/transport/asio/security/tls.hpp"
 
 // Pull in non-tls config
-#include <websocketpp/config/asio_no_tls.hpp>
+#include "websocketpp/config/asio_no_tls.hpp"
 
 // Define TLS config
 namespace websocketpp {
diff --git a/websocketpp/config/asio_client.hpp b/websocketpp/config/asio_client.hpp
index 1cb594d..a745a5f 100644
--- a/websocketpp/config/asio_client.hpp
+++ b/websocketpp/config/asio_client.hpp
@@ -28,12 +28,12 @@
 #ifndef WEBSOCKETPP_CONFIG_ASIO_TLS_CLIENT_HPP
 #define WEBSOCKETPP_CONFIG_ASIO_TLS_CLIENT_HPP
 
-#include <websocketpp/config/core_client.hpp>
-#include <websocketpp/transport/asio/endpoint.hpp>
-#include <websocketpp/transport/asio/security/tls.hpp>
+#include "websocketpp/config/core_client.hpp"
+#include "websocketpp/transport/asio/endpoint.hpp"
+#include "websocketpp/transport/asio/security/tls.hpp"
 
 // Pull in non-tls config
-#include <websocketpp/config/asio_no_tls_client.hpp>
+#include "websocketpp/config/asio_no_tls_client.hpp"
 
 // Define TLS config
 namespace websocketpp {
diff --git a/websocketpp/config/asio_no_tls.hpp b/websocketpp/config/asio_no_tls.hpp
index 6c1357f..779bd8b 100644
--- a/websocketpp/config/asio_no_tls.hpp
+++ b/websocketpp/config/asio_no_tls.hpp
@@ -28,8 +28,8 @@
 #ifndef WEBSOCKETPP_CONFIG_ASIO_HPP
 #define WEBSOCKETPP_CONFIG_ASIO_HPP
 
-#include <websocketpp/config/core.hpp>
-#include <websocketpp/transport/asio/endpoint.hpp>
+#include "websocketpp/config/core.hpp"
+#include "websocketpp/transport/asio/endpoint.hpp"
 
 namespace websocketpp {
 namespace config {
diff --git a/websocketpp/config/asio_no_tls_client.hpp b/websocketpp/config/asio_no_tls_client.hpp
index 6e3f7ba..3c392a5 100644
--- a/websocketpp/config/asio_no_tls_client.hpp
+++ b/websocketpp/config/asio_no_tls_client.hpp
@@ -28,8 +28,8 @@
 #ifndef WEBSOCKETPP_CONFIG_ASIO_CLIENT_HPP
 #define WEBSOCKETPP_CONFIG_ASIO_CLIENT_HPP
 
-#include <websocketpp/config/core_client.hpp>
-#include <websocketpp/transport/asio/endpoint.hpp>
+#include "websocketpp/config/core_client.hpp"
+#include "websocketpp/transport/asio/endpoint.hpp"
 
 namespace websocketpp {
 namespace config {
diff --git a/websocketpp/config/core.hpp b/websocketpp/config/core.hpp
index 93981aa..5b09f10 100644
--- a/websocketpp/config/core.hpp
+++ b/websocketpp/config/core.hpp
@@ -29,37 +29,37 @@
 #define WEBSOCKETPP_CONFIG_CORE_HPP
 
 // Non-Policy common stuff
-#include <websocketpp/common/platforms.hpp>
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/stdint.hpp>
+#include "websocketpp/common/platforms.hpp"
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/stdint.hpp"
 
 // Concurrency
-#include <websocketpp/concurrency/basic.hpp>
+#include "websocketpp/concurrency/basic.hpp"
 
 // Transport
-#include <websocketpp/transport/iostream/endpoint.hpp>
+#include "websocketpp/transport/iostream/endpoint.hpp"
 
 // HTTP
-#include <websocketpp/http/request.hpp>
-#include <websocketpp/http/response.hpp>
+#include "websocketpp/http/request.hpp"
+#include "websocketpp/http/response.hpp"
 
 // Messages
-#include <websocketpp/message_buffer/message.hpp>
-#include <websocketpp/message_buffer/alloc.hpp>
+#include "websocketpp/message_buffer/message.hpp"
+#include "websocketpp/message_buffer/alloc.hpp"
 
 // Loggers
-#include <websocketpp/logger/basic.hpp>
-#include <websocketpp/logger/levels.hpp>
+#include "websocketpp/logger/basic.hpp"
+#include "websocketpp/logger/levels.hpp"
 
 // RNG
-#include <websocketpp/random/none.hpp>
+#include "websocketpp/random/none.hpp"
 
 // User stub base classes
-#include <websocketpp/endpoint_base.hpp>
-#include <websocketpp/connection_base.hpp>
+#include "websocketpp/endpoint_base.hpp"
+#include "websocketpp/connection_base.hpp"
 
 // Extensions
-#include <websocketpp/extensions/permessage_deflate/disabled.hpp>
+#include "websocketpp/extensions/permessage_deflate/disabled.hpp"
 
 namespace websocketpp {
 namespace config {
diff --git a/websocketpp/config/core_client.hpp b/websocketpp/config/core_client.hpp
index dadf8a4..1daa1b6 100644
--- a/websocketpp/config/core_client.hpp
+++ b/websocketpp/config/core_client.hpp
@@ -29,40 +29,40 @@
 #define WEBSOCKETPP_CONFIG_CORE_CLIENT_HPP
 
 // Non-Policy common stuff
-#include <websocketpp/common/platforms.hpp>
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/stdint.hpp>
+#include "websocketpp/common/platforms.hpp"
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/stdint.hpp"
 
 // Concurrency
 #ifndef _WEBSOCKETPP_NO_THREADING_
-#include <websocketpp/concurrency/basic.hpp>
+#include "websocketpp/concurrency/basic.hpp"
 #else
-#include <websocketpp/concurrency/none.hpp>
+#include "websocketpp/concurrency/none.hpp"
 #endif
 
 // Transport
-#include <websocketpp/transport/iostream/endpoint.hpp>
+#include "websocketpp/transport/iostream/endpoint.hpp"
 
 // HTTP
-#include <websocketpp/http/request.hpp>
-#include <websocketpp/http/response.hpp>
+#include "websocketpp/http/request.hpp"
+#include "websocketpp/http/response.hpp"
 
 // Messages
-#include <websocketpp/message_buffer/message.hpp>
-#include <websocketpp/message_buffer/alloc.hpp>
+#include "websocketpp/message_buffer/message.hpp"
+#include "websocketpp/message_buffer/alloc.hpp"
 
 // Loggers
-#include <websocketpp/logger/basic.hpp>
+#include "websocketpp/logger/basic.hpp"
 
 // RNG
-#include <websocketpp/random/random_device.hpp>
+#include "websocketpp/random/random_device.hpp"
 
 // User stub base classes
-#include <websocketpp/endpoint_base.hpp>
-#include <websocketpp/connection_base.hpp>
+#include "websocketpp/endpoint_base.hpp"
+#include "websocketpp/connection_base.hpp"
 
 // Extensions
-#include <websocketpp/extensions/permessage_deflate/disabled.hpp>
+#include "websocketpp/extensions/permessage_deflate/disabled.hpp"
 
 namespace websocketpp {
 namespace config {
diff --git a/websocketpp/config/debug.hpp b/websocketpp/config/debug.hpp
index 223f72f..bbe58be 100644
--- a/websocketpp/config/debug.hpp
+++ b/websocketpp/config/debug.hpp
@@ -31,35 +31,35 @@
 
 
 // Non-Policy common stuff
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/stdint.hpp>
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/stdint.hpp"
 
 // Concurrency
-#include <websocketpp/concurrency/basic.hpp>
+#include "websocketpp/concurrency/basic.hpp"
 
 // Transport
-#include <websocketpp/transport/iostream/endpoint.hpp>
+#include "websocketpp/transport/iostream/endpoint.hpp"
 
 // HTTP
-#include <websocketpp/http/request.hpp>
-#include <websocketpp/http/response.hpp>
+#include "websocketpp/http/request.hpp"
+#include "websocketpp/http/response.hpp"
 
 // Messages
-#include <websocketpp/message_buffer/message.hpp>
-#include <websocketpp/message_buffer/alloc.hpp>
+#include "websocketpp/message_buffer/message.hpp"
+#include "websocketpp/message_buffer/alloc.hpp"
 
 // Loggers
-#include <websocketpp/logger/basic.hpp>
+#include "websocketpp/logger/basic.hpp"
 
 // RNG
-#include <websocketpp/random/none.hpp>
+#include "websocketpp/random/none.hpp"
 
 // User stub base classes
-#include <websocketpp/endpoint_base.hpp>
-#include <websocketpp/connection_base.hpp>
+#include "websocketpp/endpoint_base.hpp"
+#include "websocketpp/connection_base.hpp"
 
 // Extensions
-#include <websocketpp/extensions/permessage_deflate/disabled.hpp>
+#include "websocketpp/extensions/permessage_deflate/disabled.hpp"
 
 namespace websocketpp {
 namespace config {
diff --git a/websocketpp/config/debug_asio.hpp b/websocketpp/config/debug_asio.hpp
index a57c736..dd07e41 100644
--- a/websocketpp/config/debug_asio.hpp
+++ b/websocketpp/config/debug_asio.hpp
@@ -28,12 +28,12 @@
 #ifndef WEBSOCKETPP_CONFIG_ASIO_TLS_DEBUG_HPP
 #define WEBSOCKETPP_CONFIG_ASIO_TLS_DEBUG_HPP
 
-#include <websocketpp/config/debug.hpp>
-#include <websocketpp/transport/asio/endpoint.hpp>
-#include <websocketpp/transport/asio/security/tls.hpp>
+#include "websocketpp/config/debug.hpp"
+#include "websocketpp/transport/asio/endpoint.hpp"
+#include "websocketpp/transport/asio/security/tls.hpp"
 
 // Pull in non-tls config
-#include <websocketpp/config/debug_asio_no_tls.hpp>
+#include "websocketpp/config/debug_asio_no_tls.hpp"
 
 // Define TLS config
 namespace websocketpp {
diff --git a/websocketpp/config/debug_asio_no_tls.hpp b/websocketpp/config/debug_asio_no_tls.hpp
index b3dc83b..5a68b9f 100644
--- a/websocketpp/config/debug_asio_no_tls.hpp
+++ b/websocketpp/config/debug_asio_no_tls.hpp
@@ -28,8 +28,8 @@
 #ifndef WEBSOCKETPP_CONFIG_ASIO_DEBUG_HPP
 #define WEBSOCKETPP_CONFIG_ASIO_DEBUG_HPP
 
-#include <websocketpp/config/debug.hpp>
-#include <websocketpp/transport/asio/endpoint.hpp>
+#include "websocketpp/config/debug.hpp"
+#include "websocketpp/transport/asio/endpoint.hpp"
 
 namespace websocketpp {
 namespace config {
diff --git a/websocketpp/config/minimal_client.hpp b/websocketpp/config/minimal_client.hpp
index 72528cd..a72d6a3 100644
--- a/websocketpp/config/minimal_client.hpp
+++ b/websocketpp/config/minimal_client.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_CONFIG_MINIMAL_CLIENT_HPP
 #define WEBSOCKETPP_CONFIG_MINIMAL_CLIENT_HPP
 
-#include <websocketpp/config/minimal_server.hpp>
+#include "websocketpp/config/minimal_server.hpp"
 
 namespace websocketpp {
 namespace config {
diff --git a/websocketpp/config/minimal_server.hpp b/websocketpp/config/minimal_server.hpp
index dd1aedb..297e705 100644
--- a/websocketpp/config/minimal_server.hpp
+++ b/websocketpp/config/minimal_server.hpp
@@ -29,36 +29,36 @@
 #define WEBSOCKETPP_CONFIG_MINIMAL_HPP
 
 // Non-Policy common stuff
-#include <websocketpp/common/platforms.hpp>
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/stdint.hpp>
+#include "websocketpp/common/platforms.hpp"
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/stdint.hpp"
 
 // Concurrency
-#include <websocketpp/concurrency/none.hpp>
+#include "websocketpp/concurrency/none.hpp"
 
 // Transport
-#include <websocketpp/transport/stub/endpoint.hpp>
+#include "websocketpp/transport/stub/endpoint.hpp"
 
 // HTTP
-#include <websocketpp/http/request.hpp>
-#include <websocketpp/http/response.hpp>
+#include "websocketpp/http/request.hpp"
+#include "websocketpp/http/response.hpp"
 
 // Messages
-#include <websocketpp/message_buffer/message.hpp>
-#include <websocketpp/message_buffer/alloc.hpp>
+#include "websocketpp/message_buffer/message.hpp"
+#include "websocketpp/message_buffer/alloc.hpp"
 
 // Loggers
-#include <websocketpp/logger/stub.hpp>
+#include "websocketpp/logger/stub.hpp"
 
 // RNG
-#include <websocketpp/random/none.hpp>
+#include "websocketpp/random/none.hpp"
 
 // User stub base classes
-#include <websocketpp/endpoint_base.hpp>
-#include <websocketpp/connection_base.hpp>
+#include "websocketpp/endpoint_base.hpp"
+#include "websocketpp/connection_base.hpp"
 
 // Extensions
-#include <websocketpp/extensions/permessage_deflate/disabled.hpp>
+#include "websocketpp/extensions/permessage_deflate/disabled.hpp"
 
 namespace websocketpp {
 namespace config {
diff --git a/websocketpp/connection.hpp b/websocketpp/connection.hpp
index d019fce..6c04e32 100644
--- a/websocketpp/connection.hpp
+++ b/websocketpp/connection.hpp
@@ -28,18 +28,18 @@
 #ifndef WEBSOCKETPP_CONNECTION_HPP
 #define WEBSOCKETPP_CONNECTION_HPP
 
-#include <websocketpp/close.hpp>
-#include <websocketpp/error.hpp>
-#include <websocketpp/frame.hpp>
+#include "websocketpp/close.hpp"
+#include "websocketpp/error.hpp"
+#include "websocketpp/frame.hpp"
 
-#include <websocketpp/logger/levels.hpp>
-#include <websocketpp/processors/processor.hpp>
-#include <websocketpp/transport/base/connection.hpp>
-#include <websocketpp/http/constants.hpp>
+#include "websocketpp/logger/levels.hpp"
+#include "websocketpp/processors/processor.hpp"
+#include "websocketpp/transport/base/connection.hpp"
+#include "websocketpp/http/constants.hpp"
 
-#include <websocketpp/common/connection_hdl.hpp>
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/functional.hpp>
+#include "websocketpp/common/connection_hdl.hpp"
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/functional.hpp"
 
 #include <queue>
 #include <sstream>
@@ -1637,6 +1637,6 @@ private:
 
 } // namespace websocketpp
 
-#include <websocketpp/impl/connection_impl.hpp>
+#include "websocketpp/impl/connection_impl.hpp"
 
 #endif // WEBSOCKETPP_CONNECTION_HPP
diff --git a/websocketpp/endpoint.hpp b/websocketpp/endpoint.hpp
index c124b1d..1c7aca4 100644
--- a/websocketpp/endpoint.hpp
+++ b/websocketpp/endpoint.hpp
@@ -28,10 +28,10 @@
 #ifndef WEBSOCKETPP_ENDPOINT_HPP
 #define WEBSOCKETPP_ENDPOINT_HPP
 
-#include <websocketpp/connection.hpp>
+#include "websocketpp/connection.hpp"
 
-#include <websocketpp/logger/levels.hpp>
-#include <websocketpp/version.hpp>
+#include "websocketpp/logger/levels.hpp"
+#include "websocketpp/version.hpp"
 
 #include <string>
 
@@ -695,6 +695,6 @@ private:
 
 } // namespace websocketpp
 
-#include <websocketpp/impl/endpoint_impl.hpp>
+#include "websocketpp/impl/endpoint_impl.hpp"
 
 #endif // WEBSOCKETPP_ENDPOINT_HPP
diff --git a/websocketpp/error.hpp b/websocketpp/error.hpp
index 562fb6e..9eada85 100644
--- a/websocketpp/error.hpp
+++ b/websocketpp/error.hpp
@@ -32,8 +32,8 @@
 #include <string>
 #include <utility>
 
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/system_error.hpp>
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/system_error.hpp"
 
 namespace websocketpp {
 
diff --git a/websocketpp/extensions/extension.hpp b/websocketpp/extensions/extension.hpp
index f5fbd9f..9f453a0 100644
--- a/websocketpp/extensions/extension.hpp
+++ b/websocketpp/extensions/extension.hpp
@@ -28,8 +28,8 @@
 #ifndef WEBSOCKETPP_EXTENSION_HPP
 #define WEBSOCKETPP_EXTENSION_HPP
 
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/system_error.hpp>
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/system_error.hpp"
 
 #include <string>
 #include <vector>
diff --git a/websocketpp/extensions/permessage_deflate/disabled.hpp b/websocketpp/extensions/permessage_deflate/disabled.hpp
index 6573095..0963598 100644
--- a/websocketpp/extensions/permessage_deflate/disabled.hpp
+++ b/websocketpp/extensions/permessage_deflate/disabled.hpp
@@ -28,12 +28,12 @@
 #ifndef WEBSOCKETPP_EXTENSION_PERMESSAGE_DEFLATE_DISABLED_HPP
 #define WEBSOCKETPP_EXTENSION_PERMESSAGE_DEFLATE_DISABLED_HPP
 
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/stdint.hpp>
-#include <websocketpp/common/system_error.hpp>
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/stdint.hpp"
+#include "websocketpp/common/system_error.hpp"
 
-#include <websocketpp/http/constants.hpp>
-#include <websocketpp/extensions/extension.hpp>
+#include "websocketpp/http/constants.hpp"
+#include "websocketpp/extensions/extension.hpp"
 
 #include <map>
 #include <string>
diff --git a/websocketpp/extensions/permessage_deflate/enabled.hpp b/websocketpp/extensions/permessage_deflate/enabled.hpp
index d05403a..7df32d1 100644
--- a/websocketpp/extensions/permessage_deflate/enabled.hpp
+++ b/websocketpp/extensions/permessage_deflate/enabled.hpp
@@ -29,14 +29,14 @@
 #define WEBSOCKETPP_PROCESSOR_EXTENSION_PERMESSAGEDEFLATE_HPP
 
 
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/memory.hpp>
-#include <websocketpp/common/platforms.hpp>
-#include <websocketpp/common/stdint.hpp>
-#include <websocketpp/common/system_error.hpp>
-#include <websocketpp/error.hpp>
-
-#include <websocketpp/extensions/extension.hpp>
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/memory.hpp"
+#include "websocketpp/common/platforms.hpp"
+#include "websocketpp/common/stdint.hpp"
+#include "websocketpp/common/system_error.hpp"
+#include "websocketpp/error.hpp"
+
+#include "websocketpp/extensions/extension.hpp"
 
 #include "zlib.h"
 
diff --git a/websocketpp/frame.hpp b/websocketpp/frame.hpp
index 18a990b..c00ef85 100644
--- a/websocketpp/frame.hpp
+++ b/websocketpp/frame.hpp
@@ -31,10 +31,10 @@
 #include <algorithm>
 #include <string>
 
-#include <websocketpp/common/system_error.hpp>
-#include <websocketpp/common/network.hpp>
+#include "websocketpp/common/system_error.hpp"
+#include "websocketpp/common/network.hpp"
 
-#include <websocketpp/utilities.hpp>
+#include "websocketpp/utilities.hpp"
 
 namespace websocketpp {
 /// Data structures and utility functions for manipulating WebSocket frames
diff --git a/websocketpp/http/impl/request.hpp b/websocketpp/http/impl/request.hpp
index 311a620..4c4be7f 100644
--- a/websocketpp/http/impl/request.hpp
+++ b/websocketpp/http/impl/request.hpp
@@ -32,7 +32,7 @@
 #include <sstream>
 #include <string>
 
-#include <websocketpp/http/parser.hpp>
+#include "websocketpp/http/parser.hpp"
 
 namespace websocketpp {
 namespace http {
diff --git a/websocketpp/http/impl/response.hpp b/websocketpp/http/impl/response.hpp
index 4400cda..f27df1b 100644
--- a/websocketpp/http/impl/response.hpp
+++ b/websocketpp/http/impl/response.hpp
@@ -33,7 +33,7 @@
 #include <sstream>
 #include <string>
 
-#include <websocketpp/http/parser.hpp>
+#include "websocketpp/http/parser.hpp"
 
 namespace websocketpp {
 namespace http {
diff --git a/websocketpp/http/parser.hpp b/websocketpp/http/parser.hpp
index 9d309ec..4c850d4 100644
--- a/websocketpp/http/parser.hpp
+++ b/websocketpp/http/parser.hpp
@@ -33,8 +33,8 @@
 #include <string>
 #include <utility>
 
-#include <websocketpp/utilities.hpp>
-#include <websocketpp/http/constants.hpp>
+#include "websocketpp/utilities.hpp"
+#include "websocketpp/http/constants.hpp"
 
 namespace websocketpp {
 namespace http {
@@ -624,6 +624,6 @@ protected:
 } // namespace http
 } // namespace websocketpp
 
-#include <websocketpp/http/impl/parser.hpp>
+#include "websocketpp/http/impl/parser.hpp"
 
 #endif // HTTP_PARSER_HPP
diff --git a/websocketpp/http/request.hpp b/websocketpp/http/request.hpp
index 3355c99..5e08a6f 100644
--- a/websocketpp/http/request.hpp
+++ b/websocketpp/http/request.hpp
@@ -30,8 +30,8 @@
 
 #include <string>
 
-#include <websocketpp/common/memory.hpp>
-#include <websocketpp/http/parser.hpp>
+#include "websocketpp/common/memory.hpp"
+#include "websocketpp/http/parser.hpp"
 
 namespace websocketpp {
 namespace http {
@@ -119,6 +119,6 @@ private:
 } // namespace http
 } // namespace websocketpp
 
-#include <websocketpp/http/impl/request.hpp>
+#include "websocketpp/http/impl/request.hpp"
 
 #endif // HTTP_PARSER_REQUEST_HPP
diff --git a/websocketpp/http/response.hpp b/websocketpp/http/response.hpp
index e724a3d..0d29137 100644
--- a/websocketpp/http/response.hpp
+++ b/websocketpp/http/response.hpp
@@ -31,7 +31,7 @@
 #include <iostream>
 #include <string>
 
-#include <websocketpp/http/parser.hpp>
+#include "websocketpp/http/parser.hpp"
 
 namespace websocketpp {
 namespace http {
@@ -183,6 +183,6 @@ private:
 } // namespace http
 } // namespace websocketpp
 
-#include <websocketpp/http/impl/response.hpp>
+#include "websocketpp/http/impl/response.hpp"
 
 #endif // HTTP_PARSER_RESPONSE_HPP
diff --git a/websocketpp/impl/connection_impl.hpp b/websocketpp/impl/connection_impl.hpp
index bf88c95..6711eee 100644
--- a/websocketpp/impl/connection_impl.hpp
+++ b/websocketpp/impl/connection_impl.hpp
@@ -28,15 +28,15 @@
 #ifndef WEBSOCKETPP_CONNECTION_IMPL_HPP
 #define WEBSOCKETPP_CONNECTION_IMPL_HPP
 
-#include <websocketpp/processors/hybi00.hpp>
-#include <websocketpp/processors/hybi07.hpp>
-#include <websocketpp/processors/hybi08.hpp>
-#include <websocketpp/processors/hybi13.hpp>
+#include "websocketpp/processors/hybi00.hpp"
+#include "websocketpp/processors/hybi07.hpp"
+#include "websocketpp/processors/hybi08.hpp"
+#include "websocketpp/processors/hybi13.hpp"
 
-#include <websocketpp/processors/processor.hpp>
+#include "websocketpp/processors/processor.hpp"
 
-#include <websocketpp/common/platforms.hpp>
-#include <websocketpp/common/system_error.hpp>
+#include "websocketpp/common/platforms.hpp"
+#include "websocketpp/common/system_error.hpp"
 
 #include <algorithm>
 #include <exception>
diff --git a/websocketpp/logger/basic.hpp b/websocketpp/logger/basic.hpp
index 8451413..4cda702 100644
--- a/websocketpp/logger/basic.hpp
+++ b/websocketpp/logger/basic.hpp
@@ -40,11 +40,11 @@
  *
  */
 
-#include <websocketpp/logger/levels.hpp>
+#include "websocketpp/logger/levels.hpp"
 
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/stdint.hpp>
-#include <websocketpp/common/time.hpp>
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/stdint.hpp"
+#include "websocketpp/common/time.hpp"
 
 #include <ctime>
 #include <iostream>
diff --git a/websocketpp/logger/levels.hpp b/websocketpp/logger/levels.hpp
index cd7ccd6..a938dc7 100644
--- a/websocketpp/logger/levels.hpp
+++ b/websocketpp/logger/levels.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_LOGGER_LEVELS_HPP
 #define WEBSOCKETPP_LOGGER_LEVELS_HPP
 
-#include <websocketpp/common/stdint.hpp>
+#include "websocketpp/common/stdint.hpp"
 
 namespace websocketpp {
 namespace log {
diff --git a/websocketpp/logger/stub.hpp b/websocketpp/logger/stub.hpp
index 2db6da7..a175cb9 100644
--- a/websocketpp/logger/stub.hpp
+++ b/websocketpp/logger/stub.hpp
@@ -28,9 +28,9 @@
 #ifndef WEBSOCKETPP_LOGGER_STUB_HPP
 #define WEBSOCKETPP_LOGGER_STUB_HPP
 
-#include <websocketpp/logger/levels.hpp>
+#include "websocketpp/logger/levels.hpp"
 
-#include <websocketpp/common/cpp11.hpp>
+#include "websocketpp/common/cpp11.hpp"
 
 #include <string>
 
diff --git a/websocketpp/logger/syslog.hpp b/websocketpp/logger/syslog.hpp
index 513abee..636e5aa 100644
--- a/websocketpp/logger/syslog.hpp
+++ b/websocketpp/logger/syslog.hpp
@@ -33,10 +33,10 @@
 
 #include <syslog.h>
 
-#include <websocketpp/logger/basic.hpp>
+#include "websocketpp/logger/basic.hpp"
 
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/logger/levels.hpp>
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/logger/levels.hpp"
 
 namespace websocketpp {
 namespace log {
diff --git a/websocketpp/message_buffer/alloc.hpp b/websocketpp/message_buffer/alloc.hpp
index 75d8976..93ba2db 100644
--- a/websocketpp/message_buffer/alloc.hpp
+++ b/websocketpp/message_buffer/alloc.hpp
@@ -28,8 +28,8 @@
 #ifndef WEBSOCKETPP_MESSAGE_BUFFER_ALLOC_HPP
 #define WEBSOCKETPP_MESSAGE_BUFFER_ALLOC_HPP
 
-#include <websocketpp/common/memory.hpp>
-#include <websocketpp/frame.hpp>
+#include "websocketpp/common/memory.hpp"
+#include "websocketpp/frame.hpp"
 
 namespace websocketpp {
 namespace message_buffer {
diff --git a/websocketpp/message_buffer/message.hpp b/websocketpp/message_buffer/message.hpp
index da36e20..f22cb09 100644
--- a/websocketpp/message_buffer/message.hpp
+++ b/websocketpp/message_buffer/message.hpp
@@ -28,8 +28,8 @@
 #ifndef WEBSOCKETPP_MESSAGE_BUFFER_MESSAGE_HPP
 #define WEBSOCKETPP_MESSAGE_BUFFER_MESSAGE_HPP
 
-#include <websocketpp/common/memory.hpp>
-#include <websocketpp/frame.hpp>
+#include "websocketpp/common/memory.hpp"
+#include "websocketpp/frame.hpp"
 
 #include <string>
 
diff --git a/websocketpp/message_buffer/pool.hpp b/websocketpp/message_buffer/pool.hpp
index 3af9e02..ac27127 100644
--- a/websocketpp/message_buffer/pool.hpp
+++ b/websocketpp/message_buffer/pool.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_MESSAGE_BUFFER_ALLOC_HPP
 #define WEBSOCKETPP_MESSAGE_BUFFER_ALLOC_HPP
 
-#include <websocketpp/common/memory.hpp>
+#include "websocketpp/common/memory.hpp"
 
 #include <string>
 
diff --git a/websocketpp/processors/base.hpp b/websocketpp/processors/base.hpp
index 4c123df..626a11e 100644
--- a/websocketpp/processors/base.hpp
+++ b/websocketpp/processors/base.hpp
@@ -28,12 +28,12 @@
 #ifndef WEBSOCKETPP_PROCESSOR_BASE_HPP
 #define WEBSOCKETPP_PROCESSOR_BASE_HPP
 
-#include <websocketpp/close.hpp>
-#include <websocketpp/utilities.hpp>
-#include <websocketpp/uri.hpp>
+#include "websocketpp/close.hpp"
+#include "websocketpp/utilities.hpp"
+#include "websocketpp/uri.hpp"
 
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/system_error.hpp>
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/system_error.hpp"
 
 #include <string>
 
diff --git a/websocketpp/processors/hybi00.hpp b/websocketpp/processors/hybi00.hpp
index 95ad9df..51a11f9 100644
--- a/websocketpp/processors/hybi00.hpp
+++ b/websocketpp/processors/hybi00.hpp
@@ -28,15 +28,15 @@
 #ifndef WEBSOCKETPP_PROCESSOR_HYBI00_HPP
 #define WEBSOCKETPP_PROCESSOR_HYBI00_HPP
 
-#include <websocketpp/frame.hpp>
-#include <websocketpp/http/constants.hpp>
+#include "websocketpp/frame.hpp"
+#include "websocketpp/http/constants.hpp"
 
-#include <websocketpp/utf8_validator.hpp>
-#include <websocketpp/common/network.hpp>
-#include <websocketpp/common/md5.hpp>
-#include <websocketpp/common/platforms.hpp>
+#include "websocketpp/utf8_validator.hpp"
+#include "websocketpp/common/network.hpp"
+#include "websocketpp/common/md5.hpp"
+#include "websocketpp/common/platforms.hpp"
 
-#include <websocketpp/processors/processor.hpp>
+#include "websocketpp/processors/processor.hpp"
 
 #include <algorithm>
 #include <cstdlib>
diff --git a/websocketpp/processors/hybi07.hpp b/websocketpp/processors/hybi07.hpp
index 14b67c2..4dc24d2 100644
--- a/websocketpp/processors/hybi07.hpp
+++ b/websocketpp/processors/hybi07.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_PROCESSOR_HYBI07_HPP
 #define WEBSOCKETPP_PROCESSOR_HYBI07_HPP
 
-#include <websocketpp/processors/hybi08.hpp>
+#include "websocketpp/processors/hybi08.hpp"
 
 #include <string>
 #include <vector>
diff --git a/websocketpp/processors/hybi08.hpp b/websocketpp/processors/hybi08.hpp
index 15f6e65..a03e0f9 100644
--- a/websocketpp/processors/hybi08.hpp
+++ b/websocketpp/processors/hybi08.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_PROCESSOR_HYBI08_HPP
 #define WEBSOCKETPP_PROCESSOR_HYBI08_HPP
 
-#include <websocketpp/processors/hybi13.hpp>
+#include "websocketpp/processors/hybi13.hpp"
 
 #include <string>
 #include <vector>
diff --git a/websocketpp/processors/hybi13.hpp b/websocketpp/processors/hybi13.hpp
index ca12439..f309ea6 100644
--- a/websocketpp/processors/hybi13.hpp
+++ b/websocketpp/processors/hybi13.hpp
@@ -28,17 +28,17 @@
 #ifndef WEBSOCKETPP_PROCESSOR_HYBI13_HPP
 #define WEBSOCKETPP_PROCESSOR_HYBI13_HPP
 
-#include <websocketpp/processors/processor.hpp>
+#include "websocketpp/processors/processor.hpp"
 
-#include <websocketpp/frame.hpp>
-#include <websocketpp/http/constants.hpp>
+#include "websocketpp/frame.hpp"
+#include "websocketpp/http/constants.hpp"
 
-#include <websocketpp/utf8_validator.hpp>
-#include <websocketpp/sha1/sha1.hpp>
-#include <websocketpp/base64/base64.hpp>
+#include "websocketpp/utf8_validator.hpp"
+#include "websocketpp/sha1/sha1.hpp"
+#include "websocketpp/base64/base64.hpp"
 
-#include <websocketpp/common/network.hpp>
-#include <websocketpp/common/platforms.hpp>
+#include "websocketpp/common/network.hpp"
+#include "websocketpp/common/platforms.hpp"
 
 #include <algorithm>
 #include <cassert>
diff --git a/websocketpp/processors/processor.hpp b/websocketpp/processors/processor.hpp
index 5131cc4..1dbe51e 100644
--- a/websocketpp/processors/processor.hpp
+++ b/websocketpp/processors/processor.hpp
@@ -28,12 +28,12 @@
 #ifndef WEBSOCKETPP_PROCESSOR_HPP
 #define WEBSOCKETPP_PROCESSOR_HPP
 
-#include <websocketpp/processors/base.hpp>
-#include <websocketpp/common/system_error.hpp>
+#include "websocketpp/processors/base.hpp"
+#include "websocketpp/common/system_error.hpp"
 
-#include <websocketpp/close.hpp>
-#include <websocketpp/utilities.hpp>
-#include <websocketpp/uri.hpp>
+#include "websocketpp/close.hpp"
+#include "websocketpp/utilities.hpp"
+#include "websocketpp/uri.hpp"
 
 #include <sstream>
 #include <string>
diff --git a/websocketpp/random/random_device.hpp b/websocketpp/random/random_device.hpp
index 91e7dd1..11fc910 100644
--- a/websocketpp/random/random_device.hpp
+++ b/websocketpp/random/random_device.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_RANDOM_RANDOM_DEVICE_HPP
 #define WEBSOCKETPP_RANDOM_RANDOM_DEVICE_HPP
 
-#include <websocketpp/common/random.hpp>
+#include "websocketpp/common/random.hpp"
 
 namespace websocketpp {
 namespace random {
diff --git a/websocketpp/roles/client_endpoint.hpp b/websocketpp/roles/client_endpoint.hpp
index 4d0c433..6a16c05 100644
--- a/websocketpp/roles/client_endpoint.hpp
+++ b/websocketpp/roles/client_endpoint.hpp
@@ -28,12 +28,12 @@
 #ifndef WEBSOCKETPP_CLIENT_ENDPOINT_HPP
 #define WEBSOCKETPP_CLIENT_ENDPOINT_HPP
 
-#include <websocketpp/endpoint.hpp>
-#include <websocketpp/uri.hpp>
+#include "websocketpp/endpoint.hpp"
+#include "websocketpp/uri.hpp"
 
-#include <websocketpp/logger/levels.hpp>
+#include "websocketpp/logger/levels.hpp"
 
-#include <websocketpp/common/system_error.hpp>
+#include "websocketpp/common/system_error.hpp"
 
 #include <string>
 
diff --git a/websocketpp/roles/server_endpoint.hpp b/websocketpp/roles/server_endpoint.hpp
index 9cc652f..7f6e446 100644
--- a/websocketpp/roles/server_endpoint.hpp
+++ b/websocketpp/roles/server_endpoint.hpp
@@ -28,11 +28,11 @@
 #ifndef WEBSOCKETPP_SERVER_ENDPOINT_HPP
 #define WEBSOCKETPP_SERVER_ENDPOINT_HPP
 
-#include <websocketpp/endpoint.hpp>
+#include "websocketpp/endpoint.hpp"
 
-#include <websocketpp/logger/levels.hpp>
+#include "websocketpp/logger/levels.hpp"
 
-#include <websocketpp/common/system_error.hpp>
+#include "websocketpp/common/system_error.hpp"
 
 namespace websocketpp {
 
diff --git a/websocketpp/server.hpp b/websocketpp/server.hpp
index 342fa8c..f19fc14 100644
--- a/websocketpp/server.hpp
+++ b/websocketpp/server.hpp
@@ -28,6 +28,6 @@
 #ifndef WEBSOCKETPP_SERVER_HPP
 #define WEBSOCKETPP_SERVER_HPP
 
-#include <websocketpp/roles/server_endpoint.hpp>
+#include "websocketpp/roles/server_endpoint.hpp"
 
 #endif //WEBSOCKETPP_SERVER_HPP
diff --git a/websocketpp/transport/asio/base.hpp b/websocketpp/transport/asio/base.hpp
index b945fe1..aa84764 100644
--- a/websocketpp/transport/asio/base.hpp
+++ b/websocketpp/transport/asio/base.hpp
@@ -28,11 +28,11 @@
 #ifndef WEBSOCKETPP_TRANSPORT_ASIO_BASE_HPP
 #define WEBSOCKETPP_TRANSPORT_ASIO_BASE_HPP
 
-#include <websocketpp/common/asio.hpp>
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/functional.hpp>
-#include <websocketpp/common/system_error.hpp>
-#include <websocketpp/common/type_traits.hpp>
+#include "websocketpp/common/asio.hpp"
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/functional.hpp"
+#include "websocketpp/common/system_error.hpp"
+#include "websocketpp/common/type_traits.hpp"
 
 #include <string>
 
diff --git a/websocketpp/transport/asio/connection.hpp b/websocketpp/transport/asio/connection.hpp
index 57dda74..c67f42c 100644
--- a/websocketpp/transport/asio/connection.hpp
+++ b/websocketpp/transport/asio/connection.hpp
@@ -28,23 +28,23 @@
 #ifndef WEBSOCKETPP_TRANSPORT_ASIO_CON_HPP
 #define WEBSOCKETPP_TRANSPORT_ASIO_CON_HPP
 
-#include <websocketpp/transport/asio/base.hpp>
+#include "websocketpp/transport/asio/base.hpp"
 
-#include <websocketpp/transport/base/connection.hpp>
+#include "websocketpp/transport/base/connection.hpp"
 
-#include <websocketpp/logger/levels.hpp>
-#include <websocketpp/http/constants.hpp>
+#include "websocketpp/logger/levels.hpp"
+#include "websocketpp/http/constants.hpp"
 
-#include <websocketpp/base64/base64.hpp>
-#include <websocketpp/error.hpp>
-#include <websocketpp/uri.hpp>
+#include "websocketpp/base64/base64.hpp"
+#include "websocketpp/error.hpp"
+#include "websocketpp/uri.hpp"
 
-#include <websocketpp/common/asio.hpp>
-#include <websocketpp/common/chrono.hpp>
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/memory.hpp>
-#include <websocketpp/common/functional.hpp>
-#include <websocketpp/common/connection_hdl.hpp>
+#include "websocketpp/common/asio.hpp"
+#include "websocketpp/common/chrono.hpp"
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/memory.hpp"
+#include "websocketpp/common/functional.hpp"
+#include "websocketpp/common/connection_hdl.hpp"
 
 #include <istream>
 #include <sstream>
@@ -86,9 +86,9 @@ public:
     typedef typename response_type::ptr response_ptr;
 
     /// Type of a pointer to the Asio io_service being used
-    typedef lib::asio::io_service * io_service_ptr;
+    typedef lib::asio::io_context * io_service_ptr;
     /// Type of a pointer to the Asio io_service::strand being used
-    typedef lib::shared_ptr<lib::asio::io_service::strand> strand_ptr;
+    typedef lib::shared_ptr<lib::asio::io_context::strand> strand_ptr;
     /// Type of a pointer to the Asio timer class
     typedef lib::shared_ptr<lib::asio::steady_timer> timer_ptr;
 
@@ -462,7 +462,7 @@ protected:
         m_io_service = io_service;
 
         if (config::enable_multithreading) {
-            m_strand.reset(new lib::asio::io_service::strand(*io_service));
+            m_strand.reset(new lib::asio::io_context::strand(*io_service));
         }
 
         lib::error_code ec = socket_con_type::init_asio(io_service, m_strand,
@@ -572,8 +572,9 @@ protected:
     void handle_post_init(timer_ptr post_timer, init_handler callback,
         lib::error_code const & ec)
     {
+        static_assert(std::is_same<lib::asio::steady_timer, boost::asio::steady_timer>::value, "Wrong type!");
         if (ec == transport::error::operation_aborted ||
-            (post_timer && lib::asio::is_neg(post_timer->expires_from_now())))
+            (post_timer && lib::asio::is_neg(post_timer->expiry())))
         {
             m_alog->write(log::alevel::devel,"post_init cancelled");
             return;
@@ -679,7 +680,7 @@ protected:
         // Whatever aborted it will be issuing the callback so we are safe to
         // return
         if (ec == lib::asio::error::operation_aborted ||
-            lib::asio::is_neg(m_proxy_data->timer->expires_from_now()))
+            lib::asio::is_neg(m_proxy_data->timer->expiry()))
         {
             m_elog->write(log::elevel::devel,"write operation aborted");
             return;
@@ -751,7 +752,7 @@ protected:
         // Whatever aborted it will be issuing the callback so we are safe to
         // return
         if (ec == lib::asio::error::operation_aborted ||
-            lib::asio::is_neg(m_proxy_data->timer->expires_from_now()))
+            lib::asio::is_neg(m_proxy_data->timer->expiry()))
         {
             m_elog->write(log::elevel::devel,"read operation aborted");
             return;
@@ -1012,18 +1013,18 @@ protected:
      */
     lib::error_code interrupt(interrupt_handler handler) {
         if (config::enable_multithreading) {
-            m_io_service->post(m_strand->wrap(handler));
+            boost::asio::post(m_strand->wrap(handler));
         } else {
-            m_io_service->post(handler);
+            boost::asio::post(handler);
         }
         return lib::error_code();
     }
 
     lib::error_code dispatch(dispatch_handler handler) {
         if (config::enable_multithreading) {
-            m_io_service->post(m_strand->wrap(handler));
+            boost::asio::post(m_strand->wrap(handler));
         } else {
-            m_io_service->post(handler);
+            boost::asio::post(handler);
         }
         return lib::error_code();
     }
@@ -1095,7 +1096,7 @@ protected:
         callback, lib::asio::error_code const & ec)
     {
         if (ec == lib::asio::error::operation_aborted ||
-            lib::asio::is_neg(shutdown_timer->expires_from_now()))
+            lib::asio::is_neg(shutdown_timer->expiry()))
         {
             m_alog->write(log::alevel::devel,"async_shutdown cancelled");
             return;
diff --git a/websocketpp/transport/asio/endpoint.hpp b/websocketpp/transport/asio/endpoint.hpp
index 94509ad..29dc951 100644
--- a/websocketpp/transport/asio/endpoint.hpp
+++ b/websocketpp/transport/asio/endpoint.hpp
@@ -28,15 +28,15 @@
 #ifndef WEBSOCKETPP_TRANSPORT_ASIO_HPP
 #define WEBSOCKETPP_TRANSPORT_ASIO_HPP
 
-#include <websocketpp/transport/base/endpoint.hpp>
-#include <websocketpp/transport/asio/connection.hpp>
-#include <websocketpp/transport/asio/security/none.hpp>
+#include "websocketpp/transport/base/endpoint.hpp"
+#include "websocketpp/transport/asio/connection.hpp"
+#include "websocketpp/transport/asio/security/none.hpp"
 
-#include <websocketpp/uri.hpp>
-#include <websocketpp/logger/levels.hpp>
+#include "websocketpp/uri.hpp"
+#include "websocketpp/logger/levels.hpp"
 
-#include <websocketpp/common/asio.hpp>
-#include <websocketpp/common/functional.hpp>
+#include "websocketpp/common/asio.hpp"
+#include "websocketpp/common/functional.hpp"
 
 #include <sstream>
 #include <string>
@@ -78,7 +78,7 @@ public:
     typedef typename transport_con_type::ptr transport_con_ptr;
 
     /// Type of a pointer to the ASIO io_service being used
-    typedef lib::asio::io_service * io_service_ptr;
+    typedef lib::asio::io_context * io_service_ptr;
     /// Type of a shared pointer to the acceptor being used
     typedef lib::shared_ptr<lib::asio::ip::tcp::acceptor> acceptor_ptr;
     /// Type of a shared pointer to the resolver being used
@@ -86,7 +86,8 @@ public:
     /// Type of timer handle
     typedef lib::shared_ptr<lib::asio::steady_timer> timer_ptr;
     /// Type of a shared pointer to an io_service work object
-    typedef lib::shared_ptr<lib::asio::io_service::work> work_ptr;
+    typedef lib::asio::executor_work_guard<lib::asio::io_context::executor_type> work_type;
+    typedef lib::shared_ptr<work_type> work_ptr;
 
     /// Type of socket pre-bind handler
     typedef lib::function<lib::error_code(acceptor_ptr)> tcp_pre_bind_handler;
@@ -95,7 +96,7 @@ public:
     explicit endpoint()
       : m_io_service(NULL)
       , m_external_io_service(false)
-      , m_listen_backlog(lib::asio::socket_base::max_connections)
+      , m_listen_backlog(lib::asio::socket_base::max_listen_connections)
       , m_reuse_addr(false)
       , m_state(UNINITIALIZED)
     {
@@ -135,7 +136,7 @@ public:
       , m_io_service(src.m_io_service)
       , m_external_io_service(src.m_external_io_service)
       , m_acceptor(src.m_acceptor)
-      , m_listen_backlog(lib::asio::socket_base::max_connections)
+      , m_listen_backlog(lib::asio::socket_base::max_listen_connections)
       , m_reuse_addr(src.m_reuse_addr)
       , m_elog(src.m_elog)
       , m_alog(src.m_alog)
@@ -159,7 +160,7 @@ public:
             rhs.m_io_service = NULL;
             rhs.m_external_io_service = false;
             rhs.m_acceptor = NULL;
-            rhs.m_listen_backlog = lib::asio::socket_base::max_connections;
+            rhs.m_listen_backlog = lib::asio::socket_base::max_listen_connections;
             rhs.m_state = UNINITIALIZED;
             
             // TODO: this needs to be updated
@@ -230,9 +231,9 @@ public:
         // TODO: remove the use of auto_ptr when C++98/03 support is no longer
         //       necessary.
 #ifdef _WEBSOCKETPP_CPP11_MEMORY_
-        lib::unique_ptr<lib::asio::io_service> service(new lib::asio::io_service());
+        lib::unique_ptr<lib::asio::io_context> service(new lib::asio::io_context());
 #else
-        lib::auto_ptr<lib::asio::io_service> service(new lib::asio::io_service());
+        lib::auto_ptr<lib::asio::io_context> service(new lib::asio::io_context());
 #endif
         init_asio(service.get(), ec);
         if( !ec ) service.release(); // Call was successful, transfer ownership
@@ -252,9 +253,9 @@ public:
         // TODO: remove the use of auto_ptr when C++98/03 support is no longer
         //       necessary.
 #ifdef _WEBSOCKETPP_CPP11_MEMORY_
-        lib::unique_ptr<lib::asio::io_service> service(new lib::asio::io_service());
+        lib::unique_ptr<lib::asio::io_context> service(new lib::asio::io_context());
 #else
-        lib::auto_ptr<lib::asio::io_service> service(new lib::asio::io_service());
+        lib::auto_ptr<lib::asio::io_context> service(new lib::asio::io_context());
 #endif
         init_asio( service.get() );
         // If control got this far without an exception, then ownership has successfully been taken
@@ -330,7 +331,7 @@ public:
      *
      * New values affect future calls to listen only.
      *
-     * The default value is specified as *::asio::socket_base::max_connections
+     * The default value is specified as *::asio::socket_base::max_listen_connections
      * which uses the operating system defined maximum queue length. Your OS
      * may restrict or silently lower this value. A value of zero may cause
      * all connections to be rejected.
@@ -375,7 +376,7 @@ public:
      *
      * @return A reference to the endpoint's io_service
      */
-    lib::asio::io_service & get_io_service() {
+    lib::asio::io_context & get_io_service() {
         return *m_io_service;
     }
     
@@ -558,9 +559,8 @@ public:
     {
         using lib::asio::ip::tcp;
         tcp::resolver r(*m_io_service);
-        tcp::resolver::query query(host, service);
-        tcp::resolver::iterator endpoint_iterator = r.resolve(query);
-        tcp::resolver::iterator end;
+        tcp::resolver::results_type endpoint_iterator = r.resolve(host, service);
+        tcp::resolver::results_type end;
         if (endpoint_iterator == end) {
             m_elog->write(log::elevel::library,
                 "asio::listen could not resolve the supplied host or service");
@@ -666,7 +666,7 @@ public:
 
     /// wraps the reset method of the internal io_service object
     void reset() {
-        m_io_service->reset();
+        m_io_service->restart();
     }
 
     /// wraps the stopped method of the internal io_service object
@@ -687,7 +687,9 @@ public:
      * @since 0.3.0
      */
     void start_perpetual() {
-        m_work.reset(new lib::asio::io_service::work(*m_io_service));
+        m_work.reset(new lib::asio::executor_work_guard<lib::asio::io_context::executor_type>(
+            m_io_service->get_executor()
+        ));
     }
 
     /// Clears the endpoint's perpetual flag, allowing it to exit when empty
@@ -883,8 +885,6 @@ protected:
             port = pu->get_port_str();
         }
 
-        tcp::resolver::query query(host,port);
-
         if (m_alog->static_test(log::alevel::devel)) {
             m_alog->write(log::alevel::devel,
                 "starting async DNS resolve for "+host+":"+port);
@@ -905,7 +905,8 @@ protected:
 
         if (config::enable_multithreading) {
             m_resolver->async_resolve(
-                query,
+                host,
+                port,
                 tcon->get_strand()->wrap(lib::bind(
                     &type::handle_resolve,
                     this,
@@ -918,7 +919,8 @@ protected:
             );
         } else {
             m_resolver->async_resolve(
-                query,
+                host,
+                port,
                 lib::bind(
                     &type::handle_resolve,
                     this,
@@ -966,10 +968,10 @@ protected:
 
     void handle_resolve(transport_con_ptr tcon, timer_ptr dns_timer,
         connect_handler callback, lib::asio::error_code const & ec,
-        lib::asio::ip::tcp::resolver::iterator iterator)
+        lib::asio::ip::tcp::resolver::results_type iterator)
     {
         if (ec == lib::asio::error::operation_aborted ||
-            lib::asio::is_neg(dns_timer->expires_from_now()))
+            lib::asio::is_neg(dns_timer->expiry()))
         {
             m_alog->write(log::alevel::devel,"async_resolve cancelled");
             return;
@@ -987,9 +989,8 @@ protected:
             std::stringstream s;
             s << "Async DNS resolve successful. Results: ";
 
-            lib::asio::ip::tcp::resolver::iterator it, end;
-            for (it = iterator; it != end; ++it) {
-                s << (*it).endpoint() << " ";
+            for (auto const& entry : iterator) {
+                s << entry.endpoint() << " ";
             }
 
             m_alog->write(log::alevel::devel,s.str());
@@ -1077,7 +1078,7 @@ protected:
         connect_handler callback, lib::asio::error_code const & ec)
     {
         if (ec == lib::asio::error::operation_aborted ||
-            lib::asio::is_neg(con_timer->expires_from_now()))
+            lib::asio::is_neg(con_timer->expiry()))
         {
             m_alog->write(log::alevel::devel,"async_connect cancelled");
             return;
diff --git a/websocketpp/transport/asio/security/base.hpp b/websocketpp/transport/asio/security/base.hpp
index 0f08f40..dc69038 100644
--- a/websocketpp/transport/asio/security/base.hpp
+++ b/websocketpp/transport/asio/security/base.hpp
@@ -28,12 +28,12 @@
 #ifndef WEBSOCKETPP_TRANSPORT_ASIO_SOCKET_BASE_HPP
 #define WEBSOCKETPP_TRANSPORT_ASIO_SOCKET_BASE_HPP
 
-#include <websocketpp/common/asio.hpp>
-#include <websocketpp/common/memory.hpp>
-#include <websocketpp/common/functional.hpp>
-#include <websocketpp/common/system_error.hpp>
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/connection_hdl.hpp>
+#include "websocketpp/common/asio.hpp"
+#include "websocketpp/common/memory.hpp"
+#include "websocketpp/common/functional.hpp"
+#include "websocketpp/common/system_error.hpp"
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/connection_hdl.hpp"
 
 #include <string>
 
diff --git a/websocketpp/transport/asio/security/none.hpp b/websocketpp/transport/asio/security/none.hpp
index 6c7d352..0af1c4b 100644
--- a/websocketpp/transport/asio/security/none.hpp
+++ b/websocketpp/transport/asio/security/none.hpp
@@ -28,13 +28,13 @@
 #ifndef WEBSOCKETPP_TRANSPORT_SECURITY_NONE_HPP
 #define WEBSOCKETPP_TRANSPORT_SECURITY_NONE_HPP
 
-#include <websocketpp/uri.hpp>
+#include "websocketpp/uri.hpp"
 
-#include <websocketpp/transport/base/connection.hpp>
-#include <websocketpp/transport/asio/security/base.hpp>
+#include "websocketpp/transport/base/connection.hpp"
+#include "websocketpp/transport/asio/security/base.hpp"
 
-#include <websocketpp/common/asio.hpp>
-#include <websocketpp/common/memory.hpp>
+#include "websocketpp/common/asio.hpp"
+#include "websocketpp/common/memory.hpp"
 
 #include <sstream>
 #include <string>
@@ -63,9 +63,9 @@ public:
     typedef lib::shared_ptr<type> ptr;
 
     /// Type of a pointer to the Asio io_service being used
-    typedef lib::asio::io_service* io_service_ptr;
+    typedef lib::asio::io_context* io_service_ptr;
     /// Type of a pointer to the Asio io_service strand being used
-    typedef lib::shared_ptr<lib::asio::io_service::strand> strand_ptr;
+    typedef lib::shared_ptr<lib::asio::io_context::strand> strand_ptr;
     /// Type of the ASIO socket being used
     typedef lib::asio::ip::tcp::socket socket_type;
     /// Type of a shared pointer to the socket being used.
diff --git a/websocketpp/transport/asio/security/tls.hpp b/websocketpp/transport/asio/security/tls.hpp
index 04ac379..301734e 100644
--- a/websocketpp/transport/asio/security/tls.hpp
+++ b/websocketpp/transport/asio/security/tls.hpp
@@ -28,15 +28,15 @@
 #ifndef WEBSOCKETPP_TRANSPORT_SECURITY_TLS_HPP
 #define WEBSOCKETPP_TRANSPORT_SECURITY_TLS_HPP
 
-#include <websocketpp/transport/asio/security/base.hpp>
+#include "websocketpp/transport/asio/security/base.hpp"
 
-#include <websocketpp/uri.hpp>
+#include "websocketpp/uri.hpp"
 
-#include <websocketpp/common/asio_ssl.hpp>
-#include <websocketpp/common/asio.hpp>
-#include <websocketpp/common/connection_hdl.hpp>
-#include <websocketpp/common/functional.hpp>
-#include <websocketpp/common/memory.hpp>
+#include "websocketpp/common/asio_ssl.hpp"
+#include "websocketpp/common/asio.hpp"
+#include "websocketpp/common/connection_hdl.hpp"
+#include "websocketpp/common/functional.hpp"
+#include "websocketpp/common/memory.hpp"
 
 #include <sstream>
 #include <string>
@@ -72,9 +72,9 @@ public:
     /// Type of a shared pointer to the ASIO socket being used
     typedef lib::shared_ptr<socket_type> socket_ptr;
     /// Type of a pointer to the ASIO io_service being used
-    typedef lib::asio::io_service * io_service_ptr;
+    typedef lib::asio::io_context * io_service_ptr;
     /// Type of a pointer to the ASIO io_service strand being used
-    typedef lib::shared_ptr<lib::asio::io_service::strand> strand_ptr;
+    typedef lib::shared_ptr<lib::asio::io_context::strand> strand_ptr;
     /// Type of a shared pointer to the ASIO TLS context being used
     typedef lib::shared_ptr<lib::asio::ssl::context> context_ptr;
 
diff --git a/websocketpp/transport/base/connection.hpp b/websocketpp/transport/base/connection.hpp
index f76d409..fafdc66 100644
--- a/websocketpp/transport/base/connection.hpp
+++ b/websocketpp/transport/base/connection.hpp
@@ -28,10 +28,10 @@
 #ifndef WEBSOCKETPP_TRANSPORT_BASE_CON_HPP
 #define WEBSOCKETPP_TRANSPORT_BASE_CON_HPP
 
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/connection_hdl.hpp>
-#include <websocketpp/common/functional.hpp>
-#include <websocketpp/common/system_error.hpp>
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/connection_hdl.hpp"
+#include "websocketpp/common/functional.hpp"
+#include "websocketpp/common/system_error.hpp"
 
 #include <string>
 
diff --git a/websocketpp/transport/base/endpoint.hpp b/websocketpp/transport/base/endpoint.hpp
index 4ed3e70..fb4d4b7 100644
--- a/websocketpp/transport/base/endpoint.hpp
+++ b/websocketpp/transport/base/endpoint.hpp
@@ -28,8 +28,8 @@
 #ifndef WEBSOCKETPP_TRANSPORT_BASE_HPP
 #define WEBSOCKETPP_TRANSPORT_BASE_HPP
 
-#include <websocketpp/common/functional.hpp>
-#include <websocketpp/common/system_error.hpp>
+#include "websocketpp/common/functional.hpp"
+#include "websocketpp/common/system_error.hpp"
 
 namespace websocketpp {
 /// Transport policies provide network connectivity and timers
diff --git a/websocketpp/transport/debug/base.hpp b/websocketpp/transport/debug/base.hpp
index 2e477b5..ca2a029 100644
--- a/websocketpp/transport/debug/base.hpp
+++ b/websocketpp/transport/debug/base.hpp
@@ -28,8 +28,8 @@
 #ifndef WEBSOCKETPP_TRANSPORT_DEBUG_BASE_HPP
 #define WEBSOCKETPP_TRANSPORT_DEBUG_BASE_HPP
 
-#include <websocketpp/common/system_error.hpp>
-#include <websocketpp/common/cpp11.hpp>
+#include "websocketpp/common/system_error.hpp"
+#include "websocketpp/common/cpp11.hpp"
 
 #include <string>
 
diff --git a/websocketpp/transport/debug/connection.hpp b/websocketpp/transport/debug/connection.hpp
index ce13969..e5a1f2c 100644
--- a/websocketpp/transport/debug/connection.hpp
+++ b/websocketpp/transport/debug/connection.hpp
@@ -28,16 +28,16 @@
 #ifndef WEBSOCKETPP_TRANSPORT_DEBUG_CON_HPP
 #define WEBSOCKETPP_TRANSPORT_DEBUG_CON_HPP
 
-#include <websocketpp/transport/debug/base.hpp>
+#include "websocketpp/transport/debug/base.hpp"
 
-#include <websocketpp/transport/base/connection.hpp>
+#include "websocketpp/transport/base/connection.hpp"
 
-#include <websocketpp/uri.hpp>
-#include <websocketpp/logger/levels.hpp>
+#include "websocketpp/uri.hpp"
+#include "websocketpp/logger/levels.hpp"
 
-#include <websocketpp/common/connection_hdl.hpp>
-#include <websocketpp/common/memory.hpp>
-#include <websocketpp/common/platforms.hpp>
+#include "websocketpp/common/connection_hdl.hpp"
+#include "websocketpp/common/memory.hpp"
+#include "websocketpp/common/platforms.hpp"
 
 #include <string>
 #include <vector>
diff --git a/websocketpp/transport/debug/endpoint.hpp b/websocketpp/transport/debug/endpoint.hpp
index adc89b3..e845d32 100644
--- a/websocketpp/transport/debug/endpoint.hpp
+++ b/websocketpp/transport/debug/endpoint.hpp
@@ -28,11 +28,11 @@
 #ifndef WEBSOCKETPP_TRANSPORT_DEBUG_HPP
 #define WEBSOCKETPP_TRANSPORT_DEBUG_HPP
 
-#include <websocketpp/common/memory.hpp>
-#include <websocketpp/logger/levels.hpp>
+#include "websocketpp/common/memory.hpp"
+#include "websocketpp/logger/levels.hpp"
 
-#include <websocketpp/transport/base/endpoint.hpp>
-#include <websocketpp/transport/debug/connection.hpp>
+#include "websocketpp/transport/base/endpoint.hpp"
+#include "websocketpp/transport/debug/connection.hpp"
 
 namespace websocketpp {
 namespace transport {
diff --git a/websocketpp/transport/iostream/base.hpp b/websocketpp/transport/iostream/base.hpp
index f878398..b1c03d8 100644
--- a/websocketpp/transport/iostream/base.hpp
+++ b/websocketpp/transport/iostream/base.hpp
@@ -28,12 +28,12 @@
 #ifndef WEBSOCKETPP_TRANSPORT_IOSTREAM_BASE_HPP
 #define WEBSOCKETPP_TRANSPORT_IOSTREAM_BASE_HPP
 
-#include <websocketpp/common/system_error.hpp>
-#include <websocketpp/common/cpp11.hpp>
-#include <websocketpp/common/functional.hpp>
-#include <websocketpp/common/connection_hdl.hpp>
+#include "websocketpp/common/system_error.hpp"
+#include "websocketpp/common/cpp11.hpp"
+#include "websocketpp/common/functional.hpp"
+#include "websocketpp/common/connection_hdl.hpp"
 
-#include <websocketpp/transport/base/connection.hpp>
+#include "websocketpp/transport/base/connection.hpp"
 
 #include <string>
 #include <vector>
diff --git a/websocketpp/transport/iostream/connection.hpp b/websocketpp/transport/iostream/connection.hpp
index 899a3e2..efb10fa 100644
--- a/websocketpp/transport/iostream/connection.hpp
+++ b/websocketpp/transport/iostream/connection.hpp
@@ -28,17 +28,17 @@
 #ifndef WEBSOCKETPP_TRANSPORT_IOSTREAM_CON_HPP
 #define WEBSOCKETPP_TRANSPORT_IOSTREAM_CON_HPP
 
-#include <websocketpp/transport/iostream/base.hpp>
+#include "websocketpp/transport/iostream/base.hpp"
 
-#include <websocketpp/transport/base/connection.hpp>
+#include "websocketpp/transport/base/connection.hpp"
 
-#include <websocketpp/uri.hpp>
+#include "websocketpp/uri.hpp"
 
-#include <websocketpp/logger/levels.hpp>
+#include "websocketpp/logger/levels.hpp"
 
-#include <websocketpp/common/connection_hdl.hpp>
-#include <websocketpp/common/memory.hpp>
-#include <websocketpp/common/platforms.hpp>
+#include "websocketpp/common/connection_hdl.hpp"
+#include "websocketpp/common/memory.hpp"
+#include "websocketpp/common/platforms.hpp"
 
 #include <algorithm>
 #include <iostream>
diff --git a/websocketpp/transport/iostream/endpoint.hpp b/websocketpp/transport/iostream/endpoint.hpp
index 14cba72..91e4c69 100644
--- a/websocketpp/transport/iostream/endpoint.hpp
+++ b/websocketpp/transport/iostream/endpoint.hpp
@@ -28,13 +28,13 @@
 #ifndef WEBSOCKETPP_TRANSPORT_IOSTREAM_HPP
 #define WEBSOCKETPP_TRANSPORT_IOSTREAM_HPP
 
-#include <websocketpp/transport/base/endpoint.hpp>
-#include <websocketpp/transport/iostream/connection.hpp>
+#include "websocketpp/transport/base/endpoint.hpp"
+#include "websocketpp/transport/iostream/connection.hpp"
 
-#include <websocketpp/uri.hpp>
-#include <websocketpp/logger/levels.hpp>
+#include "websocketpp/uri.hpp"
+#include "websocketpp/logger/levels.hpp"
 
-#include <websocketpp/common/memory.hpp>
+#include "websocketpp/common/memory.hpp"
 
 #include <ostream>
 
diff --git a/websocketpp/transport/stub/base.hpp b/websocketpp/transport/stub/base.hpp
index 754981e..d16e3f8 100644
--- a/websocketpp/transport/stub/base.hpp
+++ b/websocketpp/transport/stub/base.hpp
@@ -28,8 +28,8 @@
 #ifndef WEBSOCKETPP_TRANSPORT_STUB_BASE_HPP
 #define WEBSOCKETPP_TRANSPORT_STUB_BASE_HPP
 
-#include <websocketpp/common/system_error.hpp>
-#include <websocketpp/common/cpp11.hpp>
+#include "websocketpp/common/system_error.hpp"
+#include "websocketpp/common/cpp11.hpp"
 
 #include <string>
 
diff --git a/websocketpp/transport/stub/connection.hpp b/websocketpp/transport/stub/connection.hpp
index 5bbbf0d..0c8ce0d 100644
--- a/websocketpp/transport/stub/connection.hpp
+++ b/websocketpp/transport/stub/connection.hpp
@@ -28,15 +28,15 @@
 #ifndef WEBSOCKETPP_TRANSPORT_STUB_CON_HPP
 #define WEBSOCKETPP_TRANSPORT_STUB_CON_HPP
 
-#include <websocketpp/transport/stub/base.hpp>
+#include "websocketpp/transport/stub/base.hpp"
 
-#include <websocketpp/transport/base/connection.hpp>
+#include "websocketpp/transport/base/connection.hpp"
 
-#include <websocketpp/logger/levels.hpp>
+#include "websocketpp/logger/levels.hpp"
 
-#include <websocketpp/common/connection_hdl.hpp>
-#include <websocketpp/common/memory.hpp>
-#include <websocketpp/common/platforms.hpp>
+#include "websocketpp/common/connection_hdl.hpp"
+#include "websocketpp/common/memory.hpp"
+#include "websocketpp/common/platforms.hpp"
 
 #include <string>
 #include <vector>
diff --git a/websocketpp/transport/stub/endpoint.hpp b/websocketpp/transport/stub/endpoint.hpp
index 3bbb78f..a0a01c9 100644
--- a/websocketpp/transport/stub/endpoint.hpp
+++ b/websocketpp/transport/stub/endpoint.hpp
@@ -28,11 +28,11 @@
 #ifndef WEBSOCKETPP_TRANSPORT_STUB_HPP
 #define WEBSOCKETPP_TRANSPORT_STUB_HPP
 
-#include <websocketpp/common/memory.hpp>
-#include <websocketpp/logger/levels.hpp>
+#include "websocketpp/common/memory.hpp"
+#include "websocketpp/logger/levels.hpp"
 
-#include <websocketpp/transport/base/endpoint.hpp>
-#include <websocketpp/transport/stub/connection.hpp>
+#include "websocketpp/transport/base/endpoint.hpp"
+#include "websocketpp/transport/stub/connection.hpp"
 
 namespace websocketpp {
 namespace transport {
diff --git a/websocketpp/uri.hpp b/websocketpp/uri.hpp
index c0b8b0c..2f309d8 100644
--- a/websocketpp/uri.hpp
+++ b/websocketpp/uri.hpp
@@ -28,10 +28,10 @@
 #ifndef WEBSOCKETPP_URI_HPP
 #define WEBSOCKETPP_URI_HPP
 
-#include <websocketpp/error.hpp>
+#include "websocketpp/error.hpp"
 
-#include <websocketpp/common/memory.hpp>
-#include <websocketpp/common/stdint.hpp>
+#include "websocketpp/common/memory.hpp"
+#include "websocketpp/common/stdint.hpp"
 
 #include <algorithm>
 #include <sstream>
diff --git a/websocketpp/utf8_validator.hpp b/websocketpp/utf8_validator.hpp
index c057da6..3e7d604 100644
--- a/websocketpp/utf8_validator.hpp
+++ b/websocketpp/utf8_validator.hpp
@@ -29,7 +29,7 @@
 #ifndef UTF8_VALIDATOR_HPP
 #define UTF8_VALIDATOR_HPP
 
-#include <websocketpp/common/stdint.hpp>
+#include "websocketpp/common/stdint.hpp"
 
 #include <string>
 
diff --git a/websocketpp/utilities.hpp b/websocketpp/utilities.hpp
index b983c9f..0a40252 100644
--- a/websocketpp/utilities.hpp
+++ b/websocketpp/utilities.hpp
@@ -28,7 +28,7 @@
 #ifndef WEBSOCKETPP_UTILITIES_HPP
 #define WEBSOCKETPP_UTILITIES_HPP
 
-#include <websocketpp/common/stdint.hpp>
+#include "websocketpp/common/stdint.hpp"
 
 #include <algorithm>
 #include <string>
@@ -175,6 +175,6 @@ std::string to_hex(char const * input, size_t length);
 } // namespace utility
 } // namespace websocketpp
 
-#include <websocketpp/impl/utilities_impl.hpp>
+#include "websocketpp/impl/utilities_impl.hpp"
 
 #endif // WEBSOCKETPP_UTILITIES_HPP
