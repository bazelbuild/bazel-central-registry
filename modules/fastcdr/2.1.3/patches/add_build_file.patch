diff --git BUILD.bazel BUILD.bazel
new file mode 100644
index 0000000..3d2dc8d
--- /dev/null
+++ BUILD.bazel
@@ -0,0 +1,61 @@
+load(
+    "//bazel:cmake_configure_file.bzl",
+    "cmake_configure_file",
+)
+
+config_setting(
+    name = "osx_arm64",
+    constraint_values = [
+        "@platforms//os:osx",
+        "@platforms//cpu:arm64",
+    ],
+)
+
+cmake_configure_file(
+    name = "config",
+    src = "include/fastcdr/config.h.in",
+    out = "include/fastcdr/config.h",
+    cmakelists = [
+        "CMakeLists.txt",
+    ],
+    defines = [
+        "FASTCDR_HAVE_FLOAT128=0",
+        "FASTCDR_IS_BIG_ENDIAN_TARGET=0",
+        "HAVE_CXX11",
+        "PROJECT_VERSION=2.1.3",
+        "PROJECT_VERSION_MAJOR=2",
+        "PROJECT_VERSION_MINOR=1",
+        "PROJECT_VERSION_PATCH=3",
+    ] + select({
+        ":osx_arm64": [
+            "FASTCDR_SIZEOF_LONG_DOUBLE=8",
+        ],
+        "//conditions:default": [
+            "FASTCDR_SIZEOF_LONG_DOUBLE=16",
+        ],
+    }),
+    visibility = ["//visibility:private"],
+)
+
+cc_library(
+    name = "fastcdr",
+    hdrs = glob([
+        "include/**/*.h",
+        "include/**/*.hpp"
+    ]) + [
+        ":config",
+    ],
+    srcs = [
+        "src/cpp/Cdr.cpp",
+        "src/cpp/CdrSizeCalculator.cpp",
+        "src/cpp/FastCdr.cpp",
+        "src/cpp/FastBuffer.cpp",
+        "src/cpp/exceptions/BadOptionalAccessException.cpp",
+        "src/cpp/exceptions/BadParamException.cpp",
+        "src/cpp/exceptions/Exception.cpp",
+        "src/cpp/exceptions/LockedExternalAccessException.cpp",
+        "src/cpp/exceptions/NotEnoughMemoryException.cpp",
+    ],
+    strip_include_prefix = "include",
+    visibility = ["//visibility:public"],
+)
