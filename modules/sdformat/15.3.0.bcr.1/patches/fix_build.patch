--- BUILD.bazel
+++ BUILD.bazel
@@ -1,6 +1,7 @@
 load("@buildifier_prebuilt//:rules.bzl", "buildifier", "buildifier_test")
 load("@rules_gazebo//gazebo:headers.bzl", "gz_configure_header", "gz_export_header")
 load("@rules_license//rules:license.bzl", "license")
+load("@rules_python//python:py_binary.bzl", "py_binary")
 
 package(
     default_applicable_licenses = [":license"],
@@ -101,10 +102,8 @@ cc_library(
             # Bazel does not generate top-level includes, so exclude the redirect
             "include/sdf/sdf.hh",
         ],
-    ),
-    data = [
-        "sdf",
-    ],
+    ) + ["include/sdf/config.hh"],
+    data = glob(["sdf/**"]),
     defines = [
         "CMAKE_INSTALL_RELATIVE_DATAROOTDIR=\\\"\\\"",
         'SDF_SHARE_PATH=\\".\\"',
@@ -116,7 +115,6 @@ cc_library(
     ],
     visibility = ["//visibility:public"],
     deps = [
-        ":Config",
         ":Export",
         ":urdf_parser",
         "@gz-math",
@@ -147,12 +145,20 @@ test_sources = glob(
     cc_test(
         name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
         srcs = [src],
+        copts = [
+            # Some tests are for private headers
+            "-Wno-private-header",
+        ],
         deps = [
             ":sdformat",
             "//test:test_utils",
             "@googletest//:gtest",
             "@googletest//:gtest_main",
+            "@gz-math",
+            "@gz-utils//:Environment",
             "@gz-utils//:ExtraTestMacros",
+            "@gz-utils//:SuppressWarning",
+            "@tinyxml2",
         ],
     )
     for src in test_sources
@@ -177,6 +183,7 @@ cc_test(
         "//test:test_utils",
         "@googletest//:gtest",
         "@googletest//:gtest_main",
+        "@tinyxml2",
     ],
 )
 
@@ -191,7 +198,6 @@ cc_test(
         "//test:sdf",
     ],
     deps = [
-        ":Config",
         ":sdformat",
         "//test:test_utils",
         "@googletest//:gtest",
@@ -243,7 +249,6 @@ cc_test(
         "//test:sdf",
     ],
     deps = [
-        ":Config",
         ":sdformat",
         "//test:test_utils",
         "@googletest//:gtest",
