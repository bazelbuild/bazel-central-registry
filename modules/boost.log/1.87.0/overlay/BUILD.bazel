load("@rules_cc//cc:defs.bzl", "cc_library")

package(default_visibility = ["//visibility:public"])

# See https://www.boost.org/doc/libs/1_87_0/libs/log/doc/html/log/installation/config.html

cc_library(
    name = "boost.log",
    srcs = glob([
        "src/*.*pp",
        "src/setup/*.*pp",
    ]) + select({
        "@platforms//os:linux": glob(["src/posix/*.*pp"]),
        "@platforms//os:windows": glob(["src/windows/*.*pp"]),
        "//conditions:default": [],
    }),
    hdrs = glob(["include/**/*.hpp"]),
    copts = select({
        "@platforms//cpu:x86_64": [
            "-mavx2",
            "-mssse3",
        ],
        "//conditions:default": [],
    }),
    features = ["parse_headers"],
    includes = [
        "include",
        "src",
    ],
    linkopts = select({
        "@platforms//os:linux": ["-lrt"],
        "@platforms//os:windows": [
            "secur32",
            "psapi",
            "ws2_32",
            "mswsock",
            "advapi32",
        ],
        "//conditions:default": [],
    }),
    local_defines = [
        "__STDC_CONSTANT_MACROS",
        "BOOST_LOG_BUILDING_THE_LIB",
        "BOOST_LOG_NO_LIB",
        "BOOST_LOG_SETUP_BUILDING_THE_LIB",
        "BOOST_LOG_USE_NATIVE_SYSLOG",
        "BOOST_LOG_USE_STD_REGEX",
        "BOOST_SPIRIT_USE_PHOENIX_V3=1",
        "BOOST_THREAD_DONT_USE_CHRONO",
    ] + select({
        "@platforms//cpu:x86_64": [
            "BOOST_LOG_USE_AVX2",
            "BOOST_LOG_USE_SSSE3",
        ],
        "//conditions:default": [],
    }) + select({
        "@platforms//os:linux": ["_XOPEN_SOURCE=600"],
        "@platforms//os:windows": [
            "BOOST_USE_WINDOWS_H",
            "WIN32_LEAN_AND_MEAN",
            "NOMINMAX",
            "SECURITY_WIN32",
        ],
        "//conditions:default": [],
    }),
    deps = [
        "@boost.align",
        "@boost.asio",
        "@boost.assert",
        "@boost.atomic",
        "@boost.bind",
        "@boost.config",
        "@boost.core",
        "@boost.exception",
        "@boost.filesystem",
        "@boost.fusion",
        "@boost.interprocess",
        "@boost.iterator",
        "@boost.move",
        "@boost.mpl",
        "@boost.optional",
        "@boost.parameter",
        "@boost.phoenix",
        "@boost.preprocessor",
        "@boost.property_tree",
        "@boost.random",
        "@boost.smart_ptr",
        "@boost.thread",
        "@boost.type_traits",
    ],
)
