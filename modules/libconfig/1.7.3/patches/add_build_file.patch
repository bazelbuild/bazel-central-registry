--- /dev/null
+++ BUILD.bazel
@@ -0,0 +1,50 @@
+""" Builds libconfig.
+"""
+
+_LIBCONFIG_PUB_HEADERS = ["libconfig.h"]
+_LIBCONFIG_IN_PUB_HEADERS = ["lib/" + hdr for hdr in _LIBCONFIG_PUB_HEADERS]
+_LIBCONFIG_OUT_PUB_HEADERS = ["include/" + hdr for hdr in _LIBCONFIG_PUB_HEADERS]
+
+# In order to limit the damage from the `includes` propagation
+# via `:libconfig`, copy the public headers to a subdirectory and
+# expose those.
+genrule(
+    name = "copy_public_headers",
+    srcs = _LIBCONFIG_IN_PUB_HEADERS,
+    outs = _LIBCONFIG_OUT_PUB_HEADERS,
+    cmd_bash = "cp $(SRCS) $(@D)",
+    cmd_bat = " && ".join(
+        ["@copy /Y $(location %s) $(@D)  >NUL" %
+         s for s in _LIBCONFIG_IN_PUB_HEADERS],
+    ),
+)
+
+cc_library(
+    name = "libconfig",
+    srcs = [
+        "lib/grammar.h",
+        "lib/parsectx.h",
+        "lib/scanctx.h",
+        "lib/scanner.h",
+        "lib/strbuf.h",
+        "lib/strvec.h",
+        "lib/util.h",
+        "lib/wincompat.h",
+        "lib/grammar.c",
+        "lib/libconfig.c",
+        "lib/scanctx.c",
+        "lib/scanner.c",
+        "lib/strbuf.c",
+        "lib/strvec.c",
+        "lib/util.c",
+        "lib/wincompat.c",
+    ] + _LIBCONFIG_IN_PUB_HEADERS,
+    hdrs = _LIBCONFIG_OUT_PUB_HEADERS,
+    copts = ["-w"],
+    includes = ["include"],
+    defines = select({
+        "@platforms//os:windows": ["WIN32","YY_NO_UNISTD_H"],
+        "//conditions:default": [],
+    }),
+    visibility = ["//visibility:public"],
+)
