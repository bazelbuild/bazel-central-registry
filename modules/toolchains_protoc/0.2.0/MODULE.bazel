"Bazel dependencies"

module(
    name = "toolchains_protoc",
    version = "0.2.0",
    compatibility_level = 1,
)

bazel_dep(name = "bazel_skylib", version = "1.4.1")
bazel_dep(name = "rules_proto", version = "6.0.0-rc2")
bazel_dep(name = "platforms", version = "0.0.8")

protoc = use_extension("//protoc:extensions.bzl", "protoc")
protoc.toolchain(
    google_protobuf = "com_google_protobuf",
    version = "v25.3",
)
use_repo(protoc, "com_google_protobuf", "toolchains_protoc_hub")

register_toolchains("@toolchains_protoc_hub//:all")

bazel_dep(name = "aspect_bazel_lib", version = "1.32.1", dev_dependency = True)
bazel_dep(name = "buildifier_prebuilt", version = "6.1.2", dev_dependency = True)
bazel_dep(name = "aspect_rules_py", version = "0.7.1", dev_dependency = True)
bazel_dep(name = "rules_java", version = "7.4.0", dev_dependency = True)
bazel_dep(name = "rules_python", version = "0.31.0", dev_dependency = True)

# # Update to include
# https://github.com/bazelbuild/rules_python/pull/1577
git_override(
    module_name = "rules_python",
    commit = "3edcae33dcc43051ca6f200c2d0cb3692df79d03",
    remote = "https://github.com/bazelbuild/rules_python.git",
)

register_toolchains(
    "//examples/lang_toolchains:all",
    dev_dependency = True,
)

# Shows how a typical Python user fetches all the dependencies of their app, including the protobuf runtime
pip = use_extension(
    "@rules_python//python/extensions:pip.bzl",
    "pip",
    dev_dependency = True,
)
pip.parse(
    hub_name = "pypi",
    python_version = "3.11",
    requirements_lock = "//examples/lang_toolchains:requirements.txt",
)
use_repo(pip, "pypi")
