diff --git a/MODULE.bazel b/MODULE.bazel
deleted file mode 100644
index 298bf40..0000000
--- a/MODULE.bazel
+++ /dev/null
@@ -1,13 +0,0 @@
-"""
-Module: json11
-Purpose: Provides the json11 library compileable as a Bazel target. Also includes test as bazel test target.
-Note: The source project has been archived, and this should only be used for legacy purposes!
-"""
-
-module(
-    name = "json11",
-    version = "1.0.1-0.20200325232727-2df9473fb360",
-    compatibility_level = 1,
-)
-
-bazel_dep(name = "rules_cc", version = "0.1.1")
diff --git a/test.cpp b/test.cpp
index 7ce1714..3712d10 100644
--- a/test.cpp
+++ b/test.cpp
@@ -12,2 +12,2 @@
-#define JSON11_TEST_CASE(name) static int name()
-#define JSON11_TEST_ASSERT(b) do { if (!(b)) { std::cerr << "Assertion failed: " #b " at " << __FILE__ << ":" << __LINE__ << "\n"; return 1; } } while (0)
+#define JSON11_TEST_CASE(name) static void name()
+#define JSON11_TEST_ASSERT(b) assert(b)
@@ -68,4 +67,0 @@ JSON11_TEST_CASE(json11_test) {
-    if (!err.empty()) {
-        std::cerr << "Simple test parse failed: " << err << "\n";
-        return 1;
-    }
@@ -261 +257 @@ JSON11_TEST_CASE(json11_test) {
-static int parse_from_stdin() {
+static void parse_from_stdin() {
@@ -272 +267,0 @@ static int parse_from_stdin() {
-        return 1;
@@ -275 +269,0 @@ static int parse_from_stdin() {
-        return 0;
@@ -281,7 +275,2 @@ int main(int argc, char **argv) {
-      return parse_from_stdin();
-    }
-
-    int test_result = json11_test();
-    if (test_result != 0) {
-        std::cerr << "Tests failed with " << test_result << " errors\n";
-        return 1;
+        parse_from_stdin();
+        return 0;
@@ -290,2 +279 @@ int main(int argc, char **argv) {
-    std::cout << "All tests passed\n";
-    return 0;
+    json11_test();
