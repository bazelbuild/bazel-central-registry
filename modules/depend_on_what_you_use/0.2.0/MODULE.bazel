module(
    name = "depend_on_what_you_use",
    version = "0.2.0",
    # Keep in sync with setup_step_2.bzl
    bazel_compatibility = [">=5.4.0"],
)

bazel_dep(name = "rules_cc", version = "0.0.8")
bazel_dep(name = "rules_python", version = "0.27.1")

non_module_dependencies = use_extension("//third_party:extensions.bzl", "non_module_dependencies")
use_repo(non_module_dependencies, "dwyu_pcpp")

###
### Development Dependencies
###

# Keep in sync with third_party/dependencies.bzl
bazel_dep(name = "bazel_skylib", version = "1.5.0", dev_dependency = True)

python = use_extension(
    "@rules_python//python/extensions:python.bzl",
    "python",
    dev_dependency = True,
)
python.toolchain(python_version = "3.8")

pip = use_extension(
    "@rules_python//python/extensions:pip.bzl",
    "pip",
    dev_dependency = True,
)
pip.parse(
    hub_name = "dwyu_mypy_deps",
    python_version = "3.8",
    requirements_lock = "//third_party:mypy_requirements.txt",
)
use_repo(pip, "dwyu_mypy_deps")

bazel_dep(name = "mypy_integration", dev_dependency = True)
archive_override(
    module_name = "mypy_integration",
    integrity = "sha256-V1HVImCed4/4/ZdKDoPncNOYZDrceYdvpGW2tCnGfgY=",
    strip_prefix = "bazel-mypy-integration-c289c0cd30e53b5cc467b601295834dbc400f4b2",
    urls = ["https://github.com/bazel-contrib/bazel-mypy-integration/archive/c289c0cd30e53b5cc467b601295834dbc400f4b2.tar.gz"],
)
