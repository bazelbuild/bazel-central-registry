--- core/generator_lite/Generator.cc
+++ core/generator_lite/Generator.cc
@@ -60,8 +60,8 @@ bool Generator::Generate(const FileDescriptor *_file,
                                std::string * /*_error*/) const
 {
   std::string delim = ".proto";
-  auto headerFilename = _file->name();
-  auto sourceFilename = _file->name();
+  std::string headerFilename(_file->name());
+  std::string sourceFilename(_file->name());

   {
     auto pos = headerFilename.rfind(delim);
@@ -87,26 +87,27 @@ bool Generator::Generate(const FileDescriptor *_file,
     {
       const auto *desc = _file->message_type(i);
       std::string ptrTypes;
+      std::string descName(desc->name());

       // Define std::unique_ptr types for our messages
       ptrTypes += "typedef std::unique_ptr<"
-        + desc->name() + "> "
-        + desc->name() + "UniquePtr;\n";
+        + descName + "> "
+        + descName + "UniquePtr;\n";

       // Define const std::unique_ptr types for our messages
       ptrTypes += "typedef std::unique_ptr<const "
-        + desc->name() + "> Const"
-        + desc->name() + "UniquePtr;\n";
+        + descName + "> Const"
+        + descName + "UniquePtr;\n";

       // Define std::shared_ptr types for our messages
       ptrTypes += "typedef std::shared_ptr<"
-        + desc->name() + "> "
-        + desc->name() + "SharedPtr;\n";
+        + descName + "> "
+        + descName + "SharedPtr;\n";

       // Define const std::shared_ptr types for our messages
       ptrTypes += "typedef std::shared_ptr<const "
-        + desc->name() + "> Const"
-        + desc->name() + "SharedPtr;\n";
+        + descName + "> Const"
+        + descName + "SharedPtr;\n";

       printer.PrintRaw(ptrTypes.c_str());
     }
